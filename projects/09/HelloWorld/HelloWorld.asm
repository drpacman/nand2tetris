@256D=A@SPM=D// call Sys.init 0// push ret_0@0D=A@R14M=D@Sys.initD=A@R15M=D@ret_0D=A// goto call_helper@call_helper0;JMP(ret_0)(restore_stack_and_return)// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP(call_helper)@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1@R14D=M@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D@R15A=M0;JMP(boolean_cmd_helper_JLT)@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_JLTD;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_JLT0;JMP(BOOL_JLT)@SPA=MA=A-1A=A-1M=-1(END_BOOL_JLT)@SPM=M-1@R15A=M0;JMP(boolean_cmd_helper_JGT)@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_JGTD;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_JGT0;JMP(BOOL_JGT)@SPA=MA=A-1A=A-1M=-1(END_BOOL_JGT)@SPM=M-1@R15A=M0;JMP(boolean_cmd_helper_JEQ)@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_JEQD;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_JEQ0;JMP(BOOL_JEQ)@SPA=MA=A-1A=A-1M=-1(END_BOOL_JEQ)@SPM=M-1@R15A=M0;JMP// function String.new 0(String.new)// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// call Memory.alloc 1// call Memory.alloc 1// push ret_1@1D=A@R14M=D@Memory.allocD=A@R15M=D@ret_1D=A// goto call_helper@call_helper0;JMP(ret_1)// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_0D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_1)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 14// Push 14@14D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_2@1D=A@R14M=D@Sys.errorD=A@R15M=D@ret_2D=A// goto call_helper@call_helper0;JMP(ret_2)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_1D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_2)// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call Array.new 1// call Array.new 1// push ret_3@1D=A@R14M=D@Array.newD=A@R15M=D@ret_3D=A// goto call_helper@call_helper0;JMP(ret_3)// pop this 1@THISA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE1(IF_FALSE1)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop this 0@THISA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop this 2@THISA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function String.dispose 0(String.dispose)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_2D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_3)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// call Array.dispose 1// call Array.dispose 1// push ret_4@1D=A@R14M=D@Array.disposeD=A@R15M=D@ret_4D=A// goto call_helper@call_helper0;JMP(ret_4)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// call Memory.deAlloc 1// call Memory.deAlloc 1// push ret_5@1D=A@R14M=D@Memory.deAllocD=A@R15M=D@ret_5D=A// goto call_helper@call_helper0;JMP(ret_5)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function String.length 0(String.length)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function String.charAt 0(String.charAt)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_3D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_4)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// gt@END_BOOL_4D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_5)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// eq@END_BOOL_5D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_6)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_6@1D=A@R14M=D@Sys.errorD=A@R15M=D@ret_6D=A// goto call_helper@call_helper0;JMP(ret_6)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function String.setCharAt 0(String.setCharAt)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_6D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_7)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// gt@END_BOOL_7D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_8)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// eq@END_BOOL_8D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_9)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_7@1D=A@R14M=D@Sys.errorD=A@R15M=D@ret_7D=A// goto call_helper@call_helper0;JMP(ret_7)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function String.appendChar 0(String.appendChar)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// eq@END_BOOL_9D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_10)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 17// Push 17@17D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_8@1D=A@R14M=D@Sys.errorD=A@R15M=D@ret_8D=A// goto call_helper@call_helper0;JMP(ret_8)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop this 2@THISA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function String.eraseLastChar 0(String.eraseLastChar)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_10D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_11)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 18// Push 18@18D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_9@1D=A@R14M=D@Sys.errorD=A@R15M=D@ret_9D=A// goto call_helper@call_helper0;JMP(ret_9)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop this 2@THISA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function String.intValue 5(String.intValue)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_11D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_12)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// label IF_FALSE0(IF_FALSE0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 45// Push 45@45D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_12D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_13)// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// pop local 4@LCLA=MD=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE1(IF_FALSE1)// label WHILE_EXP0(WHILE_EXP0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// lt@END_BOOL_13D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_14)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_14D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_15)// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 9// Push 9@9D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_15D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_16)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// not@SPA=MA=A-1M=!M// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// if-goto IF_TRUE2@SPM=M-1A=MD=M@IF_TRUE2D;JNE// goto IF_FALSE2@IF_FALSE20;JMP// label IF_TRUE2(IF_TRUE2)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 10// Push 10@10D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_10@2D=A@R14M=D@Math.multiplyD=A@R15M=D@ret_10D=A// goto call_helper@call_helper0;JMP(ret_10)// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE2(IF_FALSE2)// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// if-goto IF_TRUE3@SPM=M-1A=MD=M@IF_TRUE3D;JNE// goto IF_FALSE3@IF_FALSE30;JMP// label IF_TRUE3(IF_TRUE3)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE3(IF_FALSE3)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function String.setInt 4(String.setInt)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_16D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_17)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 19// Push 19@19D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_11@1D=A@R14M=D@Sys.errorD=A@R15M=D@ret_11D=A// goto call_helper@call_helper0;JMP(ret_11)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// call Array.new 1// call Array.new 1// push ret_12@1D=A@R14M=D@Array.newD=A@R15M=D@ret_12D=A// goto call_helper@call_helper0;JMP(ret_12)// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_17D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_18)// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// pop argument 1@ARGA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE1(IF_FALSE1)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_18D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_19)// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 10// Push 10@10D=A@SPA=MM=D@SPM=M+1// call Math.divide 2// call Math.divide 2// push ret_13@2D=A@R14M=D@Math.divideD=A@R15M=D@ret_13D=A// goto call_helper@call_helper0;JMP(ret_13)// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 10// Push 10@10D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_14@2D=A@R14M=D@Math.multiplyD=A@R15M=D@ret_14D=A// goto call_helper@call_helper0;JMP(ret_14)// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop argument 1@ARGA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// if-goto IF_TRUE2@SPM=M-1A=MD=M@IF_TRUE2D;JNE// goto IF_FALSE2@IF_FALSE20;JMP// label IF_TRUE2(IF_TRUE2)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 45// Push 45@45D=A@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE2(IF_FALSE2)// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// lt@END_BOOL_19D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_20)// if-goto IF_TRUE3@SPM=M-1A=MD=M@IF_TRUE3D;JNE// goto IF_FALSE3@IF_FALSE30;JMP// label IF_TRUE3(IF_TRUE3)// push constant 19// Push 19@19D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_15@1D=A@R14M=D@Sys.errorD=A@R15M=D@ret_15D=A// goto call_helper@call_helper0;JMP(ret_15)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE3(IF_FALSE3)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_20D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_21)// if-goto IF_TRUE4@SPM=M-1A=MD=M@IF_TRUE4D;JNE// goto IF_FALSE4@IF_FALSE40;JMP// label IF_TRUE4(IF_TRUE4)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// pop this 2@THISA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END4@IF_END40;JMP// label IF_FALSE4(IF_FALSE4)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop this 2@THISA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP1(WHILE_EXP1)// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// lt@END_BOOL_21D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_22)// not@SPA=MA=A-1M=!M// if-goto WHILE_END1@SPM=M-1A=MD=M@WHILE_END1D;JNE// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop this 2@THISA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP1@WHILE_EXP10;JMP// label WHILE_END1(WHILE_END1)// label IF_END4(IF_END4)// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// call Array.dispose 1// call Array.dispose 1// push ret_16@1D=A@R14M=D@Array.disposeD=A@R15M=D@ret_16D=A// goto call_helper@call_helper0;JMP(ret_16)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function String.newLine 0(String.newLine)// push constant 128// Push 128@128D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function String.backSpace 0(String.backSpace)// push constant 129// Push 129@129D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function String.doubleQuote 0(String.doubleQuote)// push constant 34// Push 34@34D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Math.init 1(Math.init)// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Array.new 1// call Array.new 1// push ret_17@1D=A@R14M=D@Array.newD=A@R15M=D@ret_17D=A// goto call_helper@call_helper0;JMP(ret_17)// pop static 1@16D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Array.new 1// call Array.new 1// push ret_18@1D=A@R14M=D@Array.newD=A@R15M=D@ret_18D=A// goto call_helper@call_helper0;JMP(ret_18)// pop static 0@16D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push static 0@16D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_0D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_1)// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 0@16D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push static 0@16D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push static 0@16D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Math.abs 0(Math.abs)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_1D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_2)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// pop argument 0@ARGA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Math.multiply 5(Math.multiply)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_2D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_3)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_3D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_4)// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_4D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_5)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_5D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_6)// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// pop local 4@LCLA=MD=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call Math.abs 1// call Math.abs 1// push ret_19@1D=A@R14M=D@Math.absD=A@R15M=D@ret_19D=A// goto call_helper@call_helper0;JMP(ret_19)// pop argument 0@ARGA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// call Math.abs 1// call Math.abs 1// push ret_20@1D=A@R14M=D@Math.absD=A@R15M=D@ret_20D=A// goto call_helper@call_helper0;JMP(ret_20)// pop argument 1@ARGA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// lt@END_BOOL_6D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_7)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop argument 0@ARGA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop argument 1@ARGA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// label WHILE_EXP0(WHILE_EXP0)// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// lt@END_BOOL_7D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_8)// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push static 0@16D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_8D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_9)// not@SPA=MA=A-1M=!M// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push static 0@16D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE1(IF_FALSE1)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop argument 0@ARGA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// if-goto IF_TRUE2@SPM=M-1A=MD=M@IF_TRUE2D;JNE// goto IF_FALSE2@IF_FALSE20;JMP// label IF_TRUE2(IF_TRUE2)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE2(IF_FALSE2)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Math.divide 4(Math.divide)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_9D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_10)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_21@1D=A@R14M=D@Sys.errorD=A@R15M=D@ret_21D=A// goto call_helper@call_helper0;JMP(ret_21)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_10D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_11)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_11D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_12)// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_12D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_13)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_13D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_14)// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push static 1@16D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// call Math.abs 1// call Math.abs 1// push ret_22@1D=A@R14M=D@Math.absD=A@R15M=D@ret_22D=A// goto call_helper@call_helper0;JMP(ret_22)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call Math.abs 1// call Math.abs 1// push ret_23@1D=A@R14M=D@Math.absD=A@R15M=D@ret_23D=A// goto call_helper@call_helper0;JMP(ret_23)// pop argument 0@ARGA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_14D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_15)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push constant 32767// Push 32767@32767D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 1@16D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 1@16D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// lt@END_BOOL_15D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_16)// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push static 1@16D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 1@16D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 1@16D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push static 1@16D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// gt@END_BOOL_16D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_17)// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// if-goto IF_TRUE2@SPM=M-1A=MD=M@IF_TRUE2D;JNE// goto IF_FALSE2@IF_FALSE20;JMP// label IF_TRUE2(IF_TRUE2)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE2(IF_FALSE2)// label IF_FALSE1(IF_FALSE1)// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// label WHILE_EXP1(WHILE_EXP1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// gt@END_BOOL_17D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_18)// not@SPA=MA=A-1M=!M// if-goto WHILE_END1@SPM=M-1A=MD=M@WHILE_END1D;JNE// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 1@16D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// gt@END_BOOL_18D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_19)// not@SPA=MA=A-1M=!M// if-goto IF_TRUE3@SPM=M-1A=MD=M@IF_TRUE3D;JNE// goto IF_FALSE3@IF_FALSE30;JMP// label IF_TRUE3(IF_TRUE3)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 0@16D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 1@16D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop argument 0@ARGA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE3(IF_FALSE3)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP1@WHILE_EXP10;JMP// label WHILE_END1(WHILE_END1)// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// if-goto IF_TRUE4@SPM=M-1A=MD=M@IF_TRUE4D;JNE// goto IF_FALSE4@IF_FALSE40;JMP// label IF_TRUE4(IF_TRUE4)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE4(IF_FALSE4)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Math.sqrt 4(Math.sqrt)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_19D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_20)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 4// Push 4@4D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_24@1D=A@R14M=D@Sys.errorD=A@R15M=D@ret_24D=A// goto call_helper@call_helper0;JMP(ret_24)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push constant 7// Push 7@7D=A@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// gt@END_BOOL_20D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_21)// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 0@16D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_25@2D=A@R14M=D@Math.multiplyD=A@R15M=D@ret_25D=A// goto call_helper@call_helper0;JMP(ret_25)// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// gt@END_BOOL_21D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_22)// not@SPA=MA=A-1M=!M// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_22D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_23)// not@SPA=MA=A-1M=!M// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE1(IF_FALSE1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Math.max 0(Math.max)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// gt@END_BOOL_23D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_24)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop argument 1@ARGA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Math.min 0(Math.min)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// lt@END_BOOL_24D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_25)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop argument 1@ARGA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Array.new 0(Array.new)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_0D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_1)// not@SPA=MA=A-1M=!M// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_26@1D=A@R14M=D@Sys.errorD=A@R15M=D@ret_26D=A// goto call_helper@call_helper0;JMP(ret_26)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call Memory.alloc 1// call Memory.alloc 1// push ret_27@1D=A@R14M=D@Memory.allocD=A@R15M=D@ret_27D=A// goto call_helper@call_helper0;JMP(ret_27)// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Array.dispose 0(Array.dispose)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// call Memory.deAlloc 1// call Memory.deAlloc 1// push ret_28@1D=A@R14M=D@Memory.deAllocD=A@R15M=D@ret_28D=A// goto call_helper@call_helper0;JMP(ret_28)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Keyboard.init 0(Keyboard.init)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Keyboard.keyPressed 0(Keyboard.keyPressed)// push constant 24576// Push 24576@24576D=A@SPA=MM=D@SPM=M+1// call Memory.peek 1// call Memory.peek 1// push ret_29@1D=A@R14M=D@Memory.peekD=A@R15M=D@ret_29D=A// goto call_helper@call_helper0;JMP(ret_29)// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Keyboard.readChar 2(Keyboard.readChar)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.printChar 1// call Output.printChar 1// push ret_30@1D=A@R14M=D@Output.printCharD=A@R15M=D@ret_30D=A// goto call_helper@call_helper0;JMP(ret_30)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_0D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_1D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_2)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// call Keyboard.keyPressed 0// call Keyboard.keyPressed 0// push ret_31@0D=A@R14M=D@Keyboard.keyPressedD=A@R15M=D@ret_31D=A// goto call_helper@call_helper0;JMP(ret_31)// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_2D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_3)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// call String.backSpace 0// call String.backSpace 0// push ret_32@0D=A@R14M=D@String.backSpaceD=A@R15M=D@ret_32D=A// goto call_helper@call_helper0;JMP(ret_32)// call Output.printChar 1// call Output.printChar 1// push ret_33@1D=A@R14M=D@Output.printCharD=A@R15M=D@ret_33D=A// goto call_helper@call_helper0;JMP(ret_33)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// call Output.printChar 1// call Output.printChar 1// push ret_34@1D=A@R14M=D@Output.printCharD=A@R15M=D@ret_34D=A// goto call_helper@call_helper0;JMP(ret_34)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Keyboard.readLine 5(Keyboard.readLine)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 80// Push 80@80D=A@SPA=MM=D@SPM=M+1// call String.new 1// call String.new 1// push ret_35@1D=A@R14M=D@String.newD=A@R15M=D@ret_35D=A// goto call_helper@call_helper0;JMP(ret_35)// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call Output.printString 1// call Output.printString 1// push ret_36@1D=A@R14M=D@Output.printStringD=A@R15M=D@ret_36D=A// goto call_helper@call_helper0;JMP(ret_36)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call String.newLine 0// call String.newLine 0// push ret_37@0D=A@R14M=D@String.newLineD=A@R15M=D@ret_37D=A// goto call_helper@call_helper0;JMP(ret_37)// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call String.backSpace 0// call String.backSpace 0// push ret_38@0D=A@R14M=D@String.backSpaceD=A@R15M=D@ret_38D=A// goto call_helper@call_helper0;JMP(ret_38)// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// call Keyboard.readChar 0// call Keyboard.readChar 0// push ret_39@0D=A@R14M=D@Keyboard.readCharD=A@R15M=D@ret_39D=A// goto call_helper@call_helper0;JMP(ret_39)// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// eq@END_BOOL_3D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_4)// pop local 4@LCLA=MD=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// eq@END_BOOL_4D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_5)// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// call String.eraseLastChar 1// call String.eraseLastChar 1// push ret_40@1D=A@R14M=D@String.eraseLastCharD=A@R15M=D@ret_40D=A// goto call_helper@call_helper0;JMP(ret_40)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END1@IF_END10;JMP// label IF_FALSE1(IF_FALSE1)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// call String.appendChar 2// call String.appendChar 2// push ret_41@2D=A@R14M=D@String.appendCharD=A@R15M=D@ret_41D=A// goto call_helper@call_helper0;JMP(ret_41)// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END1(IF_END1)// label IF_FALSE0(IF_FALSE0)// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Keyboard.readInt 2(Keyboard.readInt)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call Keyboard.readLine 1// call Keyboard.readLine 1// push ret_42@1D=A@R14M=D@Keyboard.readLineD=A@R15M=D@ret_42D=A// goto call_helper@call_helper0;JMP(ret_42)// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// call String.intValue 1// call String.intValue 1// push ret_43@1D=A@R14M=D@String.intValueD=A@R15M=D@ret_43D=A// goto call_helper@call_helper0;JMP(ret_43)// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// call String.dispose 1// call String.dispose 1// push ret_44@1D=A@R14M=D@String.disposeD=A@R15M=D@ret_44D=A// goto call_helper@call_helper0;JMP(ret_44)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Sys.init 0(Sys.init)// call Memory.init 0// call Memory.init 0// push ret_45@0D=A@R14M=D@Memory.initD=A@R15M=D@ret_45D=A// goto call_helper@call_helper0;JMP(ret_45)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call Math.init 0// call Math.init 0// push ret_46@0D=A@R14M=D@Math.initD=A@R15M=D@ret_46D=A// goto call_helper@call_helper0;JMP(ret_46)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call Screen.init 0// call Screen.init 0// push ret_47@0D=A@R14M=D@Screen.initD=A@R15M=D@ret_47D=A// goto call_helper@call_helper0;JMP(ret_47)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call Output.init 0// call Output.init 0// push ret_48@0D=A@R14M=D@Output.initD=A@R15M=D@ret_48D=A// goto call_helper@call_helper0;JMP(ret_48)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call Keyboard.init 0// call Keyboard.init 0// push ret_49@0D=A@R14M=D@Keyboard.initD=A@R15M=D@ret_49D=A// goto call_helper@call_helper0;JMP(ret_49)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call Main.main 0// call Main.main 0// push ret_50@0D=A@R14M=D@Main.mainD=A@R15M=D@ret_50D=A// goto call_helper@call_helper0;JMP(ret_50)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call Sys.halt 0// call Sys.halt 0// push ret_51@0D=A@R14M=D@Sys.haltD=A@R15M=D@ret_51D=A// goto call_helper@call_helper0;JMP(ret_51)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Sys.halt 0(Sys.halt)// label WHILE_EXP0(WHILE_EXP0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Sys.wait 1(Sys.wait)// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_0D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_1)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_52@1D=A@R14M=D@Sys.errorD=A@R15M=D@ret_52D=A// goto call_helper@call_helper0;JMP(ret_52)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// label WHILE_EXP0(WHILE_EXP0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_1D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_2)// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push constant 50// Push 50@50D=A@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP1(WHILE_EXP1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_2D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_3)// not@SPA=MA=A-1M=!M// if-goto WHILE_END1@SPM=M-1A=MD=M@WHILE_END1D;JNE// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP1@WHILE_EXP10;JMP// label WHILE_END1(WHILE_END1)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop argument 0@ARGA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Sys.error 0(Sys.error)// push constant 69// Push 69@69D=A@SPA=MM=D@SPM=M+1// call Output.printChar 1// call Output.printChar 1// push ret_53@1D=A@R14M=D@Output.printCharD=A@R15M=D@ret_53D=A// goto call_helper@call_helper0;JMP(ret_53)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 82// Push 82@82D=A@SPA=MM=D@SPM=M+1// call Output.printChar 1// call Output.printChar 1// push ret_54@1D=A@R14M=D@Output.printCharD=A@R15M=D@ret_54D=A// goto call_helper@call_helper0;JMP(ret_54)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 82// Push 82@82D=A@SPA=MM=D@SPM=M+1// call Output.printChar 1// call Output.printChar 1// push ret_55@1D=A@R14M=D@Output.printCharD=A@R15M=D@ret_55D=A// goto call_helper@call_helper0;JMP(ret_55)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call Output.printInt 1// call Output.printInt 1// push ret_56@1D=A@R14M=D@Output.printIntD=A@R15M=D@ret_56D=A// goto call_helper@call_helper0;JMP(ret_56)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call Sys.halt 0// call Sys.halt 0// push ret_57@0D=A@R14M=D@Sys.haltD=A@R15M=D@ret_57D=A// goto call_helper@call_helper0;JMP(ret_57)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Output.init 0(Output.init)// push constant 16384// Push 16384@16384D=A@SPA=MM=D@SPM=M+1// pop static 4@18D=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// pop static 2@18D=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// pop static 1@18D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop static 0@18D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// call String.new 1// call String.new 1// push ret_58@1D=A@R14M=D@String.newD=A@R15M=D@ret_58D=A// goto call_helper@call_helper0;JMP(ret_58)// pop static 3@18D=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call Output.initMap 0// call Output.initMap 0// push ret_59@0D=A@R14M=D@Output.initMapD=A@R15M=D@ret_59D=A// goto call_helper@call_helper0;JMP(ret_59)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call Output.createShiftedMap 0// call Output.createShiftedMap 0// push ret_60@0D=A@R14M=D@Output.createShiftedMapD=A@R15M=D@ret_60D=A// goto call_helper@call_helper0;JMP(ret_60)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Output.initMap 0(Output.initMap)// push constant 127// Push 127@127D=A@SPA=MM=D@SPM=M+1// call Array.new 1// call Array.new 1// push ret_61@1D=A@R14M=D@Array.newD=A@R15M=D@ret_61D=A// goto call_helper@call_helper0;JMP(ret_61)// pop static 5@18D=A@5D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_62@12D=A@R14M=D@Output.createD=A@R15M=D@ret_62D=A// goto call_helper@call_helper0;JMP(ret_62)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_63@12D=A@R14M=D@Output.createD=A@R15M=D@ret_63D=A// goto call_helper@call_helper0;JMP(ret_63)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 33// Push 33@33D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_64@12D=A@R14M=D@Output.createD=A@R15M=D@ret_64D=A// goto call_helper@call_helper0;JMP(ret_64)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 34// Push 34@34D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 20// Push 20@20D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_65@12D=A@R14M=D@Output.createD=A@R15M=D@ret_65D=A// goto call_helper@call_helper0;JMP(ret_65)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 35// Push 35@35D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 18// Push 18@18D=A@SPA=MM=D@SPM=M+1// push constant 18// Push 18@18D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 18// Push 18@18D=A@SPA=MM=D@SPM=M+1// push constant 18// Push 18@18D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 18// Push 18@18D=A@SPA=MM=D@SPM=M+1// push constant 18// Push 18@18D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_66@12D=A@R14M=D@Output.createD=A@R15M=D@ret_66D=A// goto call_helper@call_helper0;JMP(ret_66)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 36// Push 36@36D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_67@12D=A@R14M=D@Output.createD=A@R15M=D@ret_67D=A// goto call_helper@call_helper0;JMP(ret_67)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 37// Push 37@37D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 35// Push 35@35D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 49// Push 49@49D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_68@12D=A@R14M=D@Output.createD=A@R15M=D@ret_68D=A// goto call_helper@call_helper0;JMP(ret_68)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 38// Push 38@38D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_69@12D=A@R14M=D@Output.createD=A@R15M=D@ret_69D=A// goto call_helper@call_helper0;JMP(ret_69)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 39// Push 39@39D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_70@12D=A@R14M=D@Output.createD=A@R15M=D@ret_70D=A// goto call_helper@call_helper0;JMP(ret_70)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 40// Push 40@40D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_71@12D=A@R14M=D@Output.createD=A@R15M=D@ret_71D=A// goto call_helper@call_helper0;JMP(ret_71)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 41// Push 41@41D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_72@12D=A@R14M=D@Output.createD=A@R15M=D@ret_72D=A// goto call_helper@call_helper0;JMP(ret_72)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 42// Push 42@42D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_73@12D=A@R14M=D@Output.createD=A@R15M=D@ret_73D=A// goto call_helper@call_helper0;JMP(ret_73)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 43// Push 43@43D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_74@12D=A@R14M=D@Output.createD=A@R15M=D@ret_74D=A// goto call_helper@call_helper0;JMP(ret_74)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 44// Push 44@44D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_75@12D=A@R14M=D@Output.createD=A@R15M=D@ret_75D=A// goto call_helper@call_helper0;JMP(ret_75)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 45// Push 45@45D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_76@12D=A@R14M=D@Output.createD=A@R15M=D@ret_76D=A// goto call_helper@call_helper0;JMP(ret_76)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 46// Push 46@46D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_77@12D=A@R14M=D@Output.createD=A@R15M=D@ret_77D=A// goto call_helper@call_helper0;JMP(ret_77)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 47// Push 47@47D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_78@12D=A@R14M=D@Output.createD=A@R15M=D@ret_78D=A// goto call_helper@call_helper0;JMP(ret_78)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_79@12D=A@R14M=D@Output.createD=A@R15M=D@ret_79D=A// goto call_helper@call_helper0;JMP(ret_79)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 49// Push 49@49D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 14// Push 14@14D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_80@12D=A@R14M=D@Output.createD=A@R15M=D@ret_80D=A// goto call_helper@call_helper0;JMP(ret_80)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 50// Push 50@50D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_81@12D=A@R14M=D@Output.createD=A@R15M=D@ret_81D=A// goto call_helper@call_helper0;JMP(ret_81)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 28// Push 28@28D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_82@12D=A@R14M=D@Output.createD=A@R15M=D@ret_82D=A// goto call_helper@call_helper0;JMP(ret_82)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 52// Push 52@52D=A@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 28// Push 28@28D=A@SPA=MM=D@SPM=M+1// push constant 26// Push 26@26D=A@SPA=MM=D@SPM=M+1// push constant 25// Push 25@25D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 60// Push 60@60D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_83@12D=A@R14M=D@Output.createD=A@R15M=D@ret_83D=A// goto call_helper@call_helper0;JMP(ret_83)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 53// Push 53@53D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 31// Push 31@31D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_84@12D=A@R14M=D@Output.createD=A@R15M=D@ret_84D=A// goto call_helper@call_helper0;JMP(ret_84)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 28// Push 28@28D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 31// Push 31@31D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_85@12D=A@R14M=D@Output.createD=A@R15M=D@ret_85D=A// goto call_helper@call_helper0;JMP(ret_85)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 55// Push 55@55D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 49// Push 49@49D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_86@12D=A@R14M=D@Output.createD=A@R15M=D@ret_86D=A// goto call_helper@call_helper0;JMP(ret_86)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 56// Push 56@56D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_87@12D=A@R14M=D@Output.createD=A@R15M=D@ret_87D=A// goto call_helper@call_helper0;JMP(ret_87)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 57// Push 57@57D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 62// Push 62@62D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 14// Push 14@14D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_88@12D=A@R14M=D@Output.createD=A@R15M=D@ret_88D=A// goto call_helper@call_helper0;JMP(ret_88)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 58// Push 58@58D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_89@12D=A@R14M=D@Output.createD=A@R15M=D@ret_89D=A// goto call_helper@call_helper0;JMP(ret_89)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 59// Push 59@59D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_90@12D=A@R14M=D@Output.createD=A@R15M=D@ret_90D=A// goto call_helper@call_helper0;JMP(ret_90)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 60// Push 60@60D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_91@12D=A@R14M=D@Output.createD=A@R15M=D@ret_91D=A// goto call_helper@call_helper0;JMP(ret_91)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 61// Push 61@61D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_92@12D=A@R14M=D@Output.createD=A@R15M=D@ret_92D=A// goto call_helper@call_helper0;JMP(ret_92)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 62// Push 62@62D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_93@12D=A@R14M=D@Output.createD=A@R15M=D@ret_93D=A// goto call_helper@call_helper0;JMP(ret_93)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 64// Push 64@64D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 59// Push 59@59D=A@SPA=MM=D@SPM=M+1// push constant 59// Push 59@59D=A@SPA=MM=D@SPM=M+1// push constant 59// Push 59@59D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_94@12D=A@R14M=D@Output.createD=A@R15M=D@ret_94D=A// goto call_helper@call_helper0;JMP(ret_94)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_95@12D=A@R14M=D@Output.createD=A@R15M=D@ret_95D=A// goto call_helper@call_helper0;JMP(ret_95)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 65// Push 65@65D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_96@12D=A@R14M=D@Output.createD=A@R15M=D@ret_96D=A// goto call_helper@call_helper0;JMP(ret_96)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 66// Push 66@66D=A@SPA=MM=D@SPM=M+1// push constant 31// Push 31@31D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 31// Push 31@31D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 31// Push 31@31D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_97@12D=A@R14M=D@Output.createD=A@R15M=D@ret_97D=A// goto call_helper@call_helper0;JMP(ret_97)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 67// Push 67@67D=A@SPA=MM=D@SPM=M+1// push constant 28// Push 28@28D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 35// Push 35@35D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 35// Push 35@35D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 28// Push 28@28D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_98@12D=A@R14M=D@Output.createD=A@R15M=D@ret_98D=A// goto call_helper@call_helper0;JMP(ret_98)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 68// Push 68@68D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_99@12D=A@R14M=D@Output.createD=A@R15M=D@ret_99D=A// goto call_helper@call_helper0;JMP(ret_99)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 69// Push 69@69D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 35// Push 35@35D=A@SPA=MM=D@SPM=M+1// push constant 11// Push 11@11D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 11// Push 11@11D=A@SPA=MM=D@SPM=M+1// push constant 35// Push 35@35D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_100@12D=A@R14M=D@Output.createD=A@R15M=D@ret_100D=A// goto call_helper@call_helper0;JMP(ret_100)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 70// Push 70@70D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 35// Push 35@35D=A@SPA=MM=D@SPM=M+1// push constant 11// Push 11@11D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 11// Push 11@11D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_101@12D=A@R14M=D@Output.createD=A@R15M=D@ret_101D=A// goto call_helper@call_helper0;JMP(ret_101)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 71// Push 71@71D=A@SPA=MM=D@SPM=M+1// push constant 28// Push 28@28D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 35// Push 35@35D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 59// Push 59@59D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 44// Push 44@44D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_102@12D=A@R14M=D@Output.createD=A@R15M=D@ret_102D=A// goto call_helper@call_helper0;JMP(ret_102)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 72// Push 72@72D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_103@12D=A@R14M=D@Output.createD=A@R15M=D@ret_103D=A// goto call_helper@call_helper0;JMP(ret_103)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 73// Push 73@73D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_104@12D=A@R14M=D@Output.createD=A@R15M=D@ret_104D=A// goto call_helper@call_helper0;JMP(ret_104)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 74// Push 74@74D=A@SPA=MM=D@SPM=M+1// push constant 60// Push 60@60D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 14// Push 14@14D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_105@12D=A@R14M=D@Output.createD=A@R15M=D@ret_105D=A// goto call_helper@call_helper0;JMP(ret_105)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 75// Push 75@75D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_106@12D=A@R14M=D@Output.createD=A@R15M=D@ret_106D=A// goto call_helper@call_helper0;JMP(ret_106)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 76// Push 76@76D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 35// Push 35@35D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_107@12D=A@R14M=D@Output.createD=A@R15M=D@ret_107D=A// goto call_helper@call_helper0;JMP(ret_107)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 77// Push 77@77D=A@SPA=MM=D@SPM=M+1// push constant 33// Push 33@33D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_108@12D=A@R14M=D@Output.createD=A@R15M=D@ret_108D=A// goto call_helper@call_helper0;JMP(ret_108)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 78// Push 78@78D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 55// Push 55@55D=A@SPA=MM=D@SPM=M+1// push constant 55// Push 55@55D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 59// Push 59@59D=A@SPA=MM=D@SPM=M+1// push constant 59// Push 59@59D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_109@12D=A@R14M=D@Output.createD=A@R15M=D@ret_109D=A// goto call_helper@call_helper0;JMP(ret_109)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 79// Push 79@79D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_110@12D=A@R14M=D@Output.createD=A@R15M=D@ret_110D=A// goto call_helper@call_helper0;JMP(ret_110)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 80// Push 80@80D=A@SPA=MM=D@SPM=M+1// push constant 31// Push 31@31D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 31// Push 31@31D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_111@12D=A@R14M=D@Output.createD=A@R15M=D@ret_111D=A// goto call_helper@call_helper0;JMP(ret_111)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 81// Push 81@81D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 59// Push 59@59D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_112@12D=A@R14M=D@Output.createD=A@R15M=D@ret_112D=A// goto call_helper@call_helper0;JMP(ret_112)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 82// Push 82@82D=A@SPA=MM=D@SPM=M+1// push constant 31// Push 31@31D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 31// Push 31@31D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_113@12D=A@R14M=D@Output.createD=A@R15M=D@ret_113D=A// goto call_helper@call_helper0;JMP(ret_113)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 83// Push 83@83D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 28// Push 28@28D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_114@12D=A@R14M=D@Output.createD=A@R15M=D@ret_114D=A// goto call_helper@call_helper0;JMP(ret_114)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 84// Push 84@84D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 45// Push 45@45D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_115@12D=A@R14M=D@Output.createD=A@R15M=D@ret_115D=A// goto call_helper@call_helper0;JMP(ret_115)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 85// Push 85@85D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_116@12D=A@R14M=D@Output.createD=A@R15M=D@ret_116D=A// goto call_helper@call_helper0;JMP(ret_116)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 86// Push 86@86D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_117@12D=A@R14M=D@Output.createD=A@R15M=D@ret_117D=A// goto call_helper@call_helper0;JMP(ret_117)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 87// Push 87@87D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 18// Push 18@18D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_118@12D=A@R14M=D@Output.createD=A@R15M=D@ret_118D=A// goto call_helper@call_helper0;JMP(ret_118)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 88// Push 88@88D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_119@12D=A@R14M=D@Output.createD=A@R15M=D@ret_119D=A// goto call_helper@call_helper0;JMP(ret_119)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 89// Push 89@89D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_120@12D=A@R14M=D@Output.createD=A@R15M=D@ret_120D=A// goto call_helper@call_helper0;JMP(ret_120)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 90// Push 90@90D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 49// Push 49@49D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 35// Push 35@35D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_121@12D=A@R14M=D@Output.createD=A@R15M=D@ret_121D=A// goto call_helper@call_helper0;JMP(ret_121)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 91// Push 91@91D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_122@12D=A@R14M=D@Output.createD=A@R15M=D@ret_122D=A// goto call_helper@call_helper0;JMP(ret_122)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 92// Push 92@92D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_123@12D=A@R14M=D@Output.createD=A@R15M=D@ret_123D=A// goto call_helper@call_helper0;JMP(ret_123)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 93// Push 93@93D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_124@12D=A@R14M=D@Output.createD=A@R15M=D@ret_124D=A// goto call_helper@call_helper0;JMP(ret_124)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 94// Push 94@94D=A@SPA=MM=D@SPM=M+1// push constant 8// Push 8@8D=A@SPA=MM=D@SPM=M+1// push constant 28// Push 28@28D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_125@12D=A@R14M=D@Output.createD=A@R15M=D@ret_125D=A// goto call_helper@call_helper0;JMP(ret_125)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 95// Push 95@95D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_126@12D=A@R14M=D@Output.createD=A@R15M=D@ret_126D=A// goto call_helper@call_helper0;JMP(ret_126)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 96// Push 96@96D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_127@12D=A@R14M=D@Output.createD=A@R15M=D@ret_127D=A// goto call_helper@call_helper0;JMP(ret_127)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 97// Push 97@97D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 14// Push 14@14D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_128@12D=A@R14M=D@Output.createD=A@R15M=D@ret_128D=A// goto call_helper@call_helper0;JMP(ret_128)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 98// Push 98@98D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_129@12D=A@R14M=D@Output.createD=A@R15M=D@ret_129D=A// goto call_helper@call_helper0;JMP(ret_129)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 99// Push 99@99D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_130@12D=A@R14M=D@Output.createD=A@R15M=D@ret_130D=A// goto call_helper@call_helper0;JMP(ret_130)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 100// Push 100@100D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 60// Push 60@60D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_131@12D=A@R14M=D@Output.createD=A@R15M=D@ret_131D=A// goto call_helper@call_helper0;JMP(ret_131)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 101// Push 101@101D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_132@12D=A@R14M=D@Output.createD=A@R15M=D@ret_132D=A// goto call_helper@call_helper0;JMP(ret_132)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 102// Push 102@102D=A@SPA=MM=D@SPM=M+1// push constant 28// Push 28@28D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 38// Push 38@38D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_133@12D=A@R14M=D@Output.createD=A@R15M=D@ret_133D=A// goto call_helper@call_helper0;JMP(ret_133)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 103// Push 103@103D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 62// Push 62@62D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_134@12D=A@R14M=D@Output.createD=A@R15M=D@ret_134D=A// goto call_helper@call_helper0;JMP(ret_134)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 104// Push 104@104D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 55// Push 55@55D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_135@12D=A@R14M=D@Output.createD=A@R15M=D@ret_135D=A// goto call_helper@call_helper0;JMP(ret_135)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 105// Push 105@105D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 14// Push 14@14D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_136@12D=A@R14M=D@Output.createD=A@R15M=D@ret_136D=A// goto call_helper@call_helper0;JMP(ret_136)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 106// Push 106@106D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 56// Push 56@56D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_137@12D=A@R14M=D@Output.createD=A@R15M=D@ret_137D=A// goto call_helper@call_helper0;JMP(ret_137)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 107// Push 107@107D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_138@12D=A@R14M=D@Output.createD=A@R15M=D@ret_138D=A// goto call_helper@call_helper0;JMP(ret_138)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 108// Push 108@108D=A@SPA=MM=D@SPM=M+1// push constant 14// Push 14@14D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_139@12D=A@R14M=D@Output.createD=A@R15M=D@ret_139D=A// goto call_helper@call_helper0;JMP(ret_139)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 109// Push 109@109D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 29// Push 29@29D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 43// Push 43@43D=A@SPA=MM=D@SPM=M+1// push constant 43// Push 43@43D=A@SPA=MM=D@SPM=M+1// push constant 43// Push 43@43D=A@SPA=MM=D@SPM=M+1// push constant 43// Push 43@43D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_140@12D=A@R14M=D@Output.createD=A@R15M=D@ret_140D=A// goto call_helper@call_helper0;JMP(ret_140)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 110// Push 110@110D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 29// Push 29@29D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_141@12D=A@R14M=D@Output.createD=A@R15M=D@ret_141D=A// goto call_helper@call_helper0;JMP(ret_141)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 111// Push 111@111D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_142@12D=A@R14M=D@Output.createD=A@R15M=D@ret_142D=A// goto call_helper@call_helper0;JMP(ret_142)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 112// Push 112@112D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 31// Push 31@31D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_143@12D=A@R14M=D@Output.createD=A@R15M=D@ret_143D=A// goto call_helper@call_helper0;JMP(ret_143)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 113// Push 113@113D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 62// Push 62@62D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_144@12D=A@R14M=D@Output.createD=A@R15M=D@ret_144D=A// goto call_helper@call_helper0;JMP(ret_144)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 114// Push 114@114D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 29// Push 29@29D=A@SPA=MM=D@SPM=M+1// push constant 55// Push 55@55D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 7// Push 7@7D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_145@12D=A@R14M=D@Output.createD=A@R15M=D@ret_145D=A// goto call_helper@call_helper0;JMP(ret_145)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 115// Push 115@115D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_146@12D=A@R14M=D@Output.createD=A@R15M=D@ret_146D=A// goto call_helper@call_helper0;JMP(ret_146)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 116// Push 116@116D=A@SPA=MM=D@SPM=M+1// push constant 4// Push 4@4D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 28// Push 28@28D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_147@12D=A@R14M=D@Output.createD=A@R15M=D@ret_147D=A// goto call_helper@call_helper0;JMP(ret_147)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 117// Push 117@117D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_148@12D=A@R14M=D@Output.createD=A@R15M=D@ret_148D=A// goto call_helper@call_helper0;JMP(ret_148)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 118// Push 118@118D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_149@12D=A@R14M=D@Output.createD=A@R15M=D@ret_149D=A// goto call_helper@call_helper0;JMP(ret_149)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 119// Push 119@119D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 18// Push 18@18D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_150@12D=A@R14M=D@Output.createD=A@R15M=D@ret_150D=A// goto call_helper@call_helper0;JMP(ret_150)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 120// Push 120@120D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_151@12D=A@R14M=D@Output.createD=A@R15M=D@ret_151D=A// goto call_helper@call_helper0;JMP(ret_151)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 121// Push 121@121D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 62// Push 62@62D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_152@12D=A@R14M=D@Output.createD=A@R15M=D@ret_152D=A// goto call_helper@call_helper0;JMP(ret_152)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 122// Push 122@122D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_153@12D=A@R14M=D@Output.createD=A@R15M=D@ret_153D=A// goto call_helper@call_helper0;JMP(ret_153)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 123// Push 123@123D=A@SPA=MM=D@SPM=M+1// push constant 56// Push 56@56D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 7// Push 7@7D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 56// Push 56@56D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_154@12D=A@R14M=D@Output.createD=A@R15M=D@ret_154D=A// goto call_helper@call_helper0;JMP(ret_154)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 124// Push 124@124D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_155@12D=A@R14M=D@Output.createD=A@R15M=D@ret_155D=A// goto call_helper@call_helper0;JMP(ret_155)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 125// Push 125@125D=A@SPA=MM=D@SPM=M+1// push constant 7// Push 7@7D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 56// Push 56@56D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 7// Push 7@7D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_156@12D=A@R14M=D@Output.createD=A@R15M=D@ret_156D=A// goto call_helper@call_helper0;JMP(ret_156)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 126// Push 126@126D=A@SPA=MM=D@SPM=M+1// push constant 38// Push 38@38D=A@SPA=MM=D@SPM=M+1// push constant 45// Push 45@45D=A@SPA=MM=D@SPM=M+1// push constant 25// Push 25@25D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_157@12D=A@R14M=D@Output.createD=A@R15M=D@ret_157D=A// goto call_helper@call_helper0;JMP(ret_157)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Output.create 1(Output.create)// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 11// Push 11@11D=A@SPA=MM=D@SPM=M+1// call Array.new 1// call Array.new 1// push ret_158@1D=A@R14M=D@Array.newD=A@R15M=D@ret_158D=A// goto call_helper@call_helper0;JMP(ret_158)// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push static 5@18D=A@5A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 4@ARGA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 4// Push 4@4D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 5@ARGA=MD=A@5A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 5// Push 5@5D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 6@ARGA=MD=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 7@ARGA=MD=A@7A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 7// Push 7@7D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 8@ARGA=MD=A@8A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 8// Push 8@8D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 9@ARGA=MD=A@9A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 9// Push 9@9D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 10@ARGA=MD=A@10A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 10// Push 10@10D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 11@ARGA=MD=A@11A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Output.createShiftedMap 4(Output.createShiftedMap)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 127// Push 127@127D=A@SPA=MM=D@SPM=M+1// call Array.new 1// call Array.new 1// push ret_159@1D=A@R14M=D@Array.newD=A@R15M=D@ret_159D=A// goto call_helper@call_helper0;JMP(ret_159)// pop static 6@18D=A@6D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 127// Push 127@127D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_0D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_1)// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push static 5@18D=A@5A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 11// Push 11@11D=A@SPA=MM=D@SPM=M+1// call Array.new 1// call Array.new 1// push ret_160@1D=A@R14M=D@Array.newD=A@R15M=D@ret_160D=A// goto call_helper@call_helper0;JMP(ret_160)// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push static 6@18D=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP1(WHILE_EXP1)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 11// Push 11@11D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_1D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_2)// not@SPA=MA=A-1M=!M// if-goto WHILE_END1@SPM=M-1A=MD=M@WHILE_END1D;JNE// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 256// Push 256@256D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_161@2D=A@R14M=D@Math.multiplyD=A@R15M=D@ret_161D=A// goto call_helper@call_helper0;JMP(ret_161)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP1@WHILE_EXP10;JMP// label WHILE_END1(WHILE_END1)// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_2D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_3)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END0@IF_END00;JMP// label IF_FALSE0(IF_FALSE0)// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END0(IF_END0)// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Output.getMap 1(Output.getMap)// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_3D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_4)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 126// Push 126@126D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_4D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_5)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop argument 0@ARGA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push static 2@18D=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push static 5@18D=A@5A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END1@IF_END10;JMP// label IF_FALSE1(IF_FALSE1)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push static 6@18D=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END1(IF_END1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Output.drawChar 4(Output.drawChar)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call Output.getMap 1// call Output.getMap 1// push ret_162@1D=A@R14M=D@Output.getMapD=A@R15M=D@ret_162D=A// goto call_helper@call_helper0;JMP(ret_162)// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push static 1@18D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 11// Push 11@11D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_5D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_6)// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push static 2@18D=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 4@18D=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 256// Push 256@256D=A@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END0@IF_END00;JMP// label IF_FALSE0(IF_FALSE0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 4@18D=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 255// Push 255@255D=A@SPA=MM=D@SPM=M+1// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END0(IF_END0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 4@18D=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Output.moveCursor 0(Output.moveCursor)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_6D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_7)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 22// Push 22@22D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_7D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_8)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_8D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_9)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_9D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_10)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 20// Push 20@20D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_163@1D=A@R14M=D@Sys.errorD=A@R15M=D@ret_163D=A// goto call_helper@call_helper0;JMP(ret_163)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// call Math.divide 2// call Math.divide 2// push ret_164@2D=A@R14M=D@Math.divideD=A@R15M=D@ret_164D=A// goto call_helper@call_helper0;JMP(ret_164)// pop static 0@18D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 352// Push 352@352D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_165@2D=A@R14M=D@Math.multiplyD=A@R15M=D@ret_165D=A// goto call_helper@call_helper0;JMP(ret_165)// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push static 0@18D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop static 1@18D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push static 0@18D=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_166@2D=A@R14M=D@Math.multiplyD=A@R15M=D@ret_166D=A// goto call_helper@call_helper0;JMP(ret_166)// eq@END_BOOL_10D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_11)// pop static 2@18D=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// call Output.drawChar 1// call Output.drawChar 1// push ret_167@1D=A@R14M=D@Output.drawCharD=A@R15M=D@ret_167D=A// goto call_helper@call_helper0;JMP(ret_167)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Output.printChar 0(Output.printChar)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call String.newLine 0// call String.newLine 0// push ret_168@0D=A@R14M=D@String.newLineD=A@R15M=D@ret_168D=A// goto call_helper@call_helper0;JMP(ret_168)// eq@END_BOOL_11D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_12)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// call Output.println 0// call Output.println 0// push ret_169@0D=A@R14M=D@Output.printlnD=A@R15M=D@ret_169D=A// goto call_helper@call_helper0;JMP(ret_169)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END0@IF_END00;JMP// label IF_FALSE0(IF_FALSE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call String.backSpace 0// call String.backSpace 0// push ret_170@0D=A@R14M=D@String.backSpaceD=A@R15M=D@ret_170D=A// goto call_helper@call_helper0;JMP(ret_170)// eq@END_BOOL_12D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_13)// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// call Output.backSpace 0// call Output.backSpace 0// push ret_171@0D=A@R14M=D@Output.backSpaceD=A@R15M=D@ret_171D=A// goto call_helper@call_helper0;JMP(ret_171)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END1@IF_END10;JMP// label IF_FALSE1(IF_FALSE1)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call Output.drawChar 1// call Output.drawChar 1// push ret_172@1D=A@R14M=D@Output.drawCharD=A@R15M=D@ret_172D=A// goto call_helper@call_helper0;JMP(ret_172)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push static 2@18D=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// if-goto IF_TRUE2@SPM=M-1A=MD=M@IF_TRUE2D;JNE// goto IF_FALSE2@IF_FALSE20;JMP// label IF_TRUE2(IF_TRUE2)// push static 0@18D=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop static 0@18D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push static 1@18D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop static 1@18D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE2(IF_FALSE2)// push static 0@18D=M@SPA=MM=D@SPM=M+1// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_13D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_14)// if-goto IF_TRUE3@SPM=M-1A=MD=M@IF_TRUE3D;JNE// goto IF_FALSE3@IF_FALSE30;JMP// label IF_TRUE3(IF_TRUE3)// call Output.println 0// call Output.println 0// push ret_173@0D=A@R14M=D@Output.printlnD=A@R15M=D@ret_173D=A// goto call_helper@call_helper0;JMP(ret_173)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END3@IF_END30;JMP// label IF_FALSE3(IF_FALSE3)// push static 2@18D=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// pop static 2@18D=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END3(IF_END3)// label IF_END1(IF_END1)// label IF_END0(IF_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Output.printString 2(Output.printString)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call String.length 1// call String.length 1// push ret_174@1D=A@R14M=D@String.lengthD=A@R15M=D@ret_174D=A// goto call_helper@call_helper0;JMP(ret_174)// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// lt@END_BOOL_14D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_15)// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// call String.charAt 2// call String.charAt 2// push ret_175@2D=A@R14M=D@String.charAtD=A@R15M=D@ret_175D=A// goto call_helper@call_helper0;JMP(ret_175)// call Output.printChar 1// call Output.printChar 1// push ret_176@1D=A@R14M=D@Output.printCharD=A@R15M=D@ret_176D=A// goto call_helper@call_helper0;JMP(ret_176)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Output.printInt 0(Output.printInt)// push static 3@18D=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call String.setInt 2// call String.setInt 2// push ret_177@2D=A@R14M=D@String.setIntD=A@R15M=D@ret_177D=A// goto call_helper@call_helper0;JMP(ret_177)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push static 3@18D=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// call Output.printString 1// call Output.printString 1// push ret_178@1D=A@R14M=D@Output.printStringD=A@R15M=D@ret_178D=A// goto call_helper@call_helper0;JMP(ret_178)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Output.println 0(Output.println)// push static 1@18D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 352// Push 352@352D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push static 0@18D=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop static 1@18D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop static 0@18D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// pop static 2@18D=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push static 1@18D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 8128// Push 8128@8128D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_15D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_16)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// pop static 1@18D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Output.backSpace 0(Output.backSpace)// push static 2@18D=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push static 0@18D=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_16D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_17)// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push static 0@18D=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop static 0@18D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push static 1@18D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop static 1@18D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END1@IF_END10;JMP// label IF_FALSE1(IF_FALSE1)// push constant 31// Push 31@31D=A@SPA=MM=D@SPM=M+1// pop static 0@18D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push static 1@18D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_17D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_18)// if-goto IF_TRUE2@SPM=M-1A=MD=M@IF_TRUE2D;JNE// goto IF_FALSE2@IF_FALSE20;JMP// label IF_TRUE2(IF_TRUE2)// push constant 8128// Push 8128@8128D=A@SPA=MM=D@SPM=M+1// pop static 1@18D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE2(IF_FALSE2)// push static 1@18D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 321// Push 321@321D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop static 1@18D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END1(IF_END1)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop static 2@18D=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END0@IF_END00;JMP// label IF_FALSE0(IF_FALSE0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// pop static 2@18D=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END0(IF_END0)// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// call Output.drawChar 1// call Output.drawChar 1// push ret_179@1D=A@R14M=D@Output.drawCharD=A@R15M=D@ret_179D=A// goto call_helper@call_helper0;JMP(ret_179)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Screen.init 1(Screen.init)// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 16384// Push 16384@16384D=A@SPA=MM=D@SPM=M+1// pop static 1@25D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// pop static 2@25D=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 17// Push 17@17D=A@SPA=MM=D@SPM=M+1// call Array.new 1// call Array.new 1// push ret_180@1D=A@R14M=D@Array.newD=A@R15M=D@ret_180D=A// goto call_helper@call_helper0;JMP(ret_180)// pop static 0@25D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push static 0@25D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_0D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_1)// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 0@25D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push static 0@25D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push static 0@25D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Screen.clearScreen 1(Screen.clearScreen)// Push 0@0D=A@SPA=MM=D@SPM=M+1// label WHILE_EXP0(WHILE_EXP0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 8192// Push 8192@8192D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_1D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_2)// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 1@25D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Screen.updateLocation 0(Screen.updateLocation)// push static 2@25D=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push static 1@25D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push static 1@25D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END0@IF_END00;JMP// label IF_FALSE0(IF_FALSE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push static 1@25D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push static 1@25D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END0(IF_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Screen.setColor 0(Screen.setColor)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop static 2@25D=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Screen.drawPixel 3(Screen.drawPixel)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_2D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_3)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 511// Push 511@511D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_3D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_4)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_4D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_5)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 255// Push 255@255D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_5D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_6)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 7// Push 7@7D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_181@1D=A@R14M=D@Sys.errorD=A@R15M=D@ret_181D=A// goto call_helper@call_helper0;JMP(ret_181)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Math.divide 2// call Math.divide 2// push ret_182@2D=A@R14M=D@Math.divideD=A@R15M=D@ret_182D=A// goto call_helper@call_helper0;JMP(ret_182)// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_183@2D=A@R14M=D@Math.multiplyD=A@R15M=D@ret_183D=A// goto call_helper@call_helper0;JMP(ret_183)// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_184@2D=A@R14M=D@Math.multiplyD=A@R15M=D@ret_184D=A// goto call_helper@call_helper0;JMP(ret_184)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push static 0@25D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// call Screen.updateLocation 2// call Screen.updateLocation 2// push ret_185@2D=A@R14M=D@Screen.updateLocationD=A@R15M=D@ret_185D=A// goto call_helper@call_helper0;JMP(ret_185)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Screen.drawConditional 0(Screen.drawConditional)// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call Screen.drawPixel 2// call Screen.drawPixel 2// push ret_186@2D=A@R14M=D@Screen.drawPixelD=A@R15M=D@ret_186D=A// goto call_helper@call_helper0;JMP(ret_186)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END0@IF_END00;JMP// label IF_FALSE0(IF_FALSE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// call Screen.drawPixel 2// call Screen.drawPixel 2// push ret_187@2D=A@R14M=D@Screen.drawPixelD=A@R15M=D@ret_187D=A// goto call_helper@call_helper0;JMP(ret_187)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END0(IF_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Screen.drawLine 11(Screen.drawLine)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_6D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_7)// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 511// Push 511@511D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_7D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_8)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_8D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_9)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 255// Push 255@255D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_9D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_10)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 8// Push 8@8D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_188@1D=A@R14M=D@Sys.errorD=A@R15M=D@ret_188D=A// goto call_helper@call_helper0;JMP(ret_188)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// call Math.abs 1// call Math.abs 1// push ret_189@1D=A@R14M=D@Math.absD=A@R15M=D@ret_189D=A// goto call_helper@call_helper0;JMP(ret_189)// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// call Math.abs 1// call Math.abs 1// push ret_190@1D=A@R14M=D@Math.absD=A@R15M=D@ret_190D=A// goto call_helper@call_helper0;JMP(ret_190)// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// lt@END_BOOL_10D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_11)// pop local 6@LCLA=MD=A@6D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 6@LCLA=MD=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// lt@END_BOOL_11D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_12)// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// push local 6@LCLA=MD=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// lt@END_BOOL_12D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_13)// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop local 4@LCLA=MD=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// pop argument 0@ARGA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// pop argument 2@ARGA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 4@LCLA=MD=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// pop argument 1@ARGA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// pop argument 3@ARGA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE1(IF_FALSE1)// push local 6@LCLA=MD=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// if-goto IF_TRUE2@SPM=M-1A=MD=M@IF_TRUE2D;JNE// goto IF_FALSE2@IF_FALSE20;JMP// label IF_TRUE2(IF_TRUE2)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 4@LCLA=MD=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 8@LCLA=MD=A@8D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// gt@END_BOOL_13D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_14)// pop local 7@LCLA=MD=A@7D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END2@IF_END20;JMP// label IF_FALSE2(IF_FALSE2)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 8@LCLA=MD=A@8D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// gt@END_BOOL_14D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_15)// pop local 7@LCLA=MD=A@7D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END2(IF_END2)// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_191@2D=A@R14M=D@Math.multiplyD=A@R15M=D@ret_191D=A// goto call_helper@call_helper0;JMP(ret_191)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 5@LCLA=MD=A@5D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_192@2D=A@R14M=D@Math.multiplyD=A@R15M=D@ret_192D=A// goto call_helper@call_helper0;JMP(ret_192)// pop local 9@LCLA=MD=A@9D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// call Math.multiply 2// call Math.multiply 2// push ret_193@2D=A@R14M=D@Math.multiplyD=A@R15M=D@ret_193D=A// goto call_helper@call_helper0;JMP(ret_193)// pop local 10@LCLA=MD=A@10D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 6@LCLA=MD=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// call Screen.drawConditional 3// call Screen.drawConditional 3// push ret_194@3D=A@R14M=D@Screen.drawConditionalD=A@R15M=D@ret_194D=A// goto call_helper@call_helper0;JMP(ret_194)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 8@LCLA=MD=A@8A=D+AD=M@SPA=MM=D@SPM=M+1// lt@END_BOOL_15D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_16)// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push local 5@LCLA=MD=A@5A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_16D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_17)// if-goto IF_TRUE3@SPM=M-1A=MD=M@IF_TRUE3D;JNE// goto IF_FALSE3@IF_FALSE30;JMP// label IF_TRUE3(IF_TRUE3)// push local 5@LCLA=MD=A@5A=D+AD=M@SPA=MM=D@SPM=M+1// push local 9@LCLA=MD=A@9A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 5@LCLA=MD=A@5D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END3@IF_END30;JMP// label IF_FALSE3(IF_FALSE3)// push local 5@LCLA=MD=A@5A=D+AD=M@SPA=MM=D@SPM=M+1// push local 10@LCLA=MD=A@10A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 5@LCLA=MD=A@5D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 7@LCLA=MD=A@7A=D+AD=M@SPA=MM=D@SPM=M+1// if-goto IF_TRUE4@SPM=M-1A=MD=M@IF_TRUE4D;JNE// goto IF_FALSE4@IF_FALSE40;JMP// label IF_TRUE4(IF_TRUE4)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END4@IF_END40;JMP// label IF_FALSE4(IF_FALSE4)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END4(IF_END4)// label IF_END3(IF_END3)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 6@LCLA=MD=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// call Screen.drawConditional 3// call Screen.drawConditional 3// push ret_195@3D=A@R14M=D@Screen.drawConditionalD=A@R15M=D@ret_195D=A// goto call_helper@call_helper0;JMP(ret_195)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Screen.drawRectangle 9(Screen.drawRectangle)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// gt@END_BOOL_17D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_18)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// gt@END_BOOL_18D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_19)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_19D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_20)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 511// Push 511@511D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_20D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_21)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_21D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_22)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 255// Push 255@255D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_22D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_23)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 9// Push 9@9D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_196@1D=A@R14M=D@Sys.errorD=A@R15M=D@ret_196D=A// goto call_helper@call_helper0;JMP(ret_196)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Math.divide 2// call Math.divide 2// push ret_197@2D=A@R14M=D@Math.divideD=A@R15M=D@ret_197D=A// goto call_helper@call_helper0;JMP(ret_197)// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_198@2D=A@R14M=D@Math.multiplyD=A@R15M=D@ret_198D=A// goto call_helper@call_helper0;JMP(ret_198)// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 7@LCLA=MD=A@7D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Math.divide 2// call Math.divide 2// push ret_199@2D=A@R14M=D@Math.divideD=A@R15M=D@ret_199D=A// goto call_helper@call_helper0;JMP(ret_199)// pop local 4@LCLA=MD=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_200@2D=A@R14M=D@Math.multiplyD=A@R15M=D@ret_200D=A// goto call_helper@call_helper0;JMP(ret_200)// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 8@LCLA=MD=A@8D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 7@LCLA=MD=A@7A=D+AD=M@SPA=MM=D@SPM=M+1// push static 0@25D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// not@SPA=MA=A-1M=!M// pop local 6@LCLA=MD=A@6D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 8@LCLA=MD=A@8A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push static 0@25D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 5@LCLA=MD=A@5D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_201@2D=A@R14M=D@Math.multiplyD=A@R15M=D@ret_201D=A// goto call_helper@call_helper0;JMP(ret_201)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// gt@END_BOOL_23D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_24)// not@SPA=MA=A-1M=!M// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_24D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_25)// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 5@LCLA=MD=A@5A=D+AD=M@SPA=MM=D@SPM=M+1// push local 6@LCLA=MD=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// call Screen.updateLocation 2// call Screen.updateLocation 2// push ret_202@2D=A@R14M=D@Screen.updateLocationD=A@R15M=D@ret_202D=A// goto call_helper@call_helper0;JMP(ret_202)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END1@IF_END10;JMP// label IF_FALSE1(IF_FALSE1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 6@LCLA=MD=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// call Screen.updateLocation 2// call Screen.updateLocation 2// push ret_203@2D=A@R14M=D@Screen.updateLocationD=A@R15M=D@ret_203D=A// goto call_helper@call_helper0;JMP(ret_203)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP1(WHILE_EXP1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// lt@END_BOOL_25D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_26)// not@SPA=MA=A-1M=!M// if-goto WHILE_END1@SPM=M-1A=MD=M@WHILE_END1D;JNE// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// call Screen.updateLocation 2// call Screen.updateLocation 2// push ret_204@2D=A@R14M=D@Screen.updateLocationD=A@R15M=D@ret_204D=A// goto call_helper@call_helper0;JMP(ret_204)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP1@WHILE_EXP10;JMP// label WHILE_END1(WHILE_END1)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 5@LCLA=MD=A@5A=D+AD=M@SPA=MM=D@SPM=M+1// call Screen.updateLocation 2// call Screen.updateLocation 2// push ret_205@2D=A@R14M=D@Screen.updateLocationD=A@R15M=D@ret_205D=A// goto call_helper@call_helper0;JMP(ret_205)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END1(IF_END1)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop argument 1@ARGA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Screen.drawHorizontal 11(Screen.drawHorizontal)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// call Math.min 2// call Math.min 2// push ret_206@2D=A@R14M=D@Math.minD=A@R15M=D@ret_206D=A// goto call_helper@call_helper0;JMP(ret_206)// pop local 7@LCLA=MD=A@7D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// call Math.max 2// call Math.max 2// push ret_207@2D=A@R14M=D@Math.maxD=A@R15M=D@ret_207D=A// goto call_helper@call_helper0;JMP(ret_207)// pop local 8@LCLA=MD=A@8D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// gt@END_BOOL_26D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_27)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 256// Push 256@256D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_27D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_28)// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// push local 7@LCLA=MD=A@7A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 512// Push 512@512D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_28D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_29)// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// push local 8@LCLA=MD=A@8A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// gt@END_BOOL_29D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_30)// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push local 7@LCLA=MD=A@7A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Math.max 2// call Math.max 2// push ret_208@2D=A@R14M=D@Math.maxD=A@R15M=D@ret_208D=A// goto call_helper@call_helper0;JMP(ret_208)// pop local 7@LCLA=MD=A@7D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 8@LCLA=MD=A@8A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 511// Push 511@511D=A@SPA=MM=D@SPM=M+1// call Math.min 2// call Math.min 2// push ret_209@2D=A@R14M=D@Math.minD=A@R15M=D@ret_209D=A// goto call_helper@call_helper0;JMP(ret_209)// pop local 8@LCLA=MD=A@8D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 7@LCLA=MD=A@7A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Math.divide 2// call Math.divide 2// push ret_210@2D=A@R14M=D@Math.divideD=A@R15M=D@ret_210D=A// goto call_helper@call_helper0;JMP(ret_210)// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 7@LCLA=MD=A@7A=D+AD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_211@2D=A@R14M=D@Math.multiplyD=A@R15M=D@ret_211D=A// goto call_helper@call_helper0;JMP(ret_211)// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 9@LCLA=MD=A@9D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 8@LCLA=MD=A@8A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Math.divide 2// call Math.divide 2// push ret_212@2D=A@R14M=D@Math.divideD=A@R15M=D@ret_212D=A// goto call_helper@call_helper0;JMP(ret_212)// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 8@LCLA=MD=A@8A=D+AD=M@SPA=MM=D@SPM=M+1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_213@2D=A@R14M=D@Math.multiplyD=A@R15M=D@ret_213D=A// goto call_helper@call_helper0;JMP(ret_213)// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 10@LCLA=MD=A@10D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 9@LCLA=MD=A@9A=D+AD=M@SPA=MM=D@SPM=M+1// push static 0@25D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// not@SPA=MA=A-1M=!M// pop local 5@LCLA=MD=A@5D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 10@LCLA=MD=A@10A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push static 0@25D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 4@LCLA=MD=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_214@2D=A@R14M=D@Math.multiplyD=A@R15M=D@ret_214D=A// goto call_helper@call_helper0;JMP(ret_214)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 6@LCLA=MD=A@6D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 6@LCLA=MD=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 6@LCLA=MD=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_30D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_31)// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// push local 5@LCLA=MD=A@5A=D+AD=M@SPA=MM=D@SPM=M+1// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// call Screen.updateLocation 2// call Screen.updateLocation 2// push ret_215@2D=A@R14M=D@Screen.updateLocationD=A@R15M=D@ret_215D=A// goto call_helper@call_helper0;JMP(ret_215)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END1@IF_END10;JMP// label IF_FALSE1(IF_FALSE1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 5@LCLA=MD=A@5A=D+AD=M@SPA=MM=D@SPM=M+1// call Screen.updateLocation 2// call Screen.updateLocation 2// push ret_216@2D=A@R14M=D@Screen.updateLocationD=A@R15M=D@ret_216D=A// goto call_helper@call_helper0;JMP(ret_216)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// lt@END_BOOL_31D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_32)// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// call Screen.updateLocation 2// call Screen.updateLocation 2// push ret_217@2D=A@R14M=D@Screen.updateLocationD=A@R15M=D@ret_217D=A// goto call_helper@call_helper0;JMP(ret_217)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// call Screen.updateLocation 2// call Screen.updateLocation 2// push ret_218@2D=A@R14M=D@Screen.updateLocationD=A@R15M=D@ret_218D=A// goto call_helper@call_helper0;JMP(ret_218)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END1(IF_END1)// label IF_FALSE0(IF_FALSE0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Screen.drawSymetric 0(Screen.drawSymetric)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// call Screen.drawHorizontal 3// call Screen.drawHorizontal 3// push ret_219@3D=A@R14M=D@Screen.drawHorizontalD=A@R15M=D@ret_219D=A// goto call_helper@call_helper0;JMP(ret_219)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// call Screen.drawHorizontal 3// call Screen.drawHorizontal 3// push ret_220@3D=A@R14M=D@Screen.drawHorizontalD=A@R15M=D@ret_220D=A// goto call_helper@call_helper0;JMP(ret_220)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// call Screen.drawHorizontal 3// call Screen.drawHorizontal 3// push ret_221@3D=A@R14M=D@Screen.drawHorizontalD=A@R15M=D@ret_221D=A// goto call_helper@call_helper0;JMP(ret_221)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// call Screen.drawHorizontal 3// call Screen.drawHorizontal 3// push ret_222@3D=A@R14M=D@Screen.drawHorizontalD=A@R15M=D@ret_222D=A// goto call_helper@call_helper0;JMP(ret_222)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Screen.drawCircle 3(Screen.drawCircle)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_32D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_33)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 511// Push 511@511D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_33D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_34)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_34D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_35)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 255// Push 255@255D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_35D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_36)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_223@1D=A@R14M=D@Sys.errorD=A@R15M=D@ret_223D=A// goto call_helper@call_helper0;JMP(ret_223)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_36D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_37)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 511// Push 511@511D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_37D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_38)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_38D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_39)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 255// Push 255@255D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_39D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_40)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push constant 13// Push 13@13D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_224@1D=A@R14M=D@Sys.errorD=A@R15M=D@ret_224D=A// goto call_helper@call_helper0;JMP(ret_224)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE1(IF_FALSE1)// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// call Screen.drawSymetric 4// call Screen.drawSymetric 4// push ret_225@4D=A@R14M=D@Screen.drawSymetricD=A@R15M=D@ret_225D=A// goto call_helper@call_helper0;JMP(ret_225)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// gt@END_BOOL_40D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_41)// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_41D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_42)// if-goto IF_TRUE2@SPM=M-1A=MD=M@IF_TRUE2D;JNE// goto IF_FALSE2@IF_FALSE20;JMP// label IF_TRUE2(IF_TRUE2)// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_226@2D=A@R14M=D@Math.multiplyD=A@R15M=D@ret_226D=A// goto call_helper@call_helper0;JMP(ret_226)// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END2@IF_END20;JMP// label IF_FALSE2(IF_FALSE2)// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// call Math.multiply 2// call Math.multiply 2// push ret_227@2D=A@R14M=D@Math.multiplyD=A@R15M=D@ret_227D=A// goto call_helper@call_helper0;JMP(ret_227)// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 5// Push 5@5D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END2(IF_END2)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// call Screen.drawSymetric 4// call Screen.drawSymetric 4// push ret_228@4D=A@R14M=D@Screen.drawSymetricD=A@R15M=D@ret_228D=A// goto call_helper@call_helper0;JMP(ret_228)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Memory.init 0(Memory.init)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop static 0@28D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 2048// Push 2048@2048D=A@SPA=MM=D@SPM=M+1// push static 0@28D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 14334// Push 14334@14334D=A@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 2049// Push 2049@2049D=A@SPA=MM=D@SPM=M+1// push static 0@28D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 2050// Push 2050@2050D=A@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Memory.peek 0(Memory.peek)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push static 0@28D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Memory.poke 0(Memory.poke)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push static 0@28D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Memory.alloc 2(Memory.alloc)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_0D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_1)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 5// Push 5@5D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_229@1D=A@R14M=D@Sys.errorD=A@R15M=D@ret_229D=A// goto call_helper@call_helper0;JMP(ret_229)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_1D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_2)// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// pop argument 0@ARGA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE1(IF_FALSE1)// push constant 2048// Push 2048@2048D=A@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 16383// Push 16383@16383D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_2D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_3)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// lt@END_BOOL_3D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_4)// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_4D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_5)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 16382// Push 16382@16382D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_5D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_6)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_6D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_7)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// if-goto IF_TRUE2@SPM=M-1A=MD=M@IF_TRUE2D;JNE// goto IF_FALSE2@IF_FALSE20;JMP// label IF_TRUE2(IF_TRUE2)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END2@IF_END20;JMP// label IF_FALSE2(IF_FALSE2)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// eq@END_BOOL_7D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_8)// if-goto IF_TRUE3@SPM=M-1A=MD=M@IF_TRUE3D;JNE// goto IF_FALSE3@IF_FALSE30;JMP// label IF_TRUE3(IF_TRUE3)// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END3@IF_END30;JMP// label IF_FALSE3(IF_FALSE3)// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END3(IF_END3)// label IF_END2(IF_END2)// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 16379// Push 16379@16379D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_8D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_9)// if-goto IF_TRUE4@SPM=M-1A=MD=M@IF_TRUE4D;JNE// goto IF_FALSE4@IF_FALSE40;JMP// label IF_TRUE4(IF_TRUE4)// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_230@1D=A@R14M=D@Sys.errorD=A@R15M=D@ret_230D=A// goto call_helper@call_helper0;JMP(ret_230)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE4(IF_FALSE4)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// gt@END_BOOL_9D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_10)// if-goto IF_TRUE5@SPM=M-1A=MD=M@IF_TRUE5D;JNE// goto IF_FALSE5@IF_FALSE50;JMP// label IF_TRUE5(IF_TRUE5)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// eq@END_BOOL_10D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_11)// if-goto IF_TRUE6@SPM=M-1A=MD=M@IF_TRUE6D;JNE// goto IF_FALSE6@IF_FALSE60;JMP// label IF_TRUE6(IF_TRUE6)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 4// Push 4@4D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END6@IF_END60;JMP// label IF_FALSE6(IF_FALSE6)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END6(IF_END6)// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE5(IF_FALSE5)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Memory.deAlloc 2(Memory.deAlloc)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_11D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_12)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END0@IF_END00;JMP// label IF_FALSE0(IF_FALSE0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// eq@END_BOOL_12D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_13)// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END1@IF_END10;JMP// label IF_FALSE1(IF_FALSE1)// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END1(IF_END1)// label IF_END0(IF_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// function Main.main 0(Main.main)// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// call String.new 1// call String.new 1// push ret_231@1D=A@R14M=D@String.newD=A@R15M=D@ret_231D=A// goto call_helper@call_helper0;JMP(ret_231)// push constant 72// Push 72@72D=A@SPA=MM=D@SPM=M+1// call String.appendChar 2// call String.appendChar 2// push ret_232@2D=A@R14M=D@String.appendCharD=A@R15M=D@ret_232D=A// goto call_helper@call_helper0;JMP(ret_232)// push constant 101// Push 101@101D=A@SPA=MM=D@SPM=M+1// call String.appendChar 2// call String.appendChar 2// push ret_233@2D=A@R14M=D@String.appendCharD=A@R15M=D@ret_233D=A// goto call_helper@call_helper0;JMP(ret_233)// push constant 108// Push 108@108D=A@SPA=MM=D@SPM=M+1// call String.appendChar 2// call String.appendChar 2// push ret_234@2D=A@R14M=D@String.appendCharD=A@R15M=D@ret_234D=A// goto call_helper@call_helper0;JMP(ret_234)// push constant 108// Push 108@108D=A@SPA=MM=D@SPM=M+1// call String.appendChar 2// call String.appendChar 2// push ret_235@2D=A@R14M=D@String.appendCharD=A@R15M=D@ret_235D=A// goto call_helper@call_helper0;JMP(ret_235)// push constant 111// Push 111@111D=A@SPA=MM=D@SPM=M+1// call String.appendChar 2// call String.appendChar 2// push ret_236@2D=A@R14M=D@String.appendCharD=A@R15M=D@ret_236D=A// goto call_helper@call_helper0;JMP(ret_236)// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// call String.appendChar 2// call String.appendChar 2// push ret_237@2D=A@R14M=D@String.appendCharD=A@R15M=D@ret_237D=A// goto call_helper@call_helper0;JMP(ret_237)// push constant 119// Push 119@119D=A@SPA=MM=D@SPM=M+1// call String.appendChar 2// call String.appendChar 2// push ret_238@2D=A@R14M=D@String.appendCharD=A@R15M=D@ret_238D=A// goto call_helper@call_helper0;JMP(ret_238)// push constant 111// Push 111@111D=A@SPA=MM=D@SPM=M+1// call String.appendChar 2// call String.appendChar 2// push ret_239@2D=A@R14M=D@String.appendCharD=A@R15M=D@ret_239D=A// goto call_helper@call_helper0;JMP(ret_239)// push constant 114// Push 114@114D=A@SPA=MM=D@SPM=M+1// call String.appendChar 2// call String.appendChar 2// push ret_240@2D=A@R14M=D@String.appendCharD=A@R15M=D@ret_240D=A// goto call_helper@call_helper0;JMP(ret_240)// push constant 108// Push 108@108D=A@SPA=MM=D@SPM=M+1// call String.appendChar 2// call String.appendChar 2// push ret_241@2D=A@R14M=D@String.appendCharD=A@R15M=D@ret_241D=A// goto call_helper@call_helper0;JMP(ret_241)// push constant 100// Push 100@100D=A@SPA=MM=D@SPM=M+1// call String.appendChar 2// call String.appendChar 2// push ret_242@2D=A@R14M=D@String.appendCharD=A@R15M=D@ret_242D=A// goto call_helper@call_helper0;JMP(ret_242)// push constant 33// Push 33@33D=A@SPA=MM=D@SPM=M+1// call String.appendChar 2// call String.appendChar 2// push ret_243@2D=A@R14M=D@String.appendCharD=A@R15M=D@ret_243D=A// goto call_helper@call_helper0;JMP(ret_243)// call Output.printString 1// call Output.printString 1// push ret_244@1D=A@R14M=D@Output.printStringD=A@R15M=D@ret_244D=A// goto call_helper@call_helper0;JMP(ret_244)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call Output.println 0// call Output.println 0// push ret_245@0D=A@R14M=D@Output.printlnD=A@R15M=D@ret_245D=A// goto call_helper@call_helper0;JMP(ret_245)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// goto restore_stack_and_return@restore_stack_and_return0;JMP// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// function Sys.init 0(Sys.init)// call Main.main 0// call Main.main 0// push ret_246@0D=A@R14M=D@Main.mainD=A@R15M=D@ret_246D=A// goto call_helper@call_helper0;JMP(ret_246)// label INFINITE_LOOP(INFINITE_LOOP)// goto INFINITE_LOOP@INFINITE_LOOP0;JMP