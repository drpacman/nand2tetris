@256D=A@SPM=D// call Sys.init 0// push ret_0@ret_0D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 0@0D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Sys.init@Sys.init0;JMP(ret_0)// function Sys.init 0(Sys.init)// push constant 4000// Push 4000@4000D=A@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 5000// Push 5000@5000D=A@SPA=MM=D@SPM=M+1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call Sys.main 0// call Sys.main 0// push ret_1@ret_1D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 0@0D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Sys.main@Sys.main0;JMP(ret_1)// pop temp 1@5D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// (LOOP)(LOOP)// goto LOOP@LOOP0;JMP// function Sys.main 5(Sys.main)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 4001// Push 4001@4001D=A@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 5001// Push 5001@5001D=A@SPA=MM=D@SPM=M+1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 200// Push 200@200D=A@SPA=MM=D@SPM=M+1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 40// Push 40@40D=A@SPA=MM=D@SPM=M+1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 123// Push 123@123D=A@SPA=MM=D@SPM=M+1// call Sys.add12 1// call Sys.add12 1// push ret_2@ret_2D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Sys.add12@Sys.add120;JMP(ret_2)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Sys.add12 0(Sys.add12)// push constant 4002// Push 4002@4002D=A@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 5002// Push 5002@5002D=A@SPA=MM=D@SPM=M+1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP