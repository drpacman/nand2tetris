@256D=A@SPM=D// call Sys.init 0// push ret_0// set R13=ret_0@ret_0D=M@R13M=D@0D=A@R14M=D// set R15=Sys.init@Sys.initD=M@R15M=D@call_helperD=A(ret_0)(restore_stack_and_return)// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP(call_helper)@R13D=M@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1@R14D=M@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D@R15A=M0;JMP(boolean_cmd_helper_JLT)@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_JLTD;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_JLT0;JMP(BOOL_JLT)@SPA=MA=A-1A=A-1M=-1(END_BOOL_JLT)@SPM=M-1@R15A=M0;JMP(boolean_cmd_helper_JGT)@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_JGTD;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_JGT0;JMP(BOOL_JGT)@SPA=MA=A-1A=A-1M=-1(END_BOOL_JGT)@SPM=M-1@R15A=M0;JMP(boolean_cmd_helper_JEQ)@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_JEQD;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_JEQ0;JMP(BOOL_JEQ)@SPA=MA=A-1A=A-1M=-1(END_BOOL_JEQ)@SPM=M-1@R15A=M0;JMP// function String.new 0(String.new)// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// call Memory.alloc 1// call Memory.alloc 1// push ret_1// set R13=ret_1@ret_1D=M@R13M=D@1D=A@R14M=D// set R15=Memory.alloc@Memory.allocD=M@R15M=D@call_helperD=A(ret_1)// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_0D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_1)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 14// Push 14@14D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_2// set R13=ret_2@ret_2D=M@R13M=D@1D=A@R14M=D// set R15=Sys.error@Sys.errorD=M@R15M=D@call_helperD=A(ret_2)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_1D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_2)// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call Array.new 1// call Array.new 1// push ret_3// set R13=ret_3@ret_3D=M@R13M=D@1D=A@R14M=D// set R15=Array.new@Array.newD=M@R15M=D@call_helperD=A(ret_3)// pop this 1@THISA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE1(IF_FALSE1)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop this 0@THISA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop this 2@THISA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function String.dispose 0(String.dispose)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_2D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_3)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// call Array.dispose 1// call Array.dispose 1// push ret_4// set R13=ret_4@ret_4D=M@R13M=D@1D=A@R14M=D// set R15=Array.dispose@Array.disposeD=M@R15M=D@call_helperD=A(ret_4)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// call Memory.deAlloc 1// call Memory.deAlloc 1// push ret_5// set R13=ret_5@ret_5D=M@R13M=D@1D=A@R14M=D// set R15=Memory.deAlloc@Memory.deAllocD=M@R15M=D@call_helperD=A(ret_5)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function String.length 0(String.length)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function String.charAt 0(String.charAt)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_3D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_4)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// gt@END_BOOL_4D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_5)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// eq@END_BOOL_5D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_6)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_6// set R13=ret_6@ret_6D=M@R13M=D@1D=A@R14M=D// set R15=Sys.error@Sys.errorD=M@R15M=D@call_helperD=A(ret_6)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function String.setCharAt 0(String.setCharAt)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_6D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_7)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// gt@END_BOOL_7D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_8)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// eq@END_BOOL_8D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_9)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_7// set R13=ret_7@ret_7D=M@R13M=D@1D=A@R14M=D// set R15=Sys.error@Sys.errorD=M@R15M=D@call_helperD=A(ret_7)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function String.appendChar 0(String.appendChar)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// eq@END_BOOL_9D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_10)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 17// Push 17@17D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_8// set R13=ret_8@ret_8D=M@R13M=D@1D=A@R14M=D// set R15=Sys.error@Sys.errorD=M@R15M=D@call_helperD=A(ret_8)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop this 2@THISA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function String.eraseLastChar 0(String.eraseLastChar)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_10D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_11)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 18// Push 18@18D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_9// set R13=ret_9@ret_9D=M@R13M=D@1D=A@R14M=D// set R15=Sys.error@Sys.errorD=M@R15M=D@call_helperD=A(ret_9)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop this 2@THISA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function String.intValue 5(String.intValue)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_11D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_12)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// label IF_FALSE0(IF_FALSE0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 45// Push 45@45D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_12D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_13)// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// pop local 4@LCLA=MD=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE1(IF_FALSE1)// label WHILE_EXP0(WHILE_EXP0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// lt@END_BOOL_13D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_14)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_14D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_15)// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 9// Push 9@9D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_15D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_16)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// not@SPA=MA=A-1M=!M// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// if-goto IF_TRUE2@SPM=M-1A=MD=M@IF_TRUE2D;JNE// goto IF_FALSE2@IF_FALSE20;JMP// label IF_TRUE2(IF_TRUE2)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 10// Push 10@10D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_10// set R13=ret_10@ret_10D=M@R13M=D@2D=A@R14M=D// set R15=Math.multiply@Math.multiplyD=M@R15M=D@call_helperD=A(ret_10)// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE2(IF_FALSE2)// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// if-goto IF_TRUE3@SPM=M-1A=MD=M@IF_TRUE3D;JNE// goto IF_FALSE3@IF_FALSE30;JMP// label IF_TRUE3(IF_TRUE3)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE3(IF_FALSE3)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function String.setInt 4(String.setInt)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_16D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_17)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 19// Push 19@19D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_11// set R13=ret_11@ret_11D=M@R13M=D@1D=A@R14M=D// set R15=Sys.error@Sys.errorD=M@R15M=D@call_helperD=A(ret_11)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// call Array.new 1// call Array.new 1// push ret_12// set R13=ret_12@ret_12D=M@R13M=D@1D=A@R14M=D// set R15=Array.new@Array.newD=M@R15M=D@call_helperD=A(ret_12)// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_17D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_18)// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// pop argument 1@ARGA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE1(IF_FALSE1)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_18D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_19)// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 10// Push 10@10D=A@SPA=MM=D@SPM=M+1// call Math.divide 2// call Math.divide 2// push ret_13// set R13=ret_13@ret_13D=M@R13M=D@2D=A@R14M=D// set R15=Math.divide@Math.divideD=M@R15M=D@call_helperD=A(ret_13)// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 10// Push 10@10D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_14// set R13=ret_14@ret_14D=M@R13M=D@2D=A@R14M=D// set R15=Math.multiply@Math.multiplyD=M@R15M=D@call_helperD=A(ret_14)// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop argument 1@ARGA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// if-goto IF_TRUE2@SPM=M-1A=MD=M@IF_TRUE2D;JNE// goto IF_FALSE2@IF_FALSE20;JMP// label IF_TRUE2(IF_TRUE2)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 45// Push 45@45D=A@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE2(IF_FALSE2)// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// lt@END_BOOL_19D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_20)// if-goto IF_TRUE3@SPM=M-1A=MD=M@IF_TRUE3D;JNE// goto IF_FALSE3@IF_FALSE30;JMP// label IF_TRUE3(IF_TRUE3)// push constant 19// Push 19@19D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_15// set R13=ret_15@ret_15D=M@R13M=D@1D=A@R14M=D// set R15=Sys.error@Sys.errorD=M@R15M=D@call_helperD=A(ret_15)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE3(IF_FALSE3)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_20D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_21)// if-goto IF_TRUE4@SPM=M-1A=MD=M@IF_TRUE4D;JNE// goto IF_FALSE4@IF_FALSE40;JMP// label IF_TRUE4(IF_TRUE4)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// pop this 2@THISA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END4@IF_END40;JMP// label IF_FALSE4(IF_FALSE4)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop this 2@THISA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP1(WHILE_EXP1)// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// lt@END_BOOL_21D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_22)// not@SPA=MA=A-1M=!M// if-goto WHILE_END1@SPM=M-1A=MD=M@WHILE_END1D;JNE// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop this 2@THISA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP1@WHILE_EXP10;JMP// label WHILE_END1(WHILE_END1)// label IF_END4(IF_END4)// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// call Array.dispose 1// call Array.dispose 1// push ret_16// set R13=ret_16@ret_16D=M@R13M=D@1D=A@R14M=D// set R15=Array.dispose@Array.disposeD=M@R15M=D@call_helperD=A(ret_16)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function String.newLine 0(String.newLine)// push constant 128// Push 128@128D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function String.backSpace 0(String.backSpace)// push constant 129// Push 129@129D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function String.doubleQuote 0(String.doubleQuote)// push constant 34// Push 34@34D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Math.init 1(Math.init)// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Array.new 1// call Array.new 1// push ret_17// set R13=ret_17@ret_17D=M@R13M=D@1D=A@R14M=D// set R15=Array.new@Array.newD=M@R15M=D@call_helperD=A(ret_17)// pop static 1@16D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Array.new 1// call Array.new 1// push ret_18// set R13=ret_18@ret_18D=M@R13M=D@1D=A@R14M=D// set R15=Array.new@Array.newD=M@R15M=D@call_helperD=A(ret_18)// pop static 0@16D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push static 0@16D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_0D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_1)// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 0@16D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push static 0@16D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push static 0@16D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Math.abs 0(Math.abs)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_1D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_2)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// pop argument 0@ARGA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Math.multiply 5(Math.multiply)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_2D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_3)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_3D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_4)// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_4D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_5)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_5D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_6)// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// pop local 4@LCLA=MD=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call Math.abs 1// call Math.abs 1// push ret_19// set R13=ret_19@ret_19D=M@R13M=D@1D=A@R14M=D// set R15=Math.abs@Math.absD=M@R15M=D@call_helperD=A(ret_19)// pop argument 0@ARGA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// call Math.abs 1// call Math.abs 1// push ret_20// set R13=ret_20@ret_20D=M@R13M=D@1D=A@R14M=D// set R15=Math.abs@Math.absD=M@R15M=D@call_helperD=A(ret_20)// pop argument 1@ARGA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// lt@END_BOOL_6D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_7)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop argument 0@ARGA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop argument 1@ARGA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// label WHILE_EXP0(WHILE_EXP0)// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// lt@END_BOOL_7D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_8)// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push static 0@16D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_8D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_9)// not@SPA=MA=A-1M=!M// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push static 0@16D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE1(IF_FALSE1)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop argument 0@ARGA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// if-goto IF_TRUE2@SPM=M-1A=MD=M@IF_TRUE2D;JNE// goto IF_FALSE2@IF_FALSE20;JMP// label IF_TRUE2(IF_TRUE2)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE2(IF_FALSE2)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Math.divide 4(Math.divide)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_9D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_10)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_21// set R13=ret_21@ret_21D=M@R13M=D@1D=A@R14M=D// set R15=Sys.error@Sys.errorD=M@R15M=D@call_helperD=A(ret_21)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_10D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_11)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_11D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_12)// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_12D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_13)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_13D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_14)// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push static 1@16D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// call Math.abs 1// call Math.abs 1// push ret_22// set R13=ret_22@ret_22D=M@R13M=D@1D=A@R14M=D// set R15=Math.abs@Math.absD=M@R15M=D@call_helperD=A(ret_22)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call Math.abs 1// call Math.abs 1// push ret_23// set R13=ret_23@ret_23D=M@R13M=D@1D=A@R14M=D// set R15=Math.abs@Math.absD=M@R15M=D@call_helperD=A(ret_23)// pop argument 0@ARGA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_14D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_15)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push constant 32767// Push 32767@32767D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 1@16D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 1@16D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// lt@END_BOOL_15D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_16)// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push static 1@16D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 1@16D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 1@16D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push static 1@16D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// gt@END_BOOL_16D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_17)// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// if-goto IF_TRUE2@SPM=M-1A=MD=M@IF_TRUE2D;JNE// goto IF_FALSE2@IF_FALSE20;JMP// label IF_TRUE2(IF_TRUE2)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE2(IF_FALSE2)// label IF_FALSE1(IF_FALSE1)// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// label WHILE_EXP1(WHILE_EXP1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// gt@END_BOOL_17D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_18)// not@SPA=MA=A-1M=!M// if-goto WHILE_END1@SPM=M-1A=MD=M@WHILE_END1D;JNE// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 1@16D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// gt@END_BOOL_18D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_19)// not@SPA=MA=A-1M=!M// if-goto IF_TRUE3@SPM=M-1A=MD=M@IF_TRUE3D;JNE// goto IF_FALSE3@IF_FALSE30;JMP// label IF_TRUE3(IF_TRUE3)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 0@16D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 1@16D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop argument 0@ARGA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE3(IF_FALSE3)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP1@WHILE_EXP10;JMP// label WHILE_END1(WHILE_END1)// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// if-goto IF_TRUE4@SPM=M-1A=MD=M@IF_TRUE4D;JNE// goto IF_FALSE4@IF_FALSE40;JMP// label IF_TRUE4(IF_TRUE4)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE4(IF_FALSE4)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Math.sqrt 4(Math.sqrt)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_19D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_20)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 4// Push 4@4D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_24// set R13=ret_24@ret_24D=M@R13M=D@1D=A@R14M=D// set R15=Sys.error@Sys.errorD=M@R15M=D@call_helperD=A(ret_24)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push constant 7// Push 7@7D=A@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// gt@END_BOOL_20D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_21)// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 0@16D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_25// set R13=ret_25@ret_25D=M@R13M=D@2D=A@R14M=D// set R15=Math.multiply@Math.multiplyD=M@R15M=D@call_helperD=A(ret_25)// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// gt@END_BOOL_21D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_22)// not@SPA=MA=A-1M=!M// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_22D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_23)// not@SPA=MA=A-1M=!M// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE1(IF_FALSE1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Math.max 0(Math.max)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// gt@END_BOOL_23D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_24)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop argument 1@ARGA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Math.min 0(Math.min)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// lt@END_BOOL_24D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_25)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop argument 1@ARGA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Array.new 0(Array.new)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_0D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_1)// not@SPA=MA=A-1M=!M// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_26// set R13=ret_26@ret_26D=M@R13M=D@1D=A@R14M=D// set R15=Sys.error@Sys.errorD=M@R15M=D@call_helperD=A(ret_26)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call Memory.alloc 1// call Memory.alloc 1// push ret_27// set R13=ret_27@ret_27D=M@R13M=D@1D=A@R14M=D// set R15=Memory.alloc@Memory.allocD=M@R15M=D@call_helperD=A(ret_27)// return@restore_stack_and_return0;JMP// function Array.dispose 0(Array.dispose)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// call Memory.deAlloc 1// call Memory.deAlloc 1// push ret_28// set R13=ret_28@ret_28D=M@R13M=D@1D=A@R14M=D// set R15=Memory.deAlloc@Memory.deAllocD=M@R15M=D@call_helperD=A(ret_28)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Keyboard.init 0(Keyboard.init)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Keyboard.keyPressed 0(Keyboard.keyPressed)// push constant 24576// Push 24576@24576D=A@SPA=MM=D@SPM=M+1// call Memory.peek 1// call Memory.peek 1// push ret_29// set R13=ret_29@ret_29D=M@R13M=D@1D=A@R14M=D// set R15=Memory.peek@Memory.peekD=M@R15M=D@call_helperD=A(ret_29)// return@restore_stack_and_return0;JMP// function Keyboard.readChar 2(Keyboard.readChar)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.printChar 1// call Output.printChar 1// push ret_30// set R13=ret_30@ret_30D=M@R13M=D@1D=A@R14M=D// set R15=Output.printChar@Output.printCharD=M@R15M=D@call_helperD=A(ret_30)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_0D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_1D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_2)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// call Keyboard.keyPressed 0// call Keyboard.keyPressed 0// push ret_31// set R13=ret_31@ret_31D=M@R13M=D@0D=A@R14M=D// set R15=Keyboard.keyPressed@Keyboard.keyPressedD=M@R15M=D@call_helperD=A(ret_31)// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_2D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_3)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// call String.backSpace 0// call String.backSpace 0// push ret_32// set R13=ret_32@ret_32D=M@R13M=D@0D=A@R14M=D// set R15=String.backSpace@String.backSpaceD=M@R15M=D@call_helperD=A(ret_32)// call Output.printChar 1// call Output.printChar 1// push ret_33// set R13=ret_33@ret_33D=M@R13M=D@1D=A@R14M=D// set R15=Output.printChar@Output.printCharD=M@R15M=D@call_helperD=A(ret_33)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// call Output.printChar 1// call Output.printChar 1// push ret_34// set R13=ret_34@ret_34D=M@R13M=D@1D=A@R14M=D// set R15=Output.printChar@Output.printCharD=M@R15M=D@call_helperD=A(ret_34)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Keyboard.readLine 5(Keyboard.readLine)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 80// Push 80@80D=A@SPA=MM=D@SPM=M+1// call String.new 1// call String.new 1// push ret_35// set R13=ret_35@ret_35D=M@R13M=D@1D=A@R14M=D// set R15=String.new@String.newD=M@R15M=D@call_helperD=A(ret_35)// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call Output.printString 1// call Output.printString 1// push ret_36// set R13=ret_36@ret_36D=M@R13M=D@1D=A@R14M=D// set R15=Output.printString@Output.printStringD=M@R15M=D@call_helperD=A(ret_36)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call String.newLine 0// call String.newLine 0// push ret_37// set R13=ret_37@ret_37D=M@R13M=D@0D=A@R14M=D// set R15=String.newLine@String.newLineD=M@R15M=D@call_helperD=A(ret_37)// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call String.backSpace 0// call String.backSpace 0// push ret_38// set R13=ret_38@ret_38D=M@R13M=D@0D=A@R14M=D// set R15=String.backSpace@String.backSpaceD=M@R15M=D@call_helperD=A(ret_38)// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// call Keyboard.readChar 0// call Keyboard.readChar 0// push ret_39// set R13=ret_39@ret_39D=M@R13M=D@0D=A@R14M=D// set R15=Keyboard.readChar@Keyboard.readCharD=M@R15M=D@call_helperD=A(ret_39)// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// eq@END_BOOL_3D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_4)// pop local 4@LCLA=MD=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// eq@END_BOOL_4D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_5)// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// call String.eraseLastChar 1// call String.eraseLastChar 1// push ret_40// set R13=ret_40@ret_40D=M@R13M=D@1D=A@R14M=D// set R15=String.eraseLastChar@String.eraseLastCharD=M@R15M=D@call_helperD=A(ret_40)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END1@IF_END10;JMP// label IF_FALSE1(IF_FALSE1)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// call String.appendChar 2// call String.appendChar 2// push ret_41// set R13=ret_41@ret_41D=M@R13M=D@2D=A@R14M=D// set R15=String.appendChar@String.appendCharD=M@R15M=D@call_helperD=A(ret_41)// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END1(IF_END1)// label IF_FALSE0(IF_FALSE0)// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Keyboard.readInt 2(Keyboard.readInt)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call Keyboard.readLine 1// call Keyboard.readLine 1// push ret_42// set R13=ret_42@ret_42D=M@R13M=D@1D=A@R14M=D// set R15=Keyboard.readLine@Keyboard.readLineD=M@R15M=D@call_helperD=A(ret_42)// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// call String.intValue 1// call String.intValue 1// push ret_43// set R13=ret_43@ret_43D=M@R13M=D@1D=A@R14M=D// set R15=String.intValue@String.intValueD=M@R15M=D@call_helperD=A(ret_43)// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// call String.dispose 1// call String.dispose 1// push ret_44// set R13=ret_44@ret_44D=M@R13M=D@1D=A@R14M=D// set R15=String.dispose@String.disposeD=M@R15M=D@call_helperD=A(ret_44)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Sys.init 0(Sys.init)// call Memory.init 0// call Memory.init 0// push ret_45// set R13=ret_45@ret_45D=M@R13M=D@0D=A@R14M=D// set R15=Memory.init@Memory.initD=M@R15M=D@call_helperD=A(ret_45)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call Math.init 0// call Math.init 0// push ret_46// set R13=ret_46@ret_46D=M@R13M=D@0D=A@R14M=D// set R15=Math.init@Math.initD=M@R15M=D@call_helperD=A(ret_46)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call Screen.init 0// call Screen.init 0// push ret_47// set R13=ret_47@ret_47D=M@R13M=D@0D=A@R14M=D// set R15=Screen.init@Screen.initD=M@R15M=D@call_helperD=A(ret_47)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call Output.init 0// call Output.init 0// push ret_48// set R13=ret_48@ret_48D=M@R13M=D@0D=A@R14M=D// set R15=Output.init@Output.initD=M@R15M=D@call_helperD=A(ret_48)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call Keyboard.init 0// call Keyboard.init 0// push ret_49// set R13=ret_49@ret_49D=M@R13M=D@0D=A@R14M=D// set R15=Keyboard.init@Keyboard.initD=M@R15M=D@call_helperD=A(ret_49)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call Main.main 0// call Main.main 0// push ret_50// set R13=ret_50@ret_50D=M@R13M=D@0D=A@R14M=D// set R15=Main.main@Main.mainD=M@R15M=D@call_helperD=A(ret_50)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call Sys.halt 0// call Sys.halt 0// push ret_51// set R13=ret_51@ret_51D=M@R13M=D@0D=A@R14M=D// set R15=Sys.halt@Sys.haltD=M@R15M=D@call_helperD=A(ret_51)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Sys.halt 0(Sys.halt)// label WHILE_EXP0(WHILE_EXP0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Sys.wait 1(Sys.wait)// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_0D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_1)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_52// set R13=ret_52@ret_52D=M@R13M=D@1D=A@R14M=D// set R15=Sys.error@Sys.errorD=M@R15M=D@call_helperD=A(ret_52)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// label WHILE_EXP0(WHILE_EXP0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_1D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_2)// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push constant 50// Push 50@50D=A@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP1(WHILE_EXP1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_2D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_3)// not@SPA=MA=A-1M=!M// if-goto WHILE_END1@SPM=M-1A=MD=M@WHILE_END1D;JNE// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP1@WHILE_EXP10;JMP// label WHILE_END1(WHILE_END1)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop argument 0@ARGA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Sys.error 0(Sys.error)// push constant 69// Push 69@69D=A@SPA=MM=D@SPM=M+1// call Output.printChar 1// call Output.printChar 1// push ret_53// set R13=ret_53@ret_53D=M@R13M=D@1D=A@R14M=D// set R15=Output.printChar@Output.printCharD=M@R15M=D@call_helperD=A(ret_53)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 82// Push 82@82D=A@SPA=MM=D@SPM=M+1// call Output.printChar 1// call Output.printChar 1// push ret_54// set R13=ret_54@ret_54D=M@R13M=D@1D=A@R14M=D// set R15=Output.printChar@Output.printCharD=M@R15M=D@call_helperD=A(ret_54)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 82// Push 82@82D=A@SPA=MM=D@SPM=M+1// call Output.printChar 1// call Output.printChar 1// push ret_55// set R13=ret_55@ret_55D=M@R13M=D@1D=A@R14M=D// set R15=Output.printChar@Output.printCharD=M@R15M=D@call_helperD=A(ret_55)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call Output.printInt 1// call Output.printInt 1// push ret_56// set R13=ret_56@ret_56D=M@R13M=D@1D=A@R14M=D// set R15=Output.printInt@Output.printIntD=M@R15M=D@call_helperD=A(ret_56)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call Sys.halt 0// call Sys.halt 0// push ret_57// set R13=ret_57@ret_57D=M@R13M=D@0D=A@R14M=D// set R15=Sys.halt@Sys.haltD=M@R15M=D@call_helperD=A(ret_57)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Output.init 0(Output.init)// push constant 16384// Push 16384@16384D=A@SPA=MM=D@SPM=M+1// pop static 4@18D=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// pop static 2@18D=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// pop static 1@18D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop static 0@18D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// call String.new 1// call String.new 1// push ret_58// set R13=ret_58@ret_58D=M@R13M=D@1D=A@R14M=D// set R15=String.new@String.newD=M@R15M=D@call_helperD=A(ret_58)// pop static 3@18D=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call Output.initMap 0// call Output.initMap 0// push ret_59// set R13=ret_59@ret_59D=M@R13M=D@0D=A@R14M=D// set R15=Output.initMap@Output.initMapD=M@R15M=D@call_helperD=A(ret_59)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call Output.createShiftedMap 0// call Output.createShiftedMap 0// push ret_60// set R13=ret_60@ret_60D=M@R13M=D@0D=A@R14M=D// set R15=Output.createShiftedMap@Output.createShiftedMapD=M@R15M=D@call_helperD=A(ret_60)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Output.initMap 0(Output.initMap)// push constant 127// Push 127@127D=A@SPA=MM=D@SPM=M+1// call Array.new 1// call Array.new 1// push ret_61// set R13=ret_61@ret_61D=M@R13M=D@1D=A@R14M=D// set R15=Array.new@Array.newD=M@R15M=D@call_helperD=A(ret_61)// pop static 5@18D=A@5D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_62// set R13=ret_62@ret_62D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_62)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_63// set R13=ret_63@ret_63D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_63)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 33// Push 33@33D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_64// set R13=ret_64@ret_64D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_64)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 34// Push 34@34D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 20// Push 20@20D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_65// set R13=ret_65@ret_65D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_65)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 35// Push 35@35D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 18// Push 18@18D=A@SPA=MM=D@SPM=M+1// push constant 18// Push 18@18D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 18// Push 18@18D=A@SPA=MM=D@SPM=M+1// push constant 18// Push 18@18D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 18// Push 18@18D=A@SPA=MM=D@SPM=M+1// push constant 18// Push 18@18D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_66// set R13=ret_66@ret_66D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_66)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 36// Push 36@36D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_67// set R13=ret_67@ret_67D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_67)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 37// Push 37@37D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 35// Push 35@35D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 49// Push 49@49D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_68// set R13=ret_68@ret_68D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_68)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 38// Push 38@38D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_69// set R13=ret_69@ret_69D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_69)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 39// Push 39@39D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_70// set R13=ret_70@ret_70D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_70)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 40// Push 40@40D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_71// set R13=ret_71@ret_71D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_71)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 41// Push 41@41D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_72// set R13=ret_72@ret_72D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_72)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 42// Push 42@42D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_73// set R13=ret_73@ret_73D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_73)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 43// Push 43@43D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_74// set R13=ret_74@ret_74D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_74)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 44// Push 44@44D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_75// set R13=ret_75@ret_75D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_75)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 45// Push 45@45D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_76// set R13=ret_76@ret_76D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_76)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 46// Push 46@46D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_77// set R13=ret_77@ret_77D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_77)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 47// Push 47@47D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_78// set R13=ret_78@ret_78D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_78)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_79// set R13=ret_79@ret_79D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_79)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 49// Push 49@49D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 14// Push 14@14D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_80// set R13=ret_80@ret_80D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_80)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 50// Push 50@50D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_81// set R13=ret_81@ret_81D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_81)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 28// Push 28@28D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_82// set R13=ret_82@ret_82D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_82)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 52// Push 52@52D=A@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 28// Push 28@28D=A@SPA=MM=D@SPM=M+1// push constant 26// Push 26@26D=A@SPA=MM=D@SPM=M+1// push constant 25// Push 25@25D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 60// Push 60@60D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_83// set R13=ret_83@ret_83D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_83)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 53// Push 53@53D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 31// Push 31@31D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_84// set R13=ret_84@ret_84D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_84)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 28// Push 28@28D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 31// Push 31@31D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_85// set R13=ret_85@ret_85D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_85)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 55// Push 55@55D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 49// Push 49@49D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_86// set R13=ret_86@ret_86D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_86)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 56// Push 56@56D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_87// set R13=ret_87@ret_87D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_87)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 57// Push 57@57D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 62// Push 62@62D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 14// Push 14@14D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_88// set R13=ret_88@ret_88D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_88)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 58// Push 58@58D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_89// set R13=ret_89@ret_89D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_89)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 59// Push 59@59D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_90// set R13=ret_90@ret_90D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_90)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 60// Push 60@60D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_91// set R13=ret_91@ret_91D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_91)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 61// Push 61@61D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_92// set R13=ret_92@ret_92D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_92)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 62// Push 62@62D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_93// set R13=ret_93@ret_93D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_93)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 64// Push 64@64D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 59// Push 59@59D=A@SPA=MM=D@SPM=M+1// push constant 59// Push 59@59D=A@SPA=MM=D@SPM=M+1// push constant 59// Push 59@59D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_94// set R13=ret_94@ret_94D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_94)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_95// set R13=ret_95@ret_95D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_95)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 65// Push 65@65D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_96// set R13=ret_96@ret_96D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_96)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 66// Push 66@66D=A@SPA=MM=D@SPM=M+1// push constant 31// Push 31@31D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 31// Push 31@31D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 31// Push 31@31D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_97// set R13=ret_97@ret_97D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_97)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 67// Push 67@67D=A@SPA=MM=D@SPM=M+1// push constant 28// Push 28@28D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 35// Push 35@35D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 35// Push 35@35D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 28// Push 28@28D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_98// set R13=ret_98@ret_98D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_98)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 68// Push 68@68D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_99// set R13=ret_99@ret_99D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_99)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 69// Push 69@69D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 35// Push 35@35D=A@SPA=MM=D@SPM=M+1// push constant 11// Push 11@11D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 11// Push 11@11D=A@SPA=MM=D@SPM=M+1// push constant 35// Push 35@35D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_100// set R13=ret_100@ret_100D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_100)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 70// Push 70@70D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 35// Push 35@35D=A@SPA=MM=D@SPM=M+1// push constant 11// Push 11@11D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 11// Push 11@11D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_101// set R13=ret_101@ret_101D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_101)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 71// Push 71@71D=A@SPA=MM=D@SPM=M+1// push constant 28// Push 28@28D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 35// Push 35@35D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 59// Push 59@59D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 44// Push 44@44D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_102// set R13=ret_102@ret_102D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_102)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 72// Push 72@72D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_103// set R13=ret_103@ret_103D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_103)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 73// Push 73@73D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_104// set R13=ret_104@ret_104D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_104)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 74// Push 74@74D=A@SPA=MM=D@SPM=M+1// push constant 60// Push 60@60D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 14// Push 14@14D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_105// set R13=ret_105@ret_105D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_105)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 75// Push 75@75D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_106// set R13=ret_106@ret_106D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_106)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 76// Push 76@76D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 35// Push 35@35D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_107// set R13=ret_107@ret_107D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_107)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 77// Push 77@77D=A@SPA=MM=D@SPM=M+1// push constant 33// Push 33@33D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_108// set R13=ret_108@ret_108D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_108)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 78// Push 78@78D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 55// Push 55@55D=A@SPA=MM=D@SPM=M+1// push constant 55// Push 55@55D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 59// Push 59@59D=A@SPA=MM=D@SPM=M+1// push constant 59// Push 59@59D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_109// set R13=ret_109@ret_109D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_109)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 79// Push 79@79D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_110// set R13=ret_110@ret_110D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_110)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 80// Push 80@80D=A@SPA=MM=D@SPM=M+1// push constant 31// Push 31@31D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 31// Push 31@31D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_111// set R13=ret_111@ret_111D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_111)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 81// Push 81@81D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 59// Push 59@59D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_112// set R13=ret_112@ret_112D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_112)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 82// Push 82@82D=A@SPA=MM=D@SPM=M+1// push constant 31// Push 31@31D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 31// Push 31@31D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_113// set R13=ret_113@ret_113D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_113)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 83// Push 83@83D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 28// Push 28@28D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_114// set R13=ret_114@ret_114D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_114)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 84// Push 84@84D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 45// Push 45@45D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_115// set R13=ret_115@ret_115D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_115)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 85// Push 85@85D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_116// set R13=ret_116@ret_116D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_116)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 86// Push 86@86D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_117// set R13=ret_117@ret_117D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_117)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 87// Push 87@87D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 18// Push 18@18D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_118// set R13=ret_118@ret_118D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_118)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 88// Push 88@88D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_119// set R13=ret_119@ret_119D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_119)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 89// Push 89@89D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_120// set R13=ret_120@ret_120D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_120)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 90// Push 90@90D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 49// Push 49@49D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 35// Push 35@35D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_121// set R13=ret_121@ret_121D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_121)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 91// Push 91@91D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_122// set R13=ret_122@ret_122D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_122)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 92// Push 92@92D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_123// set R13=ret_123@ret_123D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_123)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 93// Push 93@93D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_124// set R13=ret_124@ret_124D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_124)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 94// Push 94@94D=A@SPA=MM=D@SPM=M+1// push constant 8// Push 8@8D=A@SPA=MM=D@SPM=M+1// push constant 28// Push 28@28D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_125// set R13=ret_125@ret_125D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_125)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 95// Push 95@95D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_126// set R13=ret_126@ret_126D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_126)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 96// Push 96@96D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_127// set R13=ret_127@ret_127D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_127)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 97// Push 97@97D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 14// Push 14@14D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_128// set R13=ret_128@ret_128D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_128)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 98// Push 98@98D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_129// set R13=ret_129@ret_129D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_129)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 99// Push 99@99D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_130// set R13=ret_130@ret_130D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_130)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 100// Push 100@100D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 60// Push 60@60D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_131// set R13=ret_131@ret_131D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_131)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 101// Push 101@101D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_132// set R13=ret_132@ret_132D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_132)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 102// Push 102@102D=A@SPA=MM=D@SPM=M+1// push constant 28// Push 28@28D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 38// Push 38@38D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_133// set R13=ret_133@ret_133D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_133)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 103// Push 103@103D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 62// Push 62@62D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_134// set R13=ret_134@ret_134D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_134)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 104// Push 104@104D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 55// Push 55@55D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_135// set R13=ret_135@ret_135D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_135)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 105// Push 105@105D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 14// Push 14@14D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_136// set R13=ret_136@ret_136D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_136)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 106// Push 106@106D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 56// Push 56@56D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_137// set R13=ret_137@ret_137D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_137)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 107// Push 107@107D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_138// set R13=ret_138@ret_138D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_138)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 108// Push 108@108D=A@SPA=MM=D@SPM=M+1// push constant 14// Push 14@14D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_139// set R13=ret_139@ret_139D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_139)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 109// Push 109@109D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 29// Push 29@29D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 43// Push 43@43D=A@SPA=MM=D@SPM=M+1// push constant 43// Push 43@43D=A@SPA=MM=D@SPM=M+1// push constant 43// Push 43@43D=A@SPA=MM=D@SPM=M+1// push constant 43// Push 43@43D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_140// set R13=ret_140@ret_140D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_140)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 110// Push 110@110D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 29// Push 29@29D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_141// set R13=ret_141@ret_141D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_141)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 111// Push 111@111D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_142// set R13=ret_142@ret_142D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_142)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 112// Push 112@112D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 31// Push 31@31D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_143// set R13=ret_143@ret_143D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_143)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 113// Push 113@113D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 62// Push 62@62D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_144// set R13=ret_144@ret_144D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_144)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 114// Push 114@114D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 29// Push 29@29D=A@SPA=MM=D@SPM=M+1// push constant 55// Push 55@55D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 7// Push 7@7D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_145// set R13=ret_145@ret_145D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_145)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 115// Push 115@115D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_146// set R13=ret_146@ret_146D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_146)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 116// Push 116@116D=A@SPA=MM=D@SPM=M+1// push constant 4// Push 4@4D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 28// Push 28@28D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_147// set R13=ret_147@ret_147D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_147)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 117// Push 117@117D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_148// set R13=ret_148@ret_148D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_148)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 118// Push 118@118D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_149// set R13=ret_149@ret_149D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_149)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 119// Push 119@119D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 18// Push 18@18D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_150// set R13=ret_150@ret_150D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_150)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 120// Push 120@120D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_151// set R13=ret_151@ret_151D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_151)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 121// Push 121@121D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 62// Push 62@62D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_152// set R13=ret_152@ret_152D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_152)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 122// Push 122@122D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_153// set R13=ret_153@ret_153D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_153)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 123// Push 123@123D=A@SPA=MM=D@SPM=M+1// push constant 56// Push 56@56D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 7// Push 7@7D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 56// Push 56@56D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_154// set R13=ret_154@ret_154D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_154)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 124// Push 124@124D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_155// set R13=ret_155@ret_155D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_155)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 125// Push 125@125D=A@SPA=MM=D@SPM=M+1// push constant 7// Push 7@7D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 56// Push 56@56D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 7// Push 7@7D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_156// set R13=ret_156@ret_156D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_156)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 126// Push 126@126D=A@SPA=MM=D@SPM=M+1// push constant 38// Push 38@38D=A@SPA=MM=D@SPM=M+1// push constant 45// Push 45@45D=A@SPA=MM=D@SPM=M+1// push constant 25// Push 25@25D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_157// set R13=ret_157@ret_157D=M@R13M=D@12D=A@R14M=D// set R15=Output.create@Output.createD=M@R15M=D@call_helperD=A(ret_157)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Output.create 1(Output.create)// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 11// Push 11@11D=A@SPA=MM=D@SPM=M+1// call Array.new 1// call Array.new 1// push ret_158// set R13=ret_158@ret_158D=M@R13M=D@1D=A@R14M=D// set R15=Array.new@Array.newD=M@R15M=D@call_helperD=A(ret_158)// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push static 5@18D=A@5A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 4@ARGA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 4// Push 4@4D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 5@ARGA=MD=A@5A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 5// Push 5@5D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 6@ARGA=MD=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 7@ARGA=MD=A@7A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 7// Push 7@7D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 8@ARGA=MD=A@8A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 8// Push 8@8D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 9@ARGA=MD=A@9A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 9// Push 9@9D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 10@ARGA=MD=A@10A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 10// Push 10@10D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 11@ARGA=MD=A@11A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Output.createShiftedMap 4(Output.createShiftedMap)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 127// Push 127@127D=A@SPA=MM=D@SPM=M+1// call Array.new 1// call Array.new 1// push ret_159// set R13=ret_159@ret_159D=M@R13M=D@1D=A@R14M=D// set R15=Array.new@Array.newD=M@R15M=D@call_helperD=A(ret_159)// pop static 6@18D=A@6D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 127// Push 127@127D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_0D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_1)// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push static 5@18D=A@5A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 11// Push 11@11D=A@SPA=MM=D@SPM=M+1// call Array.new 1// call Array.new 1// push ret_160// set R13=ret_160@ret_160D=M@R13M=D@1D=A@R14M=D// set R15=Array.new@Array.newD=M@R15M=D@call_helperD=A(ret_160)// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push static 6@18D=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP1(WHILE_EXP1)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 11// Push 11@11D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_1D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_2)// not@SPA=MA=A-1M=!M// if-goto WHILE_END1@SPM=M-1A=MD=M@WHILE_END1D;JNE// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 256// Push 256@256D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_161// set R13=ret_161@ret_161D=M@R13M=D@2D=A@R14M=D// set R15=Math.multiply@Math.multiplyD=M@R15M=D@call_helperD=A(ret_161)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP1@WHILE_EXP10;JMP// label WHILE_END1(WHILE_END1)// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_2D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_3)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END0@IF_END00;JMP// label IF_FALSE0(IF_FALSE0)// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END0(IF_END0)// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Output.getMap 1(Output.getMap)// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_3D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_4)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 126// Push 126@126D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_4D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_5)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop argument 0@ARGA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push static 2@18D=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push static 5@18D=A@5A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END1@IF_END10;JMP// label IF_FALSE1(IF_FALSE1)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push static 6@18D=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END1(IF_END1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Output.drawChar 4(Output.drawChar)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call Output.getMap 1// call Output.getMap 1// push ret_162// set R13=ret_162@ret_162D=M@R13M=D@1D=A@R14M=D// set R15=Output.getMap@Output.getMapD=M@R15M=D@call_helperD=A(ret_162)// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push static 1@18D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 11// Push 11@11D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_5D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_6)// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push static 2@18D=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 4@18D=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 256// Push 256@256D=A@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END0@IF_END00;JMP// label IF_FALSE0(IF_FALSE0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 4@18D=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 255// Push 255@255D=A@SPA=MM=D@SPM=M+1// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END0(IF_END0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 4@18D=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Output.moveCursor 0(Output.moveCursor)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_6D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_7)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 22// Push 22@22D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_7D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_8)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_8D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_9)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_9D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_10)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 20// Push 20@20D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_163// set R13=ret_163@ret_163D=M@R13M=D@1D=A@R14M=D// set R15=Sys.error@Sys.errorD=M@R15M=D@call_helperD=A(ret_163)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// call Math.divide 2// call Math.divide 2// push ret_164// set R13=ret_164@ret_164D=M@R13M=D@2D=A@R14M=D// set R15=Math.divide@Math.divideD=M@R15M=D@call_helperD=A(ret_164)// pop static 0@18D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 352// Push 352@352D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_165// set R13=ret_165@ret_165D=M@R13M=D@2D=A@R14M=D// set R15=Math.multiply@Math.multiplyD=M@R15M=D@call_helperD=A(ret_165)// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push static 0@18D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop static 1@18D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push static 0@18D=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_166// set R13=ret_166@ret_166D=M@R13M=D@2D=A@R14M=D// set R15=Math.multiply@Math.multiplyD=M@R15M=D@call_helperD=A(ret_166)// eq@END_BOOL_10D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_11)// pop static 2@18D=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// call Output.drawChar 1// call Output.drawChar 1// push ret_167// set R13=ret_167@ret_167D=M@R13M=D@1D=A@R14M=D// set R15=Output.drawChar@Output.drawCharD=M@R15M=D@call_helperD=A(ret_167)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Output.printChar 0(Output.printChar)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call String.newLine 0// call String.newLine 0// push ret_168// set R13=ret_168@ret_168D=M@R13M=D@0D=A@R14M=D// set R15=String.newLine@String.newLineD=M@R15M=D@call_helperD=A(ret_168)// eq@END_BOOL_11D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_12)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// call Output.println 0// call Output.println 0// push ret_169// set R13=ret_169@ret_169D=M@R13M=D@0D=A@R14M=D// set R15=Output.println@Output.printlnD=M@R15M=D@call_helperD=A(ret_169)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END0@IF_END00;JMP// label IF_FALSE0(IF_FALSE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call String.backSpace 0// call String.backSpace 0// push ret_170// set R13=ret_170@ret_170D=M@R13M=D@0D=A@R14M=D// set R15=String.backSpace@String.backSpaceD=M@R15M=D@call_helperD=A(ret_170)// eq@END_BOOL_12D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_13)// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// call Output.backSpace 0// call Output.backSpace 0// push ret_171// set R13=ret_171@ret_171D=M@R13M=D@0D=A@R14M=D// set R15=Output.backSpace@Output.backSpaceD=M@R15M=D@call_helperD=A(ret_171)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END1@IF_END10;JMP// label IF_FALSE1(IF_FALSE1)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call Output.drawChar 1// call Output.drawChar 1// push ret_172// set R13=ret_172@ret_172D=M@R13M=D@1D=A@R14M=D// set R15=Output.drawChar@Output.drawCharD=M@R15M=D@call_helperD=A(ret_172)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push static 2@18D=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// if-goto IF_TRUE2@SPM=M-1A=MD=M@IF_TRUE2D;JNE// goto IF_FALSE2@IF_FALSE20;JMP// label IF_TRUE2(IF_TRUE2)// push static 0@18D=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop static 0@18D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push static 1@18D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop static 1@18D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE2(IF_FALSE2)// push static 0@18D=M@SPA=MM=D@SPM=M+1// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_13D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_14)// if-goto IF_TRUE3@SPM=M-1A=MD=M@IF_TRUE3D;JNE// goto IF_FALSE3@IF_FALSE30;JMP// label IF_TRUE3(IF_TRUE3)// call Output.println 0// call Output.println 0// push ret_173// set R13=ret_173@ret_173D=M@R13M=D@0D=A@R14M=D// set R15=Output.println@Output.printlnD=M@R15M=D@call_helperD=A(ret_173)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END3@IF_END30;JMP// label IF_FALSE3(IF_FALSE3)// push static 2@18D=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// pop static 2@18D=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END3(IF_END3)// label IF_END1(IF_END1)// label IF_END0(IF_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Output.printString 2(Output.printString)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call String.length 1// call String.length 1// push ret_174// set R13=ret_174@ret_174D=M@R13M=D@1D=A@R14M=D// set R15=String.length@String.lengthD=M@R15M=D@call_helperD=A(ret_174)// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// lt@END_BOOL_14D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_15)// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// call String.charAt 2// call String.charAt 2// push ret_175// set R13=ret_175@ret_175D=M@R13M=D@2D=A@R14M=D// set R15=String.charAt@String.charAtD=M@R15M=D@call_helperD=A(ret_175)// call Output.printChar 1// call Output.printChar 1// push ret_176// set R13=ret_176@ret_176D=M@R13M=D@1D=A@R14M=D// set R15=Output.printChar@Output.printCharD=M@R15M=D@call_helperD=A(ret_176)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Output.printInt 0(Output.printInt)// push static 3@18D=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call String.setInt 2// call String.setInt 2// push ret_177// set R13=ret_177@ret_177D=M@R13M=D@2D=A@R14M=D// set R15=String.setInt@String.setIntD=M@R15M=D@call_helperD=A(ret_177)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push static 3@18D=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// call Output.printString 1// call Output.printString 1// push ret_178// set R13=ret_178@ret_178D=M@R13M=D@1D=A@R14M=D// set R15=Output.printString@Output.printStringD=M@R15M=D@call_helperD=A(ret_178)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Output.println 0(Output.println)// push static 1@18D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 352// Push 352@352D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push static 0@18D=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop static 1@18D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop static 0@18D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// pop static 2@18D=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push static 1@18D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 8128// Push 8128@8128D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_15D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_16)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// pop static 1@18D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Output.backSpace 0(Output.backSpace)// push static 2@18D=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push static 0@18D=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_16D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_17)// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push static 0@18D=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop static 0@18D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push static 1@18D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop static 1@18D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END1@IF_END10;JMP// label IF_FALSE1(IF_FALSE1)// push constant 31// Push 31@31D=A@SPA=MM=D@SPM=M+1// pop static 0@18D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push static 1@18D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_17D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_18)// if-goto IF_TRUE2@SPM=M-1A=MD=M@IF_TRUE2D;JNE// goto IF_FALSE2@IF_FALSE20;JMP// label IF_TRUE2(IF_TRUE2)// push constant 8128// Push 8128@8128D=A@SPA=MM=D@SPM=M+1// pop static 1@18D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE2(IF_FALSE2)// push static 1@18D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 321// Push 321@321D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop static 1@18D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END1(IF_END1)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop static 2@18D=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END0@IF_END00;JMP// label IF_FALSE0(IF_FALSE0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// pop static 2@18D=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END0(IF_END0)// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// call Output.drawChar 1// call Output.drawChar 1// push ret_179// set R13=ret_179@ret_179D=M@R13M=D@1D=A@R14M=D// set R15=Output.drawChar@Output.drawCharD=M@R15M=D@call_helperD=A(ret_179)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Screen.init 1(Screen.init)// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 16384// Push 16384@16384D=A@SPA=MM=D@SPM=M+1// pop static 1@25D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// pop static 2@25D=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 17// Push 17@17D=A@SPA=MM=D@SPM=M+1// call Array.new 1// call Array.new 1// push ret_180// set R13=ret_180@ret_180D=M@R13M=D@1D=A@R14M=D// set R15=Array.new@Array.newD=M@R15M=D@call_helperD=A(ret_180)// pop static 0@25D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push static 0@25D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_0D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_1)// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 0@25D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push static 0@25D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push static 0@25D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Screen.clearScreen 1(Screen.clearScreen)// Push 0@0D=A@SPA=MM=D@SPM=M+1// label WHILE_EXP0(WHILE_EXP0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 8192// Push 8192@8192D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_1D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_2)// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 1@25D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Screen.updateLocation 0(Screen.updateLocation)// push static 2@25D=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push static 1@25D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push static 1@25D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END0@IF_END00;JMP// label IF_FALSE0(IF_FALSE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push static 1@25D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push static 1@25D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END0(IF_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Screen.setColor 0(Screen.setColor)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop static 2@25D=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Screen.drawPixel 3(Screen.drawPixel)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_2D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_3)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 511// Push 511@511D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_3D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_4)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_4D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_5)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 255// Push 255@255D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_5D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_6)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 7// Push 7@7D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_181// set R13=ret_181@ret_181D=M@R13M=D@1D=A@R14M=D// set R15=Sys.error@Sys.errorD=M@R15M=D@call_helperD=A(ret_181)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Math.divide 2// call Math.divide 2// push ret_182// set R13=ret_182@ret_182D=M@R13M=D@2D=A@R14M=D// set R15=Math.divide@Math.divideD=M@R15M=D@call_helperD=A(ret_182)// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_183// set R13=ret_183@ret_183D=M@R13M=D@2D=A@R14M=D// set R15=Math.multiply@Math.multiplyD=M@R15M=D@call_helperD=A(ret_183)// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_184// set R13=ret_184@ret_184D=M@R13M=D@2D=A@R14M=D// set R15=Math.multiply@Math.multiplyD=M@R15M=D@call_helperD=A(ret_184)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push static 0@25D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// call Screen.updateLocation 2// call Screen.updateLocation 2// push ret_185// set R13=ret_185@ret_185D=M@R13M=D@2D=A@R14M=D// set R15=Screen.updateLocation@Screen.updateLocationD=M@R15M=D@call_helperD=A(ret_185)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Screen.drawConditional 0(Screen.drawConditional)// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call Screen.drawPixel 2// call Screen.drawPixel 2// push ret_186// set R13=ret_186@ret_186D=M@R13M=D@2D=A@R14M=D// set R15=Screen.drawPixel@Screen.drawPixelD=M@R15M=D@call_helperD=A(ret_186)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END0@IF_END00;JMP// label IF_FALSE0(IF_FALSE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// call Screen.drawPixel 2// call Screen.drawPixel 2// push ret_187// set R13=ret_187@ret_187D=M@R13M=D@2D=A@R14M=D// set R15=Screen.drawPixel@Screen.drawPixelD=M@R15M=D@call_helperD=A(ret_187)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END0(IF_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Screen.drawLine 11(Screen.drawLine)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_6D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_7)// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 511// Push 511@511D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_7D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_8)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_8D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_9)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 255// Push 255@255D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_9D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_10)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 8// Push 8@8D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_188// set R13=ret_188@ret_188D=M@R13M=D@1D=A@R14M=D// set R15=Sys.error@Sys.errorD=M@R15M=D@call_helperD=A(ret_188)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// call Math.abs 1// call Math.abs 1// push ret_189// set R13=ret_189@ret_189D=M@R13M=D@1D=A@R14M=D// set R15=Math.abs@Math.absD=M@R15M=D@call_helperD=A(ret_189)// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// call Math.abs 1// call Math.abs 1// push ret_190// set R13=ret_190@ret_190D=M@R13M=D@1D=A@R14M=D// set R15=Math.abs@Math.absD=M@R15M=D@call_helperD=A(ret_190)// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// lt@END_BOOL_10D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_11)// pop local 6@LCLA=MD=A@6D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 6@LCLA=MD=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// lt@END_BOOL_11D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_12)// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// push local 6@LCLA=MD=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// lt@END_BOOL_12D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_13)// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop local 4@LCLA=MD=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// pop argument 0@ARGA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// pop argument 2@ARGA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 4@LCLA=MD=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// pop argument 1@ARGA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// pop argument 3@ARGA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE1(IF_FALSE1)// push local 6@LCLA=MD=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// if-goto IF_TRUE2@SPM=M-1A=MD=M@IF_TRUE2D;JNE// goto IF_FALSE2@IF_FALSE20;JMP// label IF_TRUE2(IF_TRUE2)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 4@LCLA=MD=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 8@LCLA=MD=A@8D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// gt@END_BOOL_13D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_14)// pop local 7@LCLA=MD=A@7D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END2@IF_END20;JMP// label IF_FALSE2(IF_FALSE2)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 8@LCLA=MD=A@8D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// gt@END_BOOL_14D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_15)// pop local 7@LCLA=MD=A@7D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END2(IF_END2)// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_191// set R13=ret_191@ret_191D=M@R13M=D@2D=A@R14M=D// set R15=Math.multiply@Math.multiplyD=M@R15M=D@call_helperD=A(ret_191)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 5@LCLA=MD=A@5D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_192// set R13=ret_192@ret_192D=M@R13M=D@2D=A@R14M=D// set R15=Math.multiply@Math.multiplyD=M@R15M=D@call_helperD=A(ret_192)// pop local 9@LCLA=MD=A@9D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// call Math.multiply 2// call Math.multiply 2// push ret_193// set R13=ret_193@ret_193D=M@R13M=D@2D=A@R14M=D// set R15=Math.multiply@Math.multiplyD=M@R15M=D@call_helperD=A(ret_193)// pop local 10@LCLA=MD=A@10D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 6@LCLA=MD=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// call Screen.drawConditional 3// call Screen.drawConditional 3// push ret_194// set R13=ret_194@ret_194D=M@R13M=D@3D=A@R14M=D// set R15=Screen.drawConditional@Screen.drawConditionalD=M@R15M=D@call_helperD=A(ret_194)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 8@LCLA=MD=A@8A=D+AD=M@SPA=MM=D@SPM=M+1// lt@END_BOOL_15D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_16)// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push local 5@LCLA=MD=A@5A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_16D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_17)// if-goto IF_TRUE3@SPM=M-1A=MD=M@IF_TRUE3D;JNE// goto IF_FALSE3@IF_FALSE30;JMP// label IF_TRUE3(IF_TRUE3)// push local 5@LCLA=MD=A@5A=D+AD=M@SPA=MM=D@SPM=M+1// push local 9@LCLA=MD=A@9A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 5@LCLA=MD=A@5D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END3@IF_END30;JMP// label IF_FALSE3(IF_FALSE3)// push local 5@LCLA=MD=A@5A=D+AD=M@SPA=MM=D@SPM=M+1// push local 10@LCLA=MD=A@10A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 5@LCLA=MD=A@5D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 7@LCLA=MD=A@7A=D+AD=M@SPA=MM=D@SPM=M+1// if-goto IF_TRUE4@SPM=M-1A=MD=M@IF_TRUE4D;JNE// goto IF_FALSE4@IF_FALSE40;JMP// label IF_TRUE4(IF_TRUE4)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END4@IF_END40;JMP// label IF_FALSE4(IF_FALSE4)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END4(IF_END4)// label IF_END3(IF_END3)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 6@LCLA=MD=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// call Screen.drawConditional 3// call Screen.drawConditional 3// push ret_195// set R13=ret_195@ret_195D=M@R13M=D@3D=A@R14M=D// set R15=Screen.drawConditional@Screen.drawConditionalD=M@R15M=D@call_helperD=A(ret_195)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Screen.drawRectangle 9(Screen.drawRectangle)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// gt@END_BOOL_17D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_18)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// gt@END_BOOL_18D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_19)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_19D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_20)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 511// Push 511@511D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_20D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_21)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_21D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_22)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 255// Push 255@255D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_22D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_23)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 9// Push 9@9D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_196// set R13=ret_196@ret_196D=M@R13M=D@1D=A@R14M=D// set R15=Sys.error@Sys.errorD=M@R15M=D@call_helperD=A(ret_196)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Math.divide 2// call Math.divide 2// push ret_197// set R13=ret_197@ret_197D=M@R13M=D@2D=A@R14M=D// set R15=Math.divide@Math.divideD=M@R15M=D@call_helperD=A(ret_197)// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_198// set R13=ret_198@ret_198D=M@R13M=D@2D=A@R14M=D// set R15=Math.multiply@Math.multiplyD=M@R15M=D@call_helperD=A(ret_198)// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 7@LCLA=MD=A@7D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Math.divide 2// call Math.divide 2// push ret_199// set R13=ret_199@ret_199D=M@R13M=D@2D=A@R14M=D// set R15=Math.divide@Math.divideD=M@R15M=D@call_helperD=A(ret_199)// pop local 4@LCLA=MD=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_200// set R13=ret_200@ret_200D=M@R13M=D@2D=A@R14M=D// set R15=Math.multiply@Math.multiplyD=M@R15M=D@call_helperD=A(ret_200)// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 8@LCLA=MD=A@8D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 7@LCLA=MD=A@7A=D+AD=M@SPA=MM=D@SPM=M+1// push static 0@25D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// not@SPA=MA=A-1M=!M// pop local 6@LCLA=MD=A@6D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 8@LCLA=MD=A@8A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push static 0@25D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 5@LCLA=MD=A@5D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_201// set R13=ret_201@ret_201D=M@R13M=D@2D=A@R14M=D// set R15=Math.multiply@Math.multiplyD=M@R15M=D@call_helperD=A(ret_201)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// gt@END_BOOL_23D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_24)// not@SPA=MA=A-1M=!M// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_24D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_25)// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 5@LCLA=MD=A@5A=D+AD=M@SPA=MM=D@SPM=M+1// push local 6@LCLA=MD=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// call Screen.updateLocation 2// call Screen.updateLocation 2// push ret_202// set R13=ret_202@ret_202D=M@R13M=D@2D=A@R14M=D// set R15=Screen.updateLocation@Screen.updateLocationD=M@R15M=D@call_helperD=A(ret_202)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END1@IF_END10;JMP// label IF_FALSE1(IF_FALSE1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 6@LCLA=MD=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// call Screen.updateLocation 2// call Screen.updateLocation 2// push ret_203// set R13=ret_203@ret_203D=M@R13M=D@2D=A@R14M=D// set R15=Screen.updateLocation@Screen.updateLocationD=M@R15M=D@call_helperD=A(ret_203)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP1(WHILE_EXP1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// lt@END_BOOL_25D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_26)// not@SPA=MA=A-1M=!M// if-goto WHILE_END1@SPM=M-1A=MD=M@WHILE_END1D;JNE// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// call Screen.updateLocation 2// call Screen.updateLocation 2// push ret_204// set R13=ret_204@ret_204D=M@R13M=D@2D=A@R14M=D// set R15=Screen.updateLocation@Screen.updateLocationD=M@R15M=D@call_helperD=A(ret_204)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP1@WHILE_EXP10;JMP// label WHILE_END1(WHILE_END1)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 5@LCLA=MD=A@5A=D+AD=M@SPA=MM=D@SPM=M+1// call Screen.updateLocation 2// call Screen.updateLocation 2// push ret_205// set R13=ret_205@ret_205D=M@R13M=D@2D=A@R14M=D// set R15=Screen.updateLocation@Screen.updateLocationD=M@R15M=D@call_helperD=A(ret_205)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END1(IF_END1)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop argument 1@ARGA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Screen.drawHorizontal 11(Screen.drawHorizontal)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// call Math.min 2// call Math.min 2// push ret_206// set R13=ret_206@ret_206D=M@R13M=D@2D=A@R14M=D// set R15=Math.min@Math.minD=M@R15M=D@call_helperD=A(ret_206)// pop local 7@LCLA=MD=A@7D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// call Math.max 2// call Math.max 2// push ret_207// set R13=ret_207@ret_207D=M@R13M=D@2D=A@R14M=D// set R15=Math.max@Math.maxD=M@R15M=D@call_helperD=A(ret_207)// pop local 8@LCLA=MD=A@8D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// gt@END_BOOL_26D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_27)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 256// Push 256@256D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_27D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_28)// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// push local 7@LCLA=MD=A@7A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 512// Push 512@512D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_28D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_29)// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// push local 8@LCLA=MD=A@8A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// gt@END_BOOL_29D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_30)// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push local 7@LCLA=MD=A@7A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Math.max 2// call Math.max 2// push ret_208// set R13=ret_208@ret_208D=M@R13M=D@2D=A@R14M=D// set R15=Math.max@Math.maxD=M@R15M=D@call_helperD=A(ret_208)// pop local 7@LCLA=MD=A@7D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 8@LCLA=MD=A@8A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 511// Push 511@511D=A@SPA=MM=D@SPM=M+1// call Math.min 2// call Math.min 2// push ret_209// set R13=ret_209@ret_209D=M@R13M=D@2D=A@R14M=D// set R15=Math.min@Math.minD=M@R15M=D@call_helperD=A(ret_209)// pop local 8@LCLA=MD=A@8D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 7@LCLA=MD=A@7A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Math.divide 2// call Math.divide 2// push ret_210// set R13=ret_210@ret_210D=M@R13M=D@2D=A@R14M=D// set R15=Math.divide@Math.divideD=M@R15M=D@call_helperD=A(ret_210)// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 7@LCLA=MD=A@7A=D+AD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_211// set R13=ret_211@ret_211D=M@R13M=D@2D=A@R14M=D// set R15=Math.multiply@Math.multiplyD=M@R15M=D@call_helperD=A(ret_211)// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 9@LCLA=MD=A@9D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 8@LCLA=MD=A@8A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Math.divide 2// call Math.divide 2// push ret_212// set R13=ret_212@ret_212D=M@R13M=D@2D=A@R14M=D// set R15=Math.divide@Math.divideD=M@R15M=D@call_helperD=A(ret_212)// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 8@LCLA=MD=A@8A=D+AD=M@SPA=MM=D@SPM=M+1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_213// set R13=ret_213@ret_213D=M@R13M=D@2D=A@R14M=D// set R15=Math.multiply@Math.multiplyD=M@R15M=D@call_helperD=A(ret_213)// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 10@LCLA=MD=A@10D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 9@LCLA=MD=A@9A=D+AD=M@SPA=MM=D@SPM=M+1// push static 0@25D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// not@SPA=MA=A-1M=!M// pop local 5@LCLA=MD=A@5D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 10@LCLA=MD=A@10A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push static 0@25D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 4@LCLA=MD=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_214// set R13=ret_214@ret_214D=M@R13M=D@2D=A@R14M=D// set R15=Math.multiply@Math.multiplyD=M@R15M=D@call_helperD=A(ret_214)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 6@LCLA=MD=A@6D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 6@LCLA=MD=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 6@LCLA=MD=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_30D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_31)// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// push local 5@LCLA=MD=A@5A=D+AD=M@SPA=MM=D@SPM=M+1// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// call Screen.updateLocation 2// call Screen.updateLocation 2// push ret_215// set R13=ret_215@ret_215D=M@R13M=D@2D=A@R14M=D// set R15=Screen.updateLocation@Screen.updateLocationD=M@R15M=D@call_helperD=A(ret_215)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END1@IF_END10;JMP// label IF_FALSE1(IF_FALSE1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 5@LCLA=MD=A@5A=D+AD=M@SPA=MM=D@SPM=M+1// call Screen.updateLocation 2// call Screen.updateLocation 2// push ret_216// set R13=ret_216@ret_216D=M@R13M=D@2D=A@R14M=D// set R15=Screen.updateLocation@Screen.updateLocationD=M@R15M=D@call_helperD=A(ret_216)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// lt@END_BOOL_31D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_32)// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// call Screen.updateLocation 2// call Screen.updateLocation 2// push ret_217// set R13=ret_217@ret_217D=M@R13M=D@2D=A@R14M=D// set R15=Screen.updateLocation@Screen.updateLocationD=M@R15M=D@call_helperD=A(ret_217)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// call Screen.updateLocation 2// call Screen.updateLocation 2// push ret_218// set R13=ret_218@ret_218D=M@R13M=D@2D=A@R14M=D// set R15=Screen.updateLocation@Screen.updateLocationD=M@R15M=D@call_helperD=A(ret_218)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END1(IF_END1)// label IF_FALSE0(IF_FALSE0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Screen.drawSymetric 0(Screen.drawSymetric)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// call Screen.drawHorizontal 3// call Screen.drawHorizontal 3// push ret_219// set R13=ret_219@ret_219D=M@R13M=D@3D=A@R14M=D// set R15=Screen.drawHorizontal@Screen.drawHorizontalD=M@R15M=D@call_helperD=A(ret_219)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// call Screen.drawHorizontal 3// call Screen.drawHorizontal 3// push ret_220// set R13=ret_220@ret_220D=M@R13M=D@3D=A@R14M=D// set R15=Screen.drawHorizontal@Screen.drawHorizontalD=M@R15M=D@call_helperD=A(ret_220)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// call Screen.drawHorizontal 3// call Screen.drawHorizontal 3// push ret_221// set R13=ret_221@ret_221D=M@R13M=D@3D=A@R14M=D// set R15=Screen.drawHorizontal@Screen.drawHorizontalD=M@R15M=D@call_helperD=A(ret_221)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// call Screen.drawHorizontal 3// call Screen.drawHorizontal 3// push ret_222// set R13=ret_222@ret_222D=M@R13M=D@3D=A@R14M=D// set R15=Screen.drawHorizontal@Screen.drawHorizontalD=M@R15M=D@call_helperD=A(ret_222)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Screen.drawCircle 3(Screen.drawCircle)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_32D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_33)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 511// Push 511@511D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_33D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_34)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_34D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_35)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 255// Push 255@255D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_35D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_36)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_223// set R13=ret_223@ret_223D=M@R13M=D@1D=A@R14M=D// set R15=Sys.error@Sys.errorD=M@R15M=D@call_helperD=A(ret_223)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_36D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_37)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 511// Push 511@511D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_37D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_38)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_38D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_39)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 255// Push 255@255D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_39D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_40)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push constant 13// Push 13@13D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_224// set R13=ret_224@ret_224D=M@R13M=D@1D=A@R14M=D// set R15=Sys.error@Sys.errorD=M@R15M=D@call_helperD=A(ret_224)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE1(IF_FALSE1)// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// call Screen.drawSymetric 4// call Screen.drawSymetric 4// push ret_225// set R13=ret_225@ret_225D=M@R13M=D@4D=A@R14M=D// set R15=Screen.drawSymetric@Screen.drawSymetricD=M@R15M=D@call_helperD=A(ret_225)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// gt@END_BOOL_40D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_41)// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_41D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_42)// if-goto IF_TRUE2@SPM=M-1A=MD=M@IF_TRUE2D;JNE// goto IF_FALSE2@IF_FALSE20;JMP// label IF_TRUE2(IF_TRUE2)// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_226// set R13=ret_226@ret_226D=M@R13M=D@2D=A@R14M=D// set R15=Math.multiply@Math.multiplyD=M@R15M=D@call_helperD=A(ret_226)// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END2@IF_END20;JMP// label IF_FALSE2(IF_FALSE2)// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// call Math.multiply 2// call Math.multiply 2// push ret_227// set R13=ret_227@ret_227D=M@R13M=D@2D=A@R14M=D// set R15=Math.multiply@Math.multiplyD=M@R15M=D@call_helperD=A(ret_227)// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 5// Push 5@5D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END2(IF_END2)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// call Screen.drawSymetric 4// call Screen.drawSymetric 4// push ret_228// set R13=ret_228@ret_228D=M@R13M=D@4D=A@R14M=D// set R15=Screen.drawSymetric@Screen.drawSymetricD=M@R15M=D@call_helperD=A(ret_228)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Memory.init 0(Memory.init)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop static 0@28D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 2048// Push 2048@2048D=A@SPA=MM=D@SPM=M+1// push static 0@28D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 14334// Push 14334@14334D=A@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 2049// Push 2049@2049D=A@SPA=MM=D@SPM=M+1// push static 0@28D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 2050// Push 2050@2050D=A@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Memory.peek 0(Memory.peek)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push static 0@28D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Memory.poke 0(Memory.poke)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push static 0@28D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Memory.alloc 2(Memory.alloc)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_0D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_1)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 5// Push 5@5D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_229// set R13=ret_229@ret_229D=M@R13M=D@1D=A@R14M=D// set R15=Sys.error@Sys.errorD=M@R15M=D@call_helperD=A(ret_229)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_1D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_2)// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// pop argument 0@ARGA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE1(IF_FALSE1)// push constant 2048// Push 2048@2048D=A@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 16383// Push 16383@16383D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_2D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_3)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// lt@END_BOOL_3D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_4)// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_4D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_5)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 16382// Push 16382@16382D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_5D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_6)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_6D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_7)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// if-goto IF_TRUE2@SPM=M-1A=MD=M@IF_TRUE2D;JNE// goto IF_FALSE2@IF_FALSE20;JMP// label IF_TRUE2(IF_TRUE2)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END2@IF_END20;JMP// label IF_FALSE2(IF_FALSE2)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// eq@END_BOOL_7D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_8)// if-goto IF_TRUE3@SPM=M-1A=MD=M@IF_TRUE3D;JNE// goto IF_FALSE3@IF_FALSE30;JMP// label IF_TRUE3(IF_TRUE3)// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END3@IF_END30;JMP// label IF_FALSE3(IF_FALSE3)// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END3(IF_END3)// label IF_END2(IF_END2)// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 16379// Push 16379@16379D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_8D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_9)// if-goto IF_TRUE4@SPM=M-1A=MD=M@IF_TRUE4D;JNE// goto IF_FALSE4@IF_FALSE40;JMP// label IF_TRUE4(IF_TRUE4)// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_230// set R13=ret_230@ret_230D=M@R13M=D@1D=A@R14M=D// set R15=Sys.error@Sys.errorD=M@R15M=D@call_helperD=A(ret_230)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE4(IF_FALSE4)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// gt@END_BOOL_9D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_10)// if-goto IF_TRUE5@SPM=M-1A=MD=M@IF_TRUE5D;JNE// goto IF_FALSE5@IF_FALSE50;JMP// label IF_TRUE5(IF_TRUE5)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// eq@END_BOOL_10D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_11)// if-goto IF_TRUE6@SPM=M-1A=MD=M@IF_TRUE6D;JNE// goto IF_FALSE6@IF_FALSE60;JMP// label IF_TRUE6(IF_TRUE6)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 4// Push 4@4D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END6@IF_END60;JMP// label IF_FALSE6(IF_FALSE6)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END6(IF_END6)// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE5(IF_FALSE5)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// return@restore_stack_and_return0;JMP// function Memory.deAlloc 2(Memory.deAlloc)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_11D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_12)// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END0@IF_END00;JMP// label IF_FALSE0(IF_FALSE0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// eq@END_BOOL_12D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_13)// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END1@IF_END10;JMP// label IF_FALSE1(IF_FALSE1)// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END1(IF_END1)// label IF_END0(IF_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Ball.new 0(Ball.new)// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// call Memory.alloc 1// call Memory.alloc 1// push ret_231// set R13=ret_231@ret_231D=M@R13M=D@1D=A@R14M=D// set R15=Memory.alloc@Memory.allocD=M@R15M=D@call_helperD=A(ret_231)// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop this 0@THISA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop this 1@THISA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// pop this 10@THISA=MD=A@10D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop this 11@THISA=MD=A@11D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 4@ARGA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// pop this 12@THISA=MD=A@12D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 5@ARGA=MD=A@5A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop this 13@THISA=MD=A@13D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop this 14@THISA=MD=A@14D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// call Ball.show 1// call Ball.show 1// push ret_232// set R13=ret_232@ret_232D=M@R13M=D@1D=A@R14M=D// set R15=Ball.show@Ball.showD=M@R15M=D@call_helperD=A(ret_232)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Ball.dispose 0(Ball.dispose)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// call Memory.deAlloc 1// call Memory.deAlloc 1// push ret_233// set R13=ret_233@ret_233D=M@R13M=D@1D=A@R14M=D// set R15=Memory.deAlloc@Memory.deAllocD=M@R15M=D@call_helperD=A(ret_233)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// function Ball.show 0(Ball.show)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// call Screen.setColor 1// call Screen.setColor 1// push ret_234// set R13=ret_234@ret_234D=M@R13M=D@1D=A@R14M=D// set R15=Screen.setColor@Screen.setColorD=M@R15M=D@call_helperD=A(ret_234)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// call Ball.draw 1// call Ball.draw 1// push ret_235// set R13=ret_235@ret_235D=M@R13M=D@1D=A@R14M=D// set R15=Ball.draw@Ball.drawD=M@R15M=D@call_helperD=A(ret_235)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// function Ball.hide 0(Ball.hide)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Screen.setColor 1// call Screen.setColor 1// push ret_236// set R13=ret_236@ret_236D=M@R13M=D@1D=A@R14M=D// set R15=Screen.setColor@Screen.setColorD=M@R15M=D@call_helperD=A(ret_236)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// call Ball.draw 1// call Ball.draw 1// push ret_237// set R13=ret_237@ret_237D=M@R13M=D@1D=A@R14M=D// set R15=Ball.draw@Ball.drawD=M@R15M=D@call_helperD=A(ret_237)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// function Ball.draw 0(Ball.draw)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push constant 5// Push 5@5D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 5// Push 5@5D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// call Screen.drawRectangle 4// call Screen.drawRectangle 4// push ret_238// set R13=ret_238@ret_238D=M@R13M=D@4D=A@R14M=D// set R15=Screen.drawRectangle@Screen.drawRectangleD=M@R15M=D@call_helperD=A(ret_238)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// function Ball.getLeft 0(Ball.getLeft)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Ball.getRight 0(Ball.getRight)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push constant 5// Push 5@5D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// return@restore_stack_and_return0;JMP// function Ball.setDestination 3(Ball.setDestination)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop this 2@THISA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop this 3@THISA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// call Math.abs 1// call Math.abs 1// push ret_239// set R13=ret_239@ret_239D=M@R13M=D@1D=A@R14M=D// set R15=Math.abs@Math.absD=M@R15M=D@call_helperD=A(ret_239)// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 3@THISA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// call Math.abs 1// call Math.abs 1// push ret_240// set R13=ret_240@ret_240D=M@R13M=D@1D=A@R14M=D// set R15=Math.abs@Math.absD=M@R15M=D@call_helperD=A(ret_240)// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// lt@END_BOOL_0D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_1)// pop this 7@THISA=MD=A@7D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 7@THISA=MD=A@7A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_0@SPM=M-1A=MD=M@IF_FALSE_0D;JNE// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// lt@END_BOOL_1D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_2)// pop this 8@THISA=MD=A@8D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// lt@END_BOOL_2D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_3)// pop this 9@THISA=MD=A@9D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_0@IF_END_00;JMP// label IF_FALSE_0(IF_FALSE_0)// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// lt@END_BOOL_3D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_4)// pop this 8@THISA=MD=A@8D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// lt@END_BOOL_4D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_5)// pop this 9@THISA=MD=A@9D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END_0(IF_END_0)// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_241// set R13=ret_241@ret_241D=M@R13M=D@2D=A@R14M=D// set R15=Math.multiply@Math.multiplyD=M@R15M=D@call_helperD=A(ret_241)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop this 4@THISA=MD=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_242// set R13=ret_242@ret_242D=M@R13M=D@2D=A@R14M=D// set R15=Math.multiply@Math.multiplyD=M@R15M=D@call_helperD=A(ret_242)// pop this 5@THISA=MD=A@5D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// call Math.multiply 2// call Math.multiply 2// push ret_243// set R13=ret_243@ret_243D=M@R13M=D@2D=A@R14M=D// set R15=Math.multiply@Math.multiplyD=M@R15M=D@call_helperD=A(ret_243)// pop this 6@THISA=MD=A@6D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// function Ball.move 0(Ball.move)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// call Ball.hide 1// call Ball.hide 1// push ret_244// set R13=ret_244@ret_244D=M@R13M=D@1D=A@R14M=D// set R15=Ball.hide@Ball.hideD=M@R15M=D@call_helperD=A(ret_244)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 4@THISA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_5D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_6)// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_1@SPM=M-1A=MD=M@IF_FALSE_1D;JNE// push this 4@THISA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// push this 5@THISA=MD=A@5A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop this 4@THISA=MD=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_1@IF_END_10;JMP// label IF_FALSE_1(IF_FALSE_1)// push this 4@THISA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// push this 6@THISA=MD=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop this 4@THISA=MD=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 9@THISA=MD=A@9A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_2@SPM=M-1A=MD=M@IF_FALSE_2D;JNE// push this 7@THISA=MD=A@7A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_3@SPM=M-1A=MD=M@IF_FALSE_3D;JNE// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push constant 4// Push 4@4D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop this 0@THISA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_3@IF_END_30;JMP// label IF_FALSE_3(IF_FALSE_3)// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 4// Push 4@4D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop this 1@THISA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END_3(IF_END_3)// goto IF_END_2@IF_END_20;JMP// label IF_FALSE_2(IF_FALSE_2)// push this 7@THISA=MD=A@7A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_4@SPM=M-1A=MD=M@IF_FALSE_4D;JNE// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push constant 4// Push 4@4D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop this 0@THISA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_4@IF_END_40;JMP// label IF_FALSE_4(IF_FALSE_4)// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 4// Push 4@4D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop this 1@THISA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END_4(IF_END_4)// label IF_END_2(IF_END_2)// label IF_END_1(IF_END_1)// push this 8@THISA=MD=A@8A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_5@SPM=M-1A=MD=M@IF_FALSE_5D;JNE// push this 7@THISA=MD=A@7A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_6@SPM=M-1A=MD=M@IF_FALSE_6D;JNE// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 4// Push 4@4D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop this 1@THISA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_6@IF_END_60;JMP// label IF_FALSE_6(IF_FALSE_6)// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push constant 4// Push 4@4D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop this 0@THISA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END_6(IF_END_6)// goto IF_END_5@IF_END_50;JMP// label IF_FALSE_5(IF_FALSE_5)// push this 7@THISA=MD=A@7A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_7@SPM=M-1A=MD=M@IF_FALSE_7D;JNE// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 4// Push 4@4D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop this 1@THISA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_7@IF_END_70;JMP// label IF_FALSE_7(IF_FALSE_7)// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push constant 4// Push 4@4D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop this 0@THISA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END_7(IF_END_7)// label IF_END_5(IF_END_5)// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push this 10@THISA=MD=A@10A=D+AD=M@SPA=MM=D@SPM=M+1// gt@END_BOOL_6D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_7)// not@SPA=MA=A-1M=!M// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_8@SPM=M-1A=MD=M@IF_FALSE_8D;JNE// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// pop this 14@THISA=MD=A@14D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 10@THISA=MD=A@10A=D+AD=M@SPA=MM=D@SPM=M+1// pop this 0@THISA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_8@IF_END_80;JMP// label IF_FALSE_8(IF_FALSE_8)// label IF_END_8(IF_END_8)// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push this 11@THISA=MD=A@11A=D+AD=M@SPA=MM=D@SPM=M+1// lt@END_BOOL_7D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_8)// not@SPA=MA=A-1M=!M// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_9@SPM=M-1A=MD=M@IF_FALSE_9D;JNE// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// pop this 14@THISA=MD=A@14D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 11@THISA=MD=A@11A=D+AD=M@SPA=MM=D@SPM=M+1// pop this 0@THISA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_9@IF_END_90;JMP// label IF_FALSE_9(IF_FALSE_9)// label IF_END_9(IF_END_9)// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 12@THISA=MD=A@12A=D+AD=M@SPA=MM=D@SPM=M+1// gt@END_BOOL_8D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_9)// not@SPA=MA=A-1M=!M// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_10@SPM=M-1A=MD=M@IF_FALSE_10D;JNE// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// pop this 14@THISA=MD=A@14D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 12@THISA=MD=A@12A=D+AD=M@SPA=MM=D@SPM=M+1// pop this 1@THISA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_10@IF_END_100;JMP// label IF_FALSE_10(IF_FALSE_10)// label IF_END_10(IF_END_10)// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 13@THISA=MD=A@13A=D+AD=M@SPA=MM=D@SPM=M+1// lt@END_BOOL_9D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_10)// not@SPA=MA=A-1M=!M// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_11@SPM=M-1A=MD=M@IF_FALSE_11D;JNE// push constant 4// Push 4@4D=A@SPA=MM=D@SPM=M+1// pop this 14@THISA=MD=A@14D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 13@THISA=MD=A@13A=D+AD=M@SPA=MM=D@SPM=M+1// pop this 1@THISA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_11@IF_END_110;JMP// label IF_FALSE_11(IF_FALSE_11)// label IF_END_11(IF_END_11)// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// call Ball.show 1// call Ball.show 1// push ret_245// set R13=ret_245@ret_245D=M@R13M=D@1D=A@R14M=D// set R15=Ball.show@Ball.showD=M@R15M=D@call_helperD=A(ret_245)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 14@THISA=MD=A@14A=D+AD=M@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Ball.bounce 5(Ball.bounce)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 10// Push 10@10D=A@SPA=MM=D@SPM=M+1// call Math.divide 2// call Math.divide 2// push ret_246// set R13=ret_246@ret_246D=M@R13M=D@2D=A@R14M=D// set R15=Math.divide@Math.divideD=M@R15M=D@call_helperD=A(ret_246)// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 3@THISA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 10// Push 10@10D=A@SPA=MM=D@SPM=M+1// call Math.divide 2// call Math.divide 2// push ret_247// set R13=ret_247@ret_247D=M@R13M=D@2D=A@R14M=D// set R15=Math.divide@Math.divideD=M@R15M=D@call_helperD=A(ret_247)// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_10D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_11)// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_12@SPM=M-1A=MD=M@IF_FALSE_12D;JNE// push constant 10// Push 10@10D=A@SPA=MM=D@SPM=M+1// pop local 4@LCLA=MD=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_12@IF_END_120;JMP// label IF_FALSE_12(IF_FALSE_12)// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_11D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_12)// not@SPA=MA=A-1M=!M// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_12D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_13)// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_13D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_14)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// eq@END_BOOL_14D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_15)// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_13@SPM=M-1A=MD=M@IF_FALSE_13D;JNE// push constant 20// Push 20@20D=A@SPA=MM=D@SPM=M+1// pop local 4@LCLA=MD=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_13@IF_END_130;JMP// label IF_FALSE_13(IF_FALSE_13)// push constant 5// Push 5@5D=A@SPA=MM=D@SPM=M+1// pop local 4@LCLA=MD=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END_13(IF_END_13)// label IF_END_12(IF_END_12)// push this 14@THISA=MD=A@14A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_15D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_16)// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_14@SPM=M-1A=MD=M@IF_FALSE_14D;JNE// push constant 506// Push 506@506D=A@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 50// Push 50@50D=A@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// call Math.multiply 2// call Math.multiply 2// push ret_248// set R13=ret_248@ret_248D=M@R13M=D@2D=A@R14M=D// set R15=Math.multiply@Math.multiplyD=M@R15M=D@call_helperD=A(ret_248)// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// call Math.divide 2// call Math.divide 2// push ret_249// set R13=ret_249@ret_249D=M@R13M=D@2D=A@R14M=D// set R15=Math.divide@Math.divideD=M@R15M=D@call_helperD=A(ret_249)// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_250// set R13=ret_250@ret_250D=M@R13M=D@2D=A@R14M=D// set R15=Math.multiply@Math.multiplyD=M@R15M=D@call_helperD=A(ret_250)// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_14@IF_END_140;JMP// label IF_FALSE_14(IF_FALSE_14)// push this 14@THISA=MD=A@14A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_16D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_17)// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_15@SPM=M-1A=MD=M@IF_FALSE_15D;JNE// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 50// Push 50@50D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_251// set R13=ret_251@ret_251D=M@R13M=D@2D=A@R14M=D// set R15=Math.multiply@Math.multiplyD=M@R15M=D@call_helperD=A(ret_251)// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// call Math.divide 2// call Math.divide 2// push ret_252// set R13=ret_252@ret_252D=M@R13M=D@2D=A@R14M=D// set R15=Math.divide@Math.divideD=M@R15M=D@call_helperD=A(ret_252)// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_253// set R13=ret_253@ret_253D=M@R13M=D@2D=A@R14M=D// set R15=Math.multiply@Math.multiplyD=M@R15M=D@call_helperD=A(ret_253)// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_15@IF_END_150;JMP// label IF_FALSE_15(IF_FALSE_15)// push this 14@THISA=MD=A@14A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_17D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_18)// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_16@SPM=M-1A=MD=M@IF_FALSE_16D;JNE// push constant 250// Push 250@250D=A@SPA=MM=D@SPM=M+1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 25// Push 25@25D=A@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// call Math.multiply 2// call Math.multiply 2// push ret_254// set R13=ret_254@ret_254D=M@R13M=D@2D=A@R14M=D// set R15=Math.multiply@Math.multiplyD=M@R15M=D@call_helperD=A(ret_254)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// call Math.divide 2// call Math.divide 2// push ret_255// set R13=ret_255@ret_255D=M@R13M=D@2D=A@R14M=D// set R15=Math.divide@Math.divideD=M@R15M=D@call_helperD=A(ret_255)// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_256// set R13=ret_256@ret_256D=M@R13M=D@2D=A@R14M=D// set R15=Math.multiply@Math.multiplyD=M@R15M=D@call_helperD=A(ret_256)// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_16@IF_END_160;JMP// label IF_FALSE_16(IF_FALSE_16)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 25// Push 25@25D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_257// set R13=ret_257@ret_257D=M@R13M=D@2D=A@R14M=D// set R15=Math.multiply@Math.multiplyD=M@R15M=D@call_helperD=A(ret_257)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// call Math.divide 2// call Math.divide 2// push ret_258// set R13=ret_258@ret_258D=M@R13M=D@2D=A@R14M=D// set R15=Math.divide@Math.divideD=M@R15M=D@call_helperD=A(ret_258)// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_259// set R13=ret_259@ret_259D=M@R13M=D@2D=A@R14M=D// set R15=Math.multiply@Math.multiplyD=M@R15M=D@call_helperD=A(ret_259)// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END_16(IF_END_16)// label IF_END_15(IF_END_15)// label IF_END_14(IF_END_14)// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// call Ball.setDestination 3// call Ball.setDestination 3// push ret_260// set R13=ret_260@ret_260D=M@R13M=D@3D=A@R14M=D// set R15=Ball.setDestination@Ball.setDestinationD=M@R15M=D@call_helperD=A(ret_260)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// function PongGame.new 0(PongGame.new)// push constant 7// Push 7@7D=A@SPA=MM=D@SPM=M+1// call Memory.alloc 1// call Memory.alloc 1// push ret_261// set R13=ret_261@ret_261D=M@R13M=D@1D=A@R14M=D// set R15=Memory.alloc@Memory.allocD=M@R15M=D@call_helperD=A(ret_261)// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call Screen.clearScreen 0// call Screen.clearScreen 0// push ret_262// set R13=ret_262@ret_262D=M@R13M=D@0D=A@R14M=D// set R15=Screen.clearScreen@Screen.clearScreenD=M@R15M=D@call_helperD=A(ret_262)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 50// Push 50@50D=A@SPA=MM=D@SPM=M+1// pop this 6@THISA=MD=A@6D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 230// Push 230@230D=A@SPA=MM=D@SPM=M+1// push constant 229// Push 229@229D=A@SPA=MM=D@SPM=M+1// push this 6@THISA=MD=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 7// Push 7@7D=A@SPA=MM=D@SPM=M+1// call Bat.new 4// call Bat.new 4// push ret_263// set R13=ret_263@ret_263D=M@R13M=D@4D=A@R14M=D// set R15=Bat.new@Bat.newD=M@R15M=D@call_helperD=A(ret_263)// pop this 0@THISA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 253// Push 253@253D=A@SPA=MM=D@SPM=M+1// push constant 222// Push 222@222D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 511// Push 511@511D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 229// Push 229@229D=A@SPA=MM=D@SPM=M+1// call Ball.new 6// call Ball.new 6// push ret_264// set R13=ret_264@ret_264D=M@R13M=D@6D=A@R14M=D// set R15=Ball.new@Ball.newD=M@R15M=D@call_helperD=A(ret_264)// pop this 1@THISA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 400// Push 400@400D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Ball.setDestination 3// call Ball.setDestination 3// push ret_265// set R13=ret_265@ret_265D=M@R13M=D@3D=A@R14M=D// set R15=Ball.setDestination@Ball.setDestinationD=M@R15M=D@call_helperD=A(ret_265)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 238// Push 238@238D=A@SPA=MM=D@SPM=M+1// push constant 511// Push 511@511D=A@SPA=MM=D@SPM=M+1// push constant 240// Push 240@240D=A@SPA=MM=D@SPM=M+1// call Screen.drawRectangle 4// call Screen.drawRectangle 4// push ret_266// set R13=ret_266@ret_266D=M@R13M=D@4D=A@R14M=D// set R15=Screen.drawRectangle@Screen.drawRectangleD=M@R15M=D@call_helperD=A(ret_266)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 22// Push 22@22D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.moveCursor 2// call Output.moveCursor 2// push ret_267// set R13=ret_267@ret_267D=M@R13M=D@2D=A@R14M=D// set R15=Output.moveCursor@Output.moveCursorD=M@R15M=D@call_helperD=A(ret_267)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 8// Push 8@8D=A@SPA=MM=D@SPM=M+1// call String.new 1// call String.new 1// push ret_268// set R13=ret_268@ret_268D=M@R13M=D@1D=A@R14M=D// set R15=String.new@String.newD=M@R15M=D@call_helperD=A(ret_268)// push constant 83// Push 83@83D=A@SPA=MM=D@SPM=M+1// call String.appendChar 2// call String.appendChar 2// push ret_269// set R13=ret_269@ret_269D=M@R13M=D@2D=A@R14M=D// set R15=String.appendChar@String.appendCharD=M@R15M=D@call_helperD=A(ret_269)// push constant 99// Push 99@99D=A@SPA=MM=D@SPM=M+1// call String.appendChar 2// call String.appendChar 2// push ret_270// set R13=ret_270@ret_270D=M@R13M=D@2D=A@R14M=D// set R15=String.appendChar@String.appendCharD=M@R15M=D@call_helperD=A(ret_270)// push constant 111// Push 111@111D=A@SPA=MM=D@SPM=M+1// call String.appendChar 2// call String.appendChar 2// push ret_271// set R13=ret_271@ret_271D=M@R13M=D@2D=A@R14M=D// set R15=String.appendChar@String.appendCharD=M@R15M=D@call_helperD=A(ret_271)// push constant 114// Push 114@114D=A@SPA=MM=D@SPM=M+1// call String.appendChar 2// call String.appendChar 2// push ret_272// set R13=ret_272@ret_272D=M@R13M=D@2D=A@R14M=D// set R15=String.appendChar@String.appendCharD=M@R15M=D@call_helperD=A(ret_272)// push constant 101// Push 101@101D=A@SPA=MM=D@SPM=M+1// call String.appendChar 2// call String.appendChar 2// push ret_273// set R13=ret_273@ret_273D=M@R13M=D@2D=A@R14M=D// set R15=String.appendChar@String.appendCharD=M@R15M=D@call_helperD=A(ret_273)// push constant 58// Push 58@58D=A@SPA=MM=D@SPM=M+1// call String.appendChar 2// call String.appendChar 2// push ret_274// set R13=ret_274@ret_274D=M@R13M=D@2D=A@R14M=D// set R15=String.appendChar@String.appendCharD=M@R15M=D@call_helperD=A(ret_274)// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// call String.appendChar 2// call String.appendChar 2// push ret_275// set R13=ret_275@ret_275D=M@R13M=D@2D=A@R14M=D// set R15=String.appendChar@String.appendCharD=M@R15M=D@call_helperD=A(ret_275)// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// call String.appendChar 2// call String.appendChar 2// push ret_276// set R13=ret_276@ret_276D=M@R13M=D@2D=A@R14M=D// set R15=String.appendChar@String.appendCharD=M@R15M=D@call_helperD=A(ret_276)// call Output.printString 1// call Output.printString 1// push ret_277// set R13=ret_277@ret_277D=M@R13M=D@1D=A@R14M=D// set R15=Output.printString@Output.printStringD=M@R15M=D@call_helperD=A(ret_277)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop this 3@THISA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop this 4@THISA=MD=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop this 2@THISA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop this 5@THISA=MD=A@5D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function PongGame.dispose 0(PongGame.dispose)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// call Bat.dispose 1// call Bat.dispose 1// push ret_278// set R13=ret_278@ret_278D=M@R13M=D@1D=A@R14M=D// set R15=Bat.dispose@Bat.disposeD=M@R15M=D@call_helperD=A(ret_278)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// call Ball.dispose 1// call Ball.dispose 1// push ret_279// set R13=ret_279@ret_279D=M@R13M=D@1D=A@R14M=D// set R15=Ball.dispose@Ball.disposeD=M@R15M=D@call_helperD=A(ret_279)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// call Memory.deAlloc 1// call Memory.deAlloc 1// push ret_280// set R13=ret_280@ret_280D=M@R13M=D@1D=A@R14M=D// set R15=Memory.deAlloc@Memory.deAllocD=M@R15M=D@call_helperD=A(ret_280)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// function PongGame.newInstance 0(PongGame.newInstance)// call PongGame.new 0// call PongGame.new 0// push ret_281// set R13=ret_281@ret_281D=M@R13M=D@0D=A@R14M=D// set R15=PongGame.new@PongGame.newD=M@R15M=D@call_helperD=A(ret_281)// pop static 0@29D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// function PongGame.getInstance 0(PongGame.getInstance)// push static 0@29D=M@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function PongGame.run 1(PongGame.run)// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label while_loop_0(while_loop_0)// push this 3@THISA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// not@SPA=MA=A-1M=!M// if-goto end_while_0@SPM=M-1A=MD=M@end_while_0D;JNE// label while_loop_1(while_loop_1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_0D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_1)// push this 3@THISA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto end_while_1@SPM=M-1A=MD=M@end_while_1D;JNE// call Keyboard.keyPressed 0// call Keyboard.keyPressed 0// push ret_282// set R13=ret_282@ret_282D=M@R13M=D@0D=A@R14M=D// set R15=Keyboard.keyPressed@Keyboard.keyPressedD=M@R15M=D@call_helperD=A(ret_282)// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// call Bat.move 1// call Bat.move 1// push ret_283// set R13=ret_283@ret_283D=M@R13M=D@1D=A@R14M=D// set R15=Bat.move@Bat.moveD=M@R15M=D@call_helperD=A(ret_283)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// call PongGame.moveBall 1// call PongGame.moveBall 1// push ret_284// set R13=ret_284@ret_284D=M@R13M=D@1D=A@R14M=D// set R15=PongGame.moveBall@PongGame.moveBallD=M@R15M=D@call_helperD=A(ret_284)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 50// Push 50@50D=A@SPA=MM=D@SPM=M+1// call Sys.wait 1// call Sys.wait 1// push ret_285// set R13=ret_285@ret_285D=M@R13M=D@1D=A@R14M=D// set R15=Sys.wait@Sys.waitD=M@R15M=D@call_helperD=A(ret_285)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto while_loop_1@while_loop_10;JMP// label end_while_1(end_while_1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 130// Push 130@130D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_1D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_2)// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_0@SPM=M-1A=MD=M@IF_FALSE_0D;JNE// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// call Bat.setDirection 2// call Bat.setDirection 2// push ret_286// set R13=ret_286@ret_286D=M@R13M=D@2D=A@R14M=D// set R15=Bat.setDirection@Bat.setDirectionD=M@R15M=D@call_helperD=A(ret_286)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_0@IF_END_00;JMP// label IF_FALSE_0(IF_FALSE_0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 132// Push 132@132D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_2D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_3)// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_1@SPM=M-1A=MD=M@IF_FALSE_1D;JNE// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// call Bat.setDirection 2// call Bat.setDirection 2// push ret_287// set R13=ret_287@ret_287D=M@R13M=D@2D=A@R14M=D// set R15=Bat.setDirection@Bat.setDirectionD=M@R15M=D@call_helperD=A(ret_287)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_1@IF_END_10;JMP// label IF_FALSE_1(IF_FALSE_1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 140// Push 140@140D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_3D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_4)// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_2@SPM=M-1A=MD=M@IF_FALSE_2D;JNE// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// pop this 3@THISA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_2@IF_END_20;JMP// label IF_FALSE_2(IF_FALSE_2)// label IF_END_2(IF_END_2)// label IF_END_1(IF_END_1)// label IF_END_0(IF_END_0)// label while_loop_2(while_loop_2)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_4D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_5)// not@SPA=MA=A-1M=!M// push this 3@THISA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto end_while_2@SPM=M-1A=MD=M@end_while_2D;JNE// call Keyboard.keyPressed 0// call Keyboard.keyPressed 0// push ret_288// set R13=ret_288@ret_288D=M@R13M=D@0D=A@R14M=D// set R15=Keyboard.keyPressed@Keyboard.keyPressedD=M@R15M=D@call_helperD=A(ret_288)// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// call Bat.move 1// call Bat.move 1// push ret_289// set R13=ret_289@ret_289D=M@R13M=D@1D=A@R14M=D// set R15=Bat.move@Bat.moveD=M@R15M=D@call_helperD=A(ret_289)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// call PongGame.moveBall 1// call PongGame.moveBall 1// push ret_290// set R13=ret_290@ret_290D=M@R13M=D@1D=A@R14M=D// set R15=PongGame.moveBall@PongGame.moveBallD=M@R15M=D@call_helperD=A(ret_290)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 50// Push 50@50D=A@SPA=MM=D@SPM=M+1// call Sys.wait 1// call Sys.wait 1// push ret_291// set R13=ret_291@ret_291D=M@R13M=D@1D=A@R14M=D// set R15=Sys.wait@Sys.waitD=M@R15M=D@call_helperD=A(ret_291)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto while_loop_2@while_loop_20;JMP// label end_while_2(end_while_2)// goto while_loop_0@while_loop_00;JMP// label end_while_0(end_while_0)// push this 3@THISA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_3@SPM=M-1A=MD=M@IF_FALSE_3D;JNE// push constant 10// Push 10@10D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// call Output.moveCursor 2// call Output.moveCursor 2// push ret_292// set R13=ret_292@ret_292D=M@R13M=D@2D=A@R14M=D// set R15=Output.moveCursor@Output.moveCursorD=M@R15M=D@call_helperD=A(ret_292)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 9// Push 9@9D=A@SPA=MM=D@SPM=M+1// call String.new 1// call String.new 1// push ret_293// set R13=ret_293@ret_293D=M@R13M=D@1D=A@R14M=D// set R15=String.new@String.newD=M@R15M=D@call_helperD=A(ret_293)// push constant 71// Push 71@71D=A@SPA=MM=D@SPM=M+1// call String.appendChar 2// call String.appendChar 2// push ret_294// set R13=ret_294@ret_294D=M@R13M=D@2D=A@R14M=D// set R15=String.appendChar@String.appendCharD=M@R15M=D@call_helperD=A(ret_294)// push constant 97// Push 97@97D=A@SPA=MM=D@SPM=M+1// call String.appendChar 2// call String.appendChar 2// push ret_295// set R13=ret_295@ret_295D=M@R13M=D@2D=A@R14M=D// set R15=String.appendChar@String.appendCharD=M@R15M=D@call_helperD=A(ret_295)// push constant 109// Push 109@109D=A@SPA=MM=D@SPM=M+1// call String.appendChar 2// call String.appendChar 2// push ret_296// set R13=ret_296@ret_296D=M@R13M=D@2D=A@R14M=D// set R15=String.appendChar@String.appendCharD=M@R15M=D@call_helperD=A(ret_296)// push constant 101// Push 101@101D=A@SPA=MM=D@SPM=M+1// call String.appendChar 2// call String.appendChar 2// push ret_297// set R13=ret_297@ret_297D=M@R13M=D@2D=A@R14M=D// set R15=String.appendChar@String.appendCharD=M@R15M=D@call_helperD=A(ret_297)// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// call String.appendChar 2// call String.appendChar 2// push ret_298// set R13=ret_298@ret_298D=M@R13M=D@2D=A@R14M=D// set R15=String.appendChar@String.appendCharD=M@R15M=D@call_helperD=A(ret_298)// push constant 79// Push 79@79D=A@SPA=MM=D@SPM=M+1// call String.appendChar 2// call String.appendChar 2// push ret_299// set R13=ret_299@ret_299D=M@R13M=D@2D=A@R14M=D// set R15=String.appendChar@String.appendCharD=M@R15M=D@call_helperD=A(ret_299)// push constant 118// Push 118@118D=A@SPA=MM=D@SPM=M+1// call String.appendChar 2// call String.appendChar 2// push ret_300// set R13=ret_300@ret_300D=M@R13M=D@2D=A@R14M=D// set R15=String.appendChar@String.appendCharD=M@R15M=D@call_helperD=A(ret_300)// push constant 101// Push 101@101D=A@SPA=MM=D@SPM=M+1// call String.appendChar 2// call String.appendChar 2// push ret_301// set R13=ret_301@ret_301D=M@R13M=D@2D=A@R14M=D// set R15=String.appendChar@String.appendCharD=M@R15M=D@call_helperD=A(ret_301)// push constant 114// Push 114@114D=A@SPA=MM=D@SPM=M+1// call String.appendChar 2// call String.appendChar 2// push ret_302// set R13=ret_302@ret_302D=M@R13M=D@2D=A@R14M=D// set R15=String.appendChar@String.appendCharD=M@R15M=D@call_helperD=A(ret_302)// call Output.printString 1// call Output.printString 1// push ret_303// set R13=ret_303@ret_303D=M@R13M=D@1D=A@R14M=D// set R15=Output.printString@Output.printStringD=M@R15M=D@call_helperD=A(ret_303)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_3@IF_END_30;JMP// label IF_FALSE_3(IF_FALSE_3)// label IF_END_3(IF_END_3)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// function PongGame.moveBall 5(PongGame.moveBall)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// call Ball.move 1// call Ball.move 1// push ret_304// set R13=ret_304@ret_304D=M@R13M=D@1D=A@R14M=D// set R15=Ball.move@Ball.moveD=M@R15M=D@call_helperD=A(ret_304)// pop this 2@THISA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_5D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_6)// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push this 5@THISA=MD=A@5A=D+AD=M@SPA=MM=D@SPM=M+1// eq@END_BOOL_6D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_7)// not@SPA=MA=A-1M=!M// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_4@SPM=M-1A=MD=M@IF_FALSE_4D;JNE// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// pop this 5@THISA=MD=A@5D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// call Bat.getLeft 1// call Bat.getLeft 1// push ret_305// set R13=ret_305@ret_305D=M@R13M=D@1D=A@R14M=D// set R15=Bat.getLeft@Bat.getLeftD=M@R15M=D@call_helperD=A(ret_305)// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// call Bat.getRight 1// call Bat.getRight 1// push ret_306// set R13=ret_306@ret_306D=M@R13M=D@1D=A@R14M=D// set R15=Bat.getRight@Bat.getRightD=M@R15M=D@call_helperD=A(ret_306)// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// call Ball.getLeft 1// call Ball.getLeft 1// push ret_307// set R13=ret_307@ret_307D=M@R13M=D@1D=A@R14M=D// set R15=Ball.getLeft@Ball.getLeftD=M@R15M=D@call_helperD=A(ret_307)// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// call Ball.getRight 1// call Ball.getRight 1// push ret_308// set R13=ret_308@ret_308D=M@R13M=D@1D=A@R14M=D// set R15=Ball.getRight@Ball.getRightD=M@R15M=D@call_helperD=A(ret_308)// pop local 4@LCLA=MD=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 4// Push 4@4D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_7D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_8)// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_5@SPM=M-1A=MD=M@IF_FALSE_5D;JNE// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// gt@END_BOOL_8D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_9)// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// lt@END_BOOL_9D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_10)// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// pop this 3@THISA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 3@THISA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_6@SPM=M-1A=MD=M@IF_FALSE_6D;JNE// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 10// Push 10@10D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// lt@END_BOOL_10D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_11)// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_7@SPM=M-1A=MD=M@IF_FALSE_7D;JNE// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_7@IF_END_70;JMP// label IF_FALSE_7(IF_FALSE_7)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 10// Push 10@10D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// gt@END_BOOL_11D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_12)// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_8@SPM=M-1A=MD=M@IF_FALSE_8D;JNE// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_8@IF_END_80;JMP// label IF_FALSE_8(IF_FALSE_8)// label IF_END_8(IF_END_8)// label IF_END_7(IF_END_7)// push this 6@THISA=MD=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop this 6@THISA=MD=A@6D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push this 6@THISA=MD=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// call Bat.setWidth 2// call Bat.setWidth 2// push ret_309// set R13=ret_309@ret_309D=M@R13M=D@2D=A@R14M=D// set R15=Bat.setWidth@Bat.setWidthD=M@R15M=D@call_helperD=A(ret_309)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 4@THISA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop this 4@THISA=MD=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 22// Push 22@22D=A@SPA=MM=D@SPM=M+1// push constant 7// Push 7@7D=A@SPA=MM=D@SPM=M+1// call Output.moveCursor 2// call Output.moveCursor 2// push ret_310// set R13=ret_310@ret_310D=M@R13M=D@2D=A@R14M=D// set R15=Output.moveCursor@Output.moveCursorD=M@R15M=D@call_helperD=A(ret_310)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 4@THISA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// call Output.printInt 1// call Output.printInt 1// push ret_311// set R13=ret_311@ret_311D=M@R13M=D@1D=A@R14M=D// set R15=Output.printInt@Output.printIntD=M@R15M=D@call_helperD=A(ret_311)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_6@IF_END_60;JMP// label IF_FALSE_6(IF_FALSE_6)// label IF_END_6(IF_END_6)// goto IF_END_5@IF_END_50;JMP// label IF_FALSE_5(IF_FALSE_5)// label IF_END_5(IF_END_5)// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// call Ball.bounce 2// call Ball.bounce 2// push ret_312// set R13=ret_312@ret_312D=M@R13M=D@2D=A@R14M=D// set R15=Ball.bounce@Ball.bounceD=M@R15M=D@call_helperD=A(ret_312)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_4@IF_END_40;JMP// label IF_FALSE_4(IF_FALSE_4)// label IF_END_4(IF_END_4)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// function Main.main 1(Main.main)// Push 0@0D=A@SPA=MM=D@SPM=M+1// call PongGame.newInstance 0// call PongGame.newInstance 0// push ret_313// set R13=ret_313@ret_313D=M@R13M=D@0D=A@R14M=D// set R15=PongGame.newInstance@PongGame.newInstanceD=M@R15M=D@call_helperD=A(ret_313)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call PongGame.getInstance 0// call PongGame.getInstance 0// push ret_314// set R13=ret_314@ret_314D=M@R13M=D@0D=A@R14M=D// set R15=PongGame.getInstance@PongGame.getInstanceD=M@R15M=D@call_helperD=A(ret_314)// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// call PongGame.run 1// call PongGame.run 1// push ret_315// set R13=ret_315@ret_315D=M@R13M=D@1D=A@R14M=D// set R15=PongGame.run@PongGame.runD=M@R15M=D@call_helperD=A(ret_315)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// call PongGame.dispose 1// call PongGame.dispose 1// push ret_316// set R13=ret_316@ret_316D=M@R13M=D@1D=A@R14M=D// set R15=PongGame.dispose@PongGame.disposeD=M@R15M=D@call_helperD=A(ret_316)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// function Bat.new 0(Bat.new)// push constant 5// Push 5@5D=A@SPA=MM=D@SPM=M+1// call Memory.alloc 1// call Memory.alloc 1// push ret_317// set R13=ret_317@ret_317D=M@R13M=D@1D=A@R14M=D// set R15=Memory.alloc@Memory.allocD=M@R15M=D@call_helperD=A(ret_317)// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop this 0@THISA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop this 1@THISA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// pop this 2@THISA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// pop this 3@THISA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// pop this 4@THISA=MD=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// call Bat.show 1// call Bat.show 1// push ret_318// set R13=ret_318@ret_318D=M@R13M=D@1D=A@R14M=D// set R15=Bat.show@Bat.showD=M@R15M=D@call_helperD=A(ret_318)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Bat.dispose 0(Bat.dispose)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// call Memory.deAlloc 1// call Memory.deAlloc 1// push ret_319// set R13=ret_319@ret_319D=M@R13M=D@1D=A@R14M=D// set R15=Memory.deAlloc@Memory.deAllocD=M@R15M=D@call_helperD=A(ret_319)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// function Bat.show 0(Bat.show)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// call Screen.setColor 1// call Screen.setColor 1// push ret_320// set R13=ret_320@ret_320D=M@R13M=D@1D=A@R14M=D// set R15=Screen.setColor@Screen.setColorD=M@R15M=D@call_helperD=A(ret_320)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// call Bat.draw 1// call Bat.draw 1// push ret_321// set R13=ret_321@ret_321D=M@R13M=D@1D=A@R14M=D// set R15=Bat.draw@Bat.drawD=M@R15M=D@call_helperD=A(ret_321)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// function Bat.hide 0(Bat.hide)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Screen.setColor 1// call Screen.setColor 1// push ret_322// set R13=ret_322@ret_322D=M@R13M=D@1D=A@R14M=D// set R15=Screen.setColor@Screen.setColorD=M@R15M=D@call_helperD=A(ret_322)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// call Bat.draw 1// call Bat.draw 1// push ret_323// set R13=ret_323@ret_323D=M@R13M=D@1D=A@R14M=D// set R15=Bat.draw@Bat.drawD=M@R15M=D@call_helperD=A(ret_323)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// function Bat.draw 0(Bat.draw)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 3@THISA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// call Screen.drawRectangle 4// call Screen.drawRectangle 4// push ret_324// set R13=ret_324@ret_324D=M@R13M=D@4D=A@R14M=D// set R15=Screen.drawRectangle@Screen.drawRectangleD=M@R15M=D@call_helperD=A(ret_324)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// function Bat.setDirection 0(Bat.setDirection)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop this 4@THISA=MD=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// function Bat.getLeft 0(Bat.getLeft)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// function Bat.getRight 0(Bat.getRight)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// return@restore_stack_and_return0;JMP// function Bat.setWidth 0(Bat.setWidth)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// call Bat.hide 1// call Bat.hide 1// push ret_325// set R13=ret_325@ret_325D=M@R13M=D@1D=A@R14M=D// set R15=Bat.hide@Bat.hideD=M@R15M=D@call_helperD=A(ret_325)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop this 2@THISA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// call Bat.show 1// call Bat.show 1// push ret_326// set R13=ret_326@ret_326D=M@R13M=D@1D=A@R14M=D// set R15=Bat.show@Bat.showD=M@R15M=D@call_helperD=A(ret_326)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// function Bat.move 0(Bat.move)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 4@THISA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// eq@END_BOOL_0D=A@R15M=D@boolean_cmd_helper_JEQ0;JMP(END_BOOL_1)// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_0@SPM=M-1A=MD=M@IF_FALSE_0D;JNE// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push constant 4// Push 4@4D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop this 0@THISA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@END_BOOL_1D=A@R15M=D@boolean_cmd_helper_JLT0;JMP(END_BOOL_2)// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_1@SPM=M-1A=MD=M@IF_FALSE_1D;JNE// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop this 0@THISA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_1@IF_END_10;JMP// label IF_FALSE_1(IF_FALSE_1)// label IF_END_1(IF_END_1)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Screen.setColor 1// call Screen.setColor 1// push ret_327// set R13=ret_327@ret_327D=M@R13M=D@1D=A@R14M=D// set R15=Screen.setColor@Screen.setColorD=M@R15M=D@call_helperD=A(ret_327)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 4// Push 4@4D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 3@THISA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// call Screen.drawRectangle 4// call Screen.drawRectangle 4// push ret_328// set R13=ret_328@ret_328D=M@R13M=D@4D=A@R14M=D// set R15=Screen.drawRectangle@Screen.drawRectangleD=M@R15M=D@call_helperD=A(ret_328)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// call Screen.setColor 1// call Screen.setColor 1// push ret_329// set R13=ret_329@ret_329D=M@R13M=D@1D=A@R14M=D// set R15=Screen.setColor@Screen.setColorD=M@R15M=D@call_helperD=A(ret_329)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 3@THISA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// call Screen.drawRectangle 4// call Screen.drawRectangle 4// push ret_330// set R13=ret_330@ret_330D=M@R13M=D@4D=A@R14M=D// set R15=Screen.drawRectangle@Screen.drawRectangleD=M@R15M=D@call_helperD=A(ret_330)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_0@IF_END_00;JMP// label IF_FALSE_0(IF_FALSE_0)// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push constant 4// Push 4@4D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop this 0@THISA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 511// Push 511@511D=A@SPA=MM=D@SPM=M+1// gt@END_BOOL_2D=A@R15M=D@boolean_cmd_helper_JGT0;JMP(END_BOOL_3)// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_2@SPM=M-1A=MD=M@IF_FALSE_2D;JNE// push constant 511// Push 511@511D=A@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop this 0@THISA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_2@IF_END_20;JMP// label IF_FALSE_2(IF_FALSE_2)// label IF_END_2(IF_END_2)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Screen.setColor 1// call Screen.setColor 1// push ret_331// set R13=ret_331@ret_331D=M@R13M=D@1D=A@R14M=D// set R15=Screen.setColor@Screen.setColorD=M@R15M=D@call_helperD=A(ret_331)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push constant 4// Push 4@4D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 3@THISA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// call Screen.drawRectangle 4// call Screen.drawRectangle 4// push ret_332// set R13=ret_332@ret_332D=M@R13M=D@4D=A@R14M=D// set R15=Screen.drawRectangle@Screen.drawRectangleD=M@R15M=D@call_helperD=A(ret_332)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// call Screen.setColor 1// call Screen.setColor 1// push ret_333// set R13=ret_333@ret_333D=M@R13M=D@1D=A@R14M=D// set R15=Screen.setColor@Screen.setColorD=M@R15M=D@call_helperD=A(ret_333)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 3@THISA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// call Screen.drawRectangle 4// call Screen.drawRectangle 4// push ret_334// set R13=ret_334@ret_334D=M@R13M=D@4D=A@R14M=D// set R15=Screen.drawRectangle@Screen.drawRectangleD=M@R15M=D@call_helperD=A(ret_334)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END_0(IF_END_0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return@restore_stack_and_return0;JMP// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D