@256D=A@SPM=D// call Sys.init 0// push ret_0@ret_0D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 0@0D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Sys.init@Sys.init0;JMP(ret_0)// function String.new 0(String.new)// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// call Memory.alloc 1// call Memory.alloc 1// push ret_1@ret_1D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Memory.alloc@Memory.alloc0;JMP(ret_1)// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_0D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_00;JMP(BOOL_0)@SPA=MA=A-1A=A-1M=-1(END_BOOL_0)@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 14// Push 14@14D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_2@ret_2D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Sys.error@Sys.error0;JMP(ret_2)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_1D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_10;JMP(BOOL_1)@SPA=MA=A-1A=A-1M=-1(END_BOOL_1)@SPM=M-1// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call Array.new 1// call Array.new 1// push ret_3@ret_3D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Array.new@Array.new0;JMP(ret_3)// pop this 1@THISA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE1(IF_FALSE1)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop this 0@THISA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop this 2@THISA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function String.dispose 0(String.dispose)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_2D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_20;JMP(BOOL_2)@SPA=MA=A-1A=A-1M=-1(END_BOOL_2)@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// call Array.dispose 1// call Array.dispose 1// push ret_4@ret_4D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Array.dispose@Array.dispose0;JMP(ret_4)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// call Memory.deAlloc 1// call Memory.deAlloc 1// push ret_5@ret_5D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Memory.deAlloc@Memory.deAlloc0;JMP(ret_5)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function String.length 0(String.length)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function String.charAt 0(String.charAt)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_3D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_30;JMP(BOOL_3)@SPA=MA=A-1A=A-1M=-1(END_BOOL_3)@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_4D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_40;JMP(BOOL_4)@SPA=MA=A-1A=A-1M=-1(END_BOOL_4)@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_5D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_50;JMP(BOOL_5)@SPA=MA=A-1A=A-1M=-1(END_BOOL_5)@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_6@ret_6D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Sys.error@Sys.error0;JMP(ret_6)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function String.setCharAt 0(String.setCharAt)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_6D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_60;JMP(BOOL_6)@SPA=MA=A-1A=A-1M=-1(END_BOOL_6)@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_7D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_70;JMP(BOOL_7)@SPA=MA=A-1A=A-1M=-1(END_BOOL_7)@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_8D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_80;JMP(BOOL_8)@SPA=MA=A-1A=A-1M=-1(END_BOOL_8)@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_7@ret_7D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Sys.error@Sys.error0;JMP(ret_7)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function String.appendChar 0(String.appendChar)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_9D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_90;JMP(BOOL_9)@SPA=MA=A-1A=A-1M=-1(END_BOOL_9)@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 17// Push 17@17D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_8@ret_8D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Sys.error@Sys.error0;JMP(ret_8)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop this 2@THISA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function String.eraseLastChar 0(String.eraseLastChar)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_10D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_100;JMP(BOOL_10)@SPA=MA=A-1A=A-1M=-1(END_BOOL_10)@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 18// Push 18@18D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_9@ret_9D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Sys.error@Sys.error0;JMP(ret_9)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop this 2@THISA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function String.intValue 5(String.intValue)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_11D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_110;JMP(BOOL_11)@SPA=MA=A-1A=A-1M=-1(END_BOOL_11)@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// label IF_FALSE0(IF_FALSE0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 45// Push 45@45D=A@SPA=MM=D@SPM=M+1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_12D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_120;JMP(BOOL_12)@SPA=MA=A-1A=A-1M=-1(END_BOOL_12)@SPM=M-1// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// pop local 4@LCLA=MD=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE1(IF_FALSE1)// label WHILE_EXP0(WHILE_EXP0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_13D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_130;JMP(BOOL_13)@SPA=MA=A-1A=A-1M=-1(END_BOOL_13)@SPM=M-1// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_14D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_140;JMP(BOOL_14)@SPA=MA=A-1A=A-1M=-1(END_BOOL_14)@SPM=M-1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 9// Push 9@9D=A@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_15D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_150;JMP(BOOL_15)@SPA=MA=A-1A=A-1M=-1(END_BOOL_15)@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// not@SPA=MA=A-1M=!M// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// if-goto IF_TRUE2@SPM=M-1A=MD=M@IF_TRUE2D;JNE// goto IF_FALSE2@IF_FALSE20;JMP// label IF_TRUE2(IF_TRUE2)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 10// Push 10@10D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_10@ret_10D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.multiply@Math.multiply0;JMP(ret_10)// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE2(IF_FALSE2)// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// if-goto IF_TRUE3@SPM=M-1A=MD=M@IF_TRUE3D;JNE// goto IF_FALSE3@IF_FALSE30;JMP// label IF_TRUE3(IF_TRUE3)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE3(IF_FALSE3)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function String.setInt 4(String.setInt)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_16D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_160;JMP(BOOL_16)@SPA=MA=A-1A=A-1M=-1(END_BOOL_16)@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 19// Push 19@19D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_11@ret_11D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Sys.error@Sys.error0;JMP(ret_11)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// call Array.new 1// call Array.new 1// push ret_12@ret_12D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Array.new@Array.new0;JMP(ret_12)// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_17D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_170;JMP(BOOL_17)@SPA=MA=A-1A=A-1M=-1(END_BOOL_17)@SPM=M-1// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// pop argument 1@ARGA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE1(IF_FALSE1)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_18D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_180;JMP(BOOL_18)@SPA=MA=A-1A=A-1M=-1(END_BOOL_18)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 10// Push 10@10D=A@SPA=MM=D@SPM=M+1// call Math.divide 2// call Math.divide 2// push ret_13@ret_13D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.divide@Math.divide0;JMP(ret_13)// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 10// Push 10@10D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_14@ret_14D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.multiply@Math.multiply0;JMP(ret_14)// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop argument 1@ARGA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// if-goto IF_TRUE2@SPM=M-1A=MD=M@IF_TRUE2D;JNE// goto IF_FALSE2@IF_FALSE20;JMP// label IF_TRUE2(IF_TRUE2)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 45// Push 45@45D=A@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE2(IF_FALSE2)// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_19D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_190;JMP(BOOL_19)@SPA=MA=A-1A=A-1M=-1(END_BOOL_19)@SPM=M-1// if-goto IF_TRUE3@SPM=M-1A=MD=M@IF_TRUE3D;JNE// goto IF_FALSE3@IF_FALSE30;JMP// label IF_TRUE3(IF_TRUE3)// push constant 19// Push 19@19D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_15@ret_15D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Sys.error@Sys.error0;JMP(ret_15)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE3(IF_FALSE3)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_20D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_200;JMP(BOOL_20)@SPA=MA=A-1A=A-1M=-1(END_BOOL_20)@SPM=M-1// if-goto IF_TRUE4@SPM=M-1A=MD=M@IF_TRUE4D;JNE// goto IF_FALSE4@IF_FALSE40;JMP// label IF_TRUE4(IF_TRUE4)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// pop this 2@THISA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END4@IF_END40;JMP// label IF_FALSE4(IF_FALSE4)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop this 2@THISA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP1(WHILE_EXP1)// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_21D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_210;JMP(BOOL_21)@SPA=MA=A-1A=A-1M=-1(END_BOOL_21)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto WHILE_END1@SPM=M-1A=MD=M@WHILE_END1D;JNE// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop this 2@THISA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP1@WHILE_EXP10;JMP// label WHILE_END1(WHILE_END1)// label IF_END4(IF_END4)// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// call Array.dispose 1// call Array.dispose 1// push ret_16@ret_16D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Array.dispose@Array.dispose0;JMP(ret_16)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function String.newLine 0(String.newLine)// push constant 128// Push 128@128D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function String.backSpace 0(String.backSpace)// push constant 129// Push 129@129D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function String.doubleQuote 0(String.doubleQuote)// push constant 34// Push 34@34D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Math.init 1(Math.init)// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Array.new 1// call Array.new 1// push ret_17@ret_17D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Array.new@Array.new0;JMP(ret_17)// pop static 1@16D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Array.new 1// call Array.new 1// push ret_18@ret_18D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Array.new@Array.new0;JMP(ret_18)// pop static 0@16D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push static 0@16D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_0D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_00;JMP(BOOL_0)@SPA=MA=A-1A=A-1M=-1(END_BOOL_0)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 0@16D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push static 0@16D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push static 0@16D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Math.abs 0(Math.abs)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_1D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_10;JMP(BOOL_1)@SPA=MA=A-1A=A-1M=-1(END_BOOL_1)@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// pop argument 0@ARGA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Math.multiply 5(Math.multiply)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_2D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_20;JMP(BOOL_2)@SPA=MA=A-1A=A-1M=-1(END_BOOL_2)@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_3D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_30;JMP(BOOL_3)@SPA=MA=A-1A=A-1M=-1(END_BOOL_3)@SPM=M-1// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_4D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_40;JMP(BOOL_4)@SPA=MA=A-1A=A-1M=-1(END_BOOL_4)@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_5D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_50;JMP(BOOL_5)@SPA=MA=A-1A=A-1M=-1(END_BOOL_5)@SPM=M-1// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// pop local 4@LCLA=MD=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call Math.abs 1// call Math.abs 1// push ret_19@ret_19D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.abs@Math.abs0;JMP(ret_19)// pop argument 0@ARGA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// call Math.abs 1// call Math.abs 1// push ret_20@ret_20D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.abs@Math.abs0;JMP(ret_20)// pop argument 1@ARGA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_6D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_60;JMP(BOOL_6)@SPA=MA=A-1A=A-1M=-1(END_BOOL_6)@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop argument 0@ARGA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop argument 1@ARGA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// label WHILE_EXP0(WHILE_EXP0)// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_7D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_70;JMP(BOOL_7)@SPA=MA=A-1A=A-1M=-1(END_BOOL_7)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push static 0@16D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_8D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_80;JMP(BOOL_8)@SPA=MA=A-1A=A-1M=-1(END_BOOL_8)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push static 0@16D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE1(IF_FALSE1)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop argument 0@ARGA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// if-goto IF_TRUE2@SPM=M-1A=MD=M@IF_TRUE2D;JNE// goto IF_FALSE2@IF_FALSE20;JMP// label IF_TRUE2(IF_TRUE2)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE2(IF_FALSE2)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Math.divide 4(Math.divide)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_9D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_90;JMP(BOOL_9)@SPA=MA=A-1A=A-1M=-1(END_BOOL_9)@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_21@ret_21D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Sys.error@Sys.error0;JMP(ret_21)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_10D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_100;JMP(BOOL_10)@SPA=MA=A-1A=A-1M=-1(END_BOOL_10)@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_11D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_110;JMP(BOOL_11)@SPA=MA=A-1A=A-1M=-1(END_BOOL_11)@SPM=M-1// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_12D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_120;JMP(BOOL_12)@SPA=MA=A-1A=A-1M=-1(END_BOOL_12)@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_13D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_130;JMP(BOOL_13)@SPA=MA=A-1A=A-1M=-1(END_BOOL_13)@SPM=M-1// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push static 1@16D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// call Math.abs 1// call Math.abs 1// push ret_22@ret_22D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.abs@Math.abs0;JMP(ret_22)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call Math.abs 1// call Math.abs 1// push ret_23@ret_23D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.abs@Math.abs0;JMP(ret_23)// pop argument 0@ARGA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_14D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_140;JMP(BOOL_14)@SPA=MA=A-1A=A-1M=-1(END_BOOL_14)@SPM=M-1// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push constant 32767// Push 32767@32767D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 1@16D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 1@16D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_15D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_150;JMP(BOOL_15)@SPA=MA=A-1A=A-1M=-1(END_BOOL_15)@SPM=M-1// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push static 1@16D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 1@16D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 1@16D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push static 1@16D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_16D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_160;JMP(BOOL_16)@SPA=MA=A-1A=A-1M=-1(END_BOOL_16)@SPM=M-1// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// if-goto IF_TRUE2@SPM=M-1A=MD=M@IF_TRUE2D;JNE// goto IF_FALSE2@IF_FALSE20;JMP// label IF_TRUE2(IF_TRUE2)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE2(IF_FALSE2)// label IF_FALSE1(IF_FALSE1)// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// label WHILE_EXP1(WHILE_EXP1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_17D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_170;JMP(BOOL_17)@SPA=MA=A-1A=A-1M=-1(END_BOOL_17)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto WHILE_END1@SPM=M-1A=MD=M@WHILE_END1D;JNE// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 1@16D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_18D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_180;JMP(BOOL_18)@SPA=MA=A-1A=A-1M=-1(END_BOOL_18)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto IF_TRUE3@SPM=M-1A=MD=M@IF_TRUE3D;JNE// goto IF_FALSE3@IF_FALSE30;JMP// label IF_TRUE3(IF_TRUE3)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 0@16D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 1@16D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop argument 0@ARGA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE3(IF_FALSE3)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP1@WHILE_EXP10;JMP// label WHILE_END1(WHILE_END1)// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// if-goto IF_TRUE4@SPM=M-1A=MD=M@IF_TRUE4D;JNE// goto IF_FALSE4@IF_FALSE40;JMP// label IF_TRUE4(IF_TRUE4)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE4(IF_FALSE4)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Math.sqrt 4(Math.sqrt)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_19D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_190;JMP(BOOL_19)@SPA=MA=A-1A=A-1M=-1(END_BOOL_19)@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 4// Push 4@4D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_24@ret_24D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Sys.error@Sys.error0;JMP(ret_24)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push constant 7// Push 7@7D=A@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_20D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_200;JMP(BOOL_20)@SPA=MA=A-1A=A-1M=-1(END_BOOL_20)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 0@16D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_25@ret_25D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.multiply@Math.multiply0;JMP(ret_25)// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_21D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_210;JMP(BOOL_21)@SPA=MA=A-1A=A-1M=-1(END_BOOL_21)@SPM=M-1// not@SPA=MA=A-1M=!M// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_22D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_220;JMP(BOOL_22)@SPA=MA=A-1A=A-1M=-1(END_BOOL_22)@SPM=M-1// not@SPA=MA=A-1M=!M// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE1(IF_FALSE1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Math.max 0(Math.max)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_23D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_230;JMP(BOOL_23)@SPA=MA=A-1A=A-1M=-1(END_BOOL_23)@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop argument 1@ARGA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Math.min 0(Math.min)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_24D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_240;JMP(BOOL_24)@SPA=MA=A-1A=A-1M=-1(END_BOOL_24)@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop argument 1@ARGA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Array.new 0(Array.new)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_0D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_00;JMP(BOOL_0)@SPA=MA=A-1A=A-1M=-1(END_BOOL_0)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_26@ret_26D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Sys.error@Sys.error0;JMP(ret_26)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call Memory.alloc 1// call Memory.alloc 1// push ret_27@ret_27D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Memory.alloc@Memory.alloc0;JMP(ret_27)// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Array.dispose 0(Array.dispose)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// call Memory.deAlloc 1// call Memory.deAlloc 1// push ret_28@ret_28D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Memory.deAlloc@Memory.deAlloc0;JMP(ret_28)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Keyboard.init 0(Keyboard.init)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Keyboard.keyPressed 0(Keyboard.keyPressed)// push constant 24576// Push 24576@24576D=A@SPA=MM=D@SPM=M+1// call Memory.peek 1// call Memory.peek 1// push ret_29@ret_29D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Memory.peek@Memory.peek0;JMP(ret_29)// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Keyboard.readChar 2(Keyboard.readChar)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.printChar 1// call Output.printChar 1// push ret_30@ret_30D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.printChar@Output.printChar0;JMP(ret_30)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_0D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_00;JMP(BOOL_0)@SPA=MA=A-1A=A-1M=-1(END_BOOL_0)@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_1D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_10;JMP(BOOL_1)@SPA=MA=A-1A=A-1M=-1(END_BOOL_1)@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// call Keyboard.keyPressed 0// call Keyboard.keyPressed 0// push ret_31@ret_31D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 0@0D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Keyboard.keyPressed@Keyboard.keyPressed0;JMP(ret_31)// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_2D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_20;JMP(BOOL_2)@SPA=MA=A-1A=A-1M=-1(END_BOOL_2)@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// call String.backSpace 0// call String.backSpace 0// push ret_32@ret_32D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 0@0D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto String.backSpace@String.backSpace0;JMP(ret_32)// call Output.printChar 1// call Output.printChar 1// push ret_33@ret_33D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.printChar@Output.printChar0;JMP(ret_33)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// call Output.printChar 1// call Output.printChar 1// push ret_34@ret_34D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.printChar@Output.printChar0;JMP(ret_34)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Keyboard.readLine 5(Keyboard.readLine)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 80// Push 80@80D=A@SPA=MM=D@SPM=M+1// call String.new 1// call String.new 1// push ret_35@ret_35D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto String.new@String.new0;JMP(ret_35)// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call Output.printString 1// call Output.printString 1// push ret_36@ret_36D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.printString@Output.printString0;JMP(ret_36)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call String.newLine 0// call String.newLine 0// push ret_37@ret_37D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 0@0D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto String.newLine@String.newLine0;JMP(ret_37)// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call String.backSpace 0// call String.backSpace 0// push ret_38@ret_38D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 0@0D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto String.backSpace@String.backSpace0;JMP(ret_38)// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// call Keyboard.readChar 0// call Keyboard.readChar 0// push ret_39@ret_39D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 0@0D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Keyboard.readChar@Keyboard.readChar0;JMP(ret_39)// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_3D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_30;JMP(BOOL_3)@SPA=MA=A-1A=A-1M=-1(END_BOOL_3)@SPM=M-1// pop local 4@LCLA=MD=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_4D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_40;JMP(BOOL_4)@SPA=MA=A-1A=A-1M=-1(END_BOOL_4)@SPM=M-1// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// call String.eraseLastChar 1// call String.eraseLastChar 1// push ret_40@ret_40D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto String.eraseLastChar@String.eraseLastChar0;JMP(ret_40)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END1@IF_END10;JMP// label IF_FALSE1(IF_FALSE1)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// call String.appendChar 2// call String.appendChar 2// push ret_41@ret_41D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto String.appendChar@String.appendChar0;JMP(ret_41)// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END1(IF_END1)// label IF_FALSE0(IF_FALSE0)// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Keyboard.readInt 2(Keyboard.readInt)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call Keyboard.readLine 1// call Keyboard.readLine 1// push ret_42@ret_42D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Keyboard.readLine@Keyboard.readLine0;JMP(ret_42)// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// call String.intValue 1// call String.intValue 1// push ret_43@ret_43D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto String.intValue@String.intValue0;JMP(ret_43)// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// call String.dispose 1// call String.dispose 1// push ret_44@ret_44D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto String.dispose@String.dispose0;JMP(ret_44)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Sys.init 0(Sys.init)// call Memory.init 0// call Memory.init 0// push ret_45@ret_45D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 0@0D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Memory.init@Memory.init0;JMP(ret_45)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call Math.init 0// call Math.init 0// push ret_46@ret_46D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 0@0D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.init@Math.init0;JMP(ret_46)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call Screen.init 0// call Screen.init 0// push ret_47@ret_47D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 0@0D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.init@Screen.init0;JMP(ret_47)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call Output.init 0// call Output.init 0// push ret_48@ret_48D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 0@0D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.init@Output.init0;JMP(ret_48)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call Keyboard.init 0// call Keyboard.init 0// push ret_49@ret_49D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 0@0D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Keyboard.init@Keyboard.init0;JMP(ret_49)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call Main.main 0// call Main.main 0// push ret_50@ret_50D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 0@0D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Main.main@Main.main0;JMP(ret_50)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call Sys.halt 0// call Sys.halt 0// push ret_51@ret_51D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 0@0D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Sys.halt@Sys.halt0;JMP(ret_51)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Sys.halt 0(Sys.halt)// label WHILE_EXP0(WHILE_EXP0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Sys.wait 1(Sys.wait)// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_0D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_00;JMP(BOOL_0)@SPA=MA=A-1A=A-1M=-1(END_BOOL_0)@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_52@ret_52D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Sys.error@Sys.error0;JMP(ret_52)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// label WHILE_EXP0(WHILE_EXP0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_1D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_10;JMP(BOOL_1)@SPA=MA=A-1A=A-1M=-1(END_BOOL_1)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push constant 50// Push 50@50D=A@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP1(WHILE_EXP1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_2D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_20;JMP(BOOL_2)@SPA=MA=A-1A=A-1M=-1(END_BOOL_2)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto WHILE_END1@SPM=M-1A=MD=M@WHILE_END1D;JNE// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP1@WHILE_EXP10;JMP// label WHILE_END1(WHILE_END1)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop argument 0@ARGA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Sys.error 0(Sys.error)// push constant 69// Push 69@69D=A@SPA=MM=D@SPM=M+1// call Output.printChar 1// call Output.printChar 1// push ret_53@ret_53D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.printChar@Output.printChar0;JMP(ret_53)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 82// Push 82@82D=A@SPA=MM=D@SPM=M+1// call Output.printChar 1// call Output.printChar 1// push ret_54@ret_54D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.printChar@Output.printChar0;JMP(ret_54)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 82// Push 82@82D=A@SPA=MM=D@SPM=M+1// call Output.printChar 1// call Output.printChar 1// push ret_55@ret_55D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.printChar@Output.printChar0;JMP(ret_55)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call Output.printInt 1// call Output.printInt 1// push ret_56@ret_56D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.printInt@Output.printInt0;JMP(ret_56)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call Sys.halt 0// call Sys.halt 0// push ret_57@ret_57D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 0@0D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Sys.halt@Sys.halt0;JMP(ret_57)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Output.init 0(Output.init)// push constant 16384// Push 16384@16384D=A@SPA=MM=D@SPM=M+1// pop static 4@18D=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// pop static 2@18D=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// pop static 1@18D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop static 0@18D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// call String.new 1// call String.new 1// push ret_58@ret_58D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto String.new@String.new0;JMP(ret_58)// pop static 3@18D=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call Output.initMap 0// call Output.initMap 0// push ret_59@ret_59D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 0@0D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.initMap@Output.initMap0;JMP(ret_59)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// call Output.createShiftedMap 0// call Output.createShiftedMap 0// push ret_60@ret_60D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 0@0D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.createShiftedMap@Output.createShiftedMap0;JMP(ret_60)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Output.initMap 0(Output.initMap)// push constant 127// Push 127@127D=A@SPA=MM=D@SPM=M+1// call Array.new 1// call Array.new 1// push ret_61@ret_61D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Array.new@Array.new0;JMP(ret_61)// pop static 5@18D=A@5D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_62@ret_62D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_62)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_63@ret_63D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_63)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 33// Push 33@33D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_64@ret_64D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_64)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 34// Push 34@34D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 20// Push 20@20D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_65@ret_65D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_65)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 35// Push 35@35D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 18// Push 18@18D=A@SPA=MM=D@SPM=M+1// push constant 18// Push 18@18D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 18// Push 18@18D=A@SPA=MM=D@SPM=M+1// push constant 18// Push 18@18D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 18// Push 18@18D=A@SPA=MM=D@SPM=M+1// push constant 18// Push 18@18D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_66@ret_66D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_66)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 36// Push 36@36D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_67@ret_67D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_67)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 37// Push 37@37D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 35// Push 35@35D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 49// Push 49@49D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_68@ret_68D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_68)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 38// Push 38@38D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_69@ret_69D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_69)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 39// Push 39@39D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_70@ret_70D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_70)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 40// Push 40@40D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_71@ret_71D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_71)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 41// Push 41@41D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_72@ret_72D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_72)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 42// Push 42@42D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_73@ret_73D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_73)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 43// Push 43@43D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_74@ret_74D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_74)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 44// Push 44@44D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_75@ret_75D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_75)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 45// Push 45@45D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_76@ret_76D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_76)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 46// Push 46@46D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_77@ret_77D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_77)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 47// Push 47@47D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_78@ret_78D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_78)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_79@ret_79D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_79)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 49// Push 49@49D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 14// Push 14@14D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_80@ret_80D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_80)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 50// Push 50@50D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_81@ret_81D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_81)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 28// Push 28@28D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_82@ret_82D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_82)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 52// Push 52@52D=A@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 28// Push 28@28D=A@SPA=MM=D@SPM=M+1// push constant 26// Push 26@26D=A@SPA=MM=D@SPM=M+1// push constant 25// Push 25@25D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 60// Push 60@60D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_83@ret_83D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_83)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 53// Push 53@53D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 31// Push 31@31D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_84@ret_84D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_84)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 28// Push 28@28D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 31// Push 31@31D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_85@ret_85D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_85)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 55// Push 55@55D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 49// Push 49@49D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_86@ret_86D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_86)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 56// Push 56@56D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_87@ret_87D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_87)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 57// Push 57@57D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 62// Push 62@62D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 14// Push 14@14D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_88@ret_88D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_88)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 58// Push 58@58D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_89@ret_89D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_89)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 59// Push 59@59D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_90@ret_90D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_90)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 60// Push 60@60D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_91@ret_91D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_91)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 61// Push 61@61D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_92@ret_92D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_92)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 62// Push 62@62D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_93@ret_93D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_93)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 64// Push 64@64D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 59// Push 59@59D=A@SPA=MM=D@SPM=M+1// push constant 59// Push 59@59D=A@SPA=MM=D@SPM=M+1// push constant 59// Push 59@59D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_94@ret_94D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_94)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_95@ret_95D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_95)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 65// Push 65@65D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_96@ret_96D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_96)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 66// Push 66@66D=A@SPA=MM=D@SPM=M+1// push constant 31// Push 31@31D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 31// Push 31@31D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 31// Push 31@31D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_97@ret_97D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_97)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 67// Push 67@67D=A@SPA=MM=D@SPM=M+1// push constant 28// Push 28@28D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 35// Push 35@35D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 35// Push 35@35D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 28// Push 28@28D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_98@ret_98D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_98)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 68// Push 68@68D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_99@ret_99D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_99)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 69// Push 69@69D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 35// Push 35@35D=A@SPA=MM=D@SPM=M+1// push constant 11// Push 11@11D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 11// Push 11@11D=A@SPA=MM=D@SPM=M+1// push constant 35// Push 35@35D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_100@ret_100D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_100)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 70// Push 70@70D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 35// Push 35@35D=A@SPA=MM=D@SPM=M+1// push constant 11// Push 11@11D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 11// Push 11@11D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_101@ret_101D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_101)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 71// Push 71@71D=A@SPA=MM=D@SPM=M+1// push constant 28// Push 28@28D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 35// Push 35@35D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 59// Push 59@59D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 44// Push 44@44D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_102@ret_102D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_102)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 72// Push 72@72D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_103@ret_103D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_103)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 73// Push 73@73D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_104@ret_104D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_104)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 74// Push 74@74D=A@SPA=MM=D@SPM=M+1// push constant 60// Push 60@60D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 14// Push 14@14D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_105@ret_105D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_105)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 75// Push 75@75D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_106@ret_106D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_106)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 76// Push 76@76D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 35// Push 35@35D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_107@ret_107D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_107)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 77// Push 77@77D=A@SPA=MM=D@SPM=M+1// push constant 33// Push 33@33D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_108@ret_108D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_108)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 78// Push 78@78D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 55// Push 55@55D=A@SPA=MM=D@SPM=M+1// push constant 55// Push 55@55D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 59// Push 59@59D=A@SPA=MM=D@SPM=M+1// push constant 59// Push 59@59D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_109@ret_109D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_109)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 79// Push 79@79D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_110@ret_110D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_110)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 80// Push 80@80D=A@SPA=MM=D@SPM=M+1// push constant 31// Push 31@31D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 31// Push 31@31D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_111@ret_111D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_111)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 81// Push 81@81D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 59// Push 59@59D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_112@ret_112D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_112)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 82// Push 82@82D=A@SPA=MM=D@SPM=M+1// push constant 31// Push 31@31D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 31// Push 31@31D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_113@ret_113D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_113)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 83// Push 83@83D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 28// Push 28@28D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_114@ret_114D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_114)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 84// Push 84@84D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 45// Push 45@45D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_115@ret_115D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_115)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 85// Push 85@85D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_116@ret_116D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_116)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 86// Push 86@86D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_117@ret_117D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_117)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 87// Push 87@87D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 18// Push 18@18D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_118@ret_118D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_118)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 88// Push 88@88D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_119@ret_119D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_119)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 89// Push 89@89D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_120@ret_120D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_120)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 90// Push 90@90D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 49// Push 49@49D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 35// Push 35@35D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_121@ret_121D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_121)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 91// Push 91@91D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_122@ret_122D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_122)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 92// Push 92@92D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_123@ret_123D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_123)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 93// Push 93@93D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_124@ret_124D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_124)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 94// Push 94@94D=A@SPA=MM=D@SPM=M+1// push constant 8// Push 8@8D=A@SPA=MM=D@SPM=M+1// push constant 28// Push 28@28D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_125@ret_125D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_125)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 95// Push 95@95D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_126@ret_126D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_126)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 96// Push 96@96D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_127@ret_127D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_127)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 97// Push 97@97D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 14// Push 14@14D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_128@ret_128D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_128)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 98// Push 98@98D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_129@ret_129D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_129)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 99// Push 99@99D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_130@ret_130D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_130)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 100// Push 100@100D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 60// Push 60@60D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_131@ret_131D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_131)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 101// Push 101@101D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_132@ret_132D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_132)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 102// Push 102@102D=A@SPA=MM=D@SPM=M+1// push constant 28// Push 28@28D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 38// Push 38@38D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_133@ret_133D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_133)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 103// Push 103@103D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 62// Push 62@62D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_134@ret_134D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_134)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 104// Push 104@104D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 55// Push 55@55D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_135@ret_135D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_135)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 105// Push 105@105D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 14// Push 14@14D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_136@ret_136D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_136)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 106// Push 106@106D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 56// Push 56@56D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_137@ret_137D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_137)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 107// Push 107@107D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_138@ret_138D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_138)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 108// Push 108@108D=A@SPA=MM=D@SPM=M+1// push constant 14// Push 14@14D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_139@ret_139D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_139)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 109// Push 109@109D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 29// Push 29@29D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 43// Push 43@43D=A@SPA=MM=D@SPM=M+1// push constant 43// Push 43@43D=A@SPA=MM=D@SPM=M+1// push constant 43// Push 43@43D=A@SPA=MM=D@SPM=M+1// push constant 43// Push 43@43D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_140@ret_140D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_140)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 110// Push 110@110D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 29// Push 29@29D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_141@ret_141D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_141)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 111// Push 111@111D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_142@ret_142D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_142)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 112// Push 112@112D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 31// Push 31@31D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_143@ret_143D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_143)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 113// Push 113@113D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 62// Push 62@62D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_144@ret_144D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_144)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 114// Push 114@114D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 29// Push 29@29D=A@SPA=MM=D@SPM=M+1// push constant 55// Push 55@55D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push constant 7// Push 7@7D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_145@ret_145D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_145)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 115// Push 115@115D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_146@ret_146D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_146)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 116// Push 116@116D=A@SPA=MM=D@SPM=M+1// push constant 4// Push 4@4D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 28// Push 28@28D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_147@ret_147D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_147)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 117// Push 117@117D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 54// Push 54@54D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_148@ret_148D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_148)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 118// Push 118@118D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_149@ret_149D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_149)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 119// Push 119@119D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 18// Push 18@18D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_150@ret_150D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_150)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 120// Push 120@120D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_151@ret_151D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_151)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 121// Push 121@121D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 62// Push 62@62D=A@SPA=MM=D@SPM=M+1// push constant 48// Push 48@48D=A@SPA=MM=D@SPM=M+1// push constant 24// Push 24@24D=A@SPA=MM=D@SPM=M+1// push constant 15// Push 15@15D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_152@ret_152D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_152)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 122// Push 122@122D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 27// Push 27@27D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push constant 51// Push 51@51D=A@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_153@ret_153D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_153)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 123// Push 123@123D=A@SPA=MM=D@SPM=M+1// push constant 56// Push 56@56D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 7// Push 7@7D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 56// Push 56@56D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_154@ret_154D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_154)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 124// Push 124@124D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_155@ret_155D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_155)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 125// Push 125@125D=A@SPA=MM=D@SPM=M+1// push constant 7// Push 7@7D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 56// Push 56@56D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// push constant 7// Push 7@7D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_156@ret_156D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_156)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 126// Push 126@126D=A@SPA=MM=D@SPM=M+1// push constant 38// Push 38@38D=A@SPA=MM=D@SPM=M+1// push constant 45// Push 45@45D=A@SPA=MM=D@SPM=M+1// push constant 25// Push 25@25D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Output.create 12// call Output.create 12// push ret_157@ret_157D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 12@12D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.create@Output.create0;JMP(ret_157)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Output.create 1(Output.create)// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 11// Push 11@11D=A@SPA=MM=D@SPM=M+1// call Array.new 1// call Array.new 1// push ret_158@ret_158D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Array.new@Array.new0;JMP(ret_158)// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push static 5@18D=A@5A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 4@ARGA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 4// Push 4@4D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 5@ARGA=MD=A@5A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 5// Push 5@5D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 6@ARGA=MD=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 7@ARGA=MD=A@7A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 7// Push 7@7D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 8@ARGA=MD=A@8A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 8// Push 8@8D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 9@ARGA=MD=A@9A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 9// Push 9@9D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 10@ARGA=MD=A@10A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 10// Push 10@10D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 11@ARGA=MD=A@11A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Output.createShiftedMap 4(Output.createShiftedMap)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 127// Push 127@127D=A@SPA=MM=D@SPM=M+1// call Array.new 1// call Array.new 1// push ret_159@ret_159D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Array.new@Array.new0;JMP(ret_159)// pop static 6@18D=A@6D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 127// Push 127@127D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_0D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_00;JMP(BOOL_0)@SPA=MA=A-1A=A-1M=-1(END_BOOL_0)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push static 5@18D=A@5A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 11// Push 11@11D=A@SPA=MM=D@SPM=M+1// call Array.new 1// call Array.new 1// push ret_160@ret_160D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Array.new@Array.new0;JMP(ret_160)// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push static 6@18D=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP1(WHILE_EXP1)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 11// Push 11@11D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_1D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_10;JMP(BOOL_1)@SPA=MA=A-1A=A-1M=-1(END_BOOL_1)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto WHILE_END1@SPM=M-1A=MD=M@WHILE_END1D;JNE// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 256// Push 256@256D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_161@ret_161D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.multiply@Math.multiply0;JMP(ret_161)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP1@WHILE_EXP10;JMP// label WHILE_END1(WHILE_END1)// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_2D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_20;JMP(BOOL_2)@SPA=MA=A-1A=A-1M=-1(END_BOOL_2)@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END0@IF_END00;JMP// label IF_FALSE0(IF_FALSE0)// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END0(IF_END0)// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Output.getMap 1(Output.getMap)// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_3D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_30;JMP(BOOL_3)@SPA=MA=A-1A=A-1M=-1(END_BOOL_3)@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 126// Push 126@126D=A@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_4D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_40;JMP(BOOL_4)@SPA=MA=A-1A=A-1M=-1(END_BOOL_4)@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop argument 0@ARGA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push static 2@18D=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push static 5@18D=A@5A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END1@IF_END10;JMP// label IF_FALSE1(IF_FALSE1)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push static 6@18D=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END1(IF_END1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Output.drawChar 4(Output.drawChar)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call Output.getMap 1// call Output.getMap 1// push ret_162@ret_162D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.getMap@Output.getMap0;JMP(ret_162)// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push static 1@18D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 11// Push 11@11D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_5D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_50;JMP(BOOL_5)@SPA=MA=A-1A=A-1M=-1(END_BOOL_5)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push static 2@18D=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 4@18D=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 256// Push 256@256D=A@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END0@IF_END00;JMP// label IF_FALSE0(IF_FALSE0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 4@18D=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 255// Push 255@255D=A@SPA=MM=D@SPM=M+1// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END0(IF_END0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 4@18D=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Output.moveCursor 0(Output.moveCursor)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_6D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_60;JMP(BOOL_6)@SPA=MA=A-1A=A-1M=-1(END_BOOL_6)@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 22// Push 22@22D=A@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_7D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_70;JMP(BOOL_7)@SPA=MA=A-1A=A-1M=-1(END_BOOL_7)@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_8D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_80;JMP(BOOL_8)@SPA=MA=A-1A=A-1M=-1(END_BOOL_8)@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 63// Push 63@63D=A@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_9D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_90;JMP(BOOL_9)@SPA=MA=A-1A=A-1M=-1(END_BOOL_9)@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 20// Push 20@20D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_163@ret_163D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Sys.error@Sys.error0;JMP(ret_163)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// call Math.divide 2// call Math.divide 2// push ret_164@ret_164D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.divide@Math.divide0;JMP(ret_164)// pop static 0@18D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 352// Push 352@352D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_165@ret_165D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.multiply@Math.multiply0;JMP(ret_165)// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push static 0@18D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop static 1@18D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push static 0@18D=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_166@ret_166D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.multiply@Math.multiply0;JMP(ret_166)// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_10D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_100;JMP(BOOL_10)@SPA=MA=A-1A=A-1M=-1(END_BOOL_10)@SPM=M-1// pop static 2@18D=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// call Output.drawChar 1// call Output.drawChar 1// push ret_167@ret_167D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.drawChar@Output.drawChar0;JMP(ret_167)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Output.printChar 0(Output.printChar)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call String.newLine 0// call String.newLine 0// push ret_168@ret_168D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 0@0D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto String.newLine@String.newLine0;JMP(ret_168)// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_11D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_110;JMP(BOOL_11)@SPA=MA=A-1A=A-1M=-1(END_BOOL_11)@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// call Output.println 0// call Output.println 0// push ret_169@ret_169D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 0@0D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.println@Output.println0;JMP(ret_169)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END0@IF_END00;JMP// label IF_FALSE0(IF_FALSE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call String.backSpace 0// call String.backSpace 0// push ret_170@ret_170D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 0@0D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto String.backSpace@String.backSpace0;JMP(ret_170)// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_12D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_120;JMP(BOOL_12)@SPA=MA=A-1A=A-1M=-1(END_BOOL_12)@SPM=M-1// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// call Output.backSpace 0// call Output.backSpace 0// push ret_171@ret_171D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 0@0D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.backSpace@Output.backSpace0;JMP(ret_171)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END1@IF_END10;JMP// label IF_FALSE1(IF_FALSE1)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call Output.drawChar 1// call Output.drawChar 1// push ret_172@ret_172D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.drawChar@Output.drawChar0;JMP(ret_172)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push static 2@18D=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// if-goto IF_TRUE2@SPM=M-1A=MD=M@IF_TRUE2D;JNE// goto IF_FALSE2@IF_FALSE20;JMP// label IF_TRUE2(IF_TRUE2)// push static 0@18D=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop static 0@18D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push static 1@18D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop static 1@18D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE2(IF_FALSE2)// push static 0@18D=M@SPA=MM=D@SPM=M+1// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_13D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_130;JMP(BOOL_13)@SPA=MA=A-1A=A-1M=-1(END_BOOL_13)@SPM=M-1// if-goto IF_TRUE3@SPM=M-1A=MD=M@IF_TRUE3D;JNE// goto IF_FALSE3@IF_FALSE30;JMP// label IF_TRUE3(IF_TRUE3)// call Output.println 0// call Output.println 0// push ret_173@ret_173D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 0@0D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.println@Output.println0;JMP(ret_173)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END3@IF_END30;JMP// label IF_FALSE3(IF_FALSE3)// push static 2@18D=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// pop static 2@18D=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END3(IF_END3)// label IF_END1(IF_END1)// label IF_END0(IF_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Output.printString 2(Output.printString)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call String.length 1// call String.length 1// push ret_174@ret_174D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto String.length@String.length0;JMP(ret_174)// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_14D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_140;JMP(BOOL_14)@SPA=MA=A-1A=A-1M=-1(END_BOOL_14)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// call String.charAt 2// call String.charAt 2// push ret_175@ret_175D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto String.charAt@String.charAt0;JMP(ret_175)// call Output.printChar 1// call Output.printChar 1// push ret_176@ret_176D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.printChar@Output.printChar0;JMP(ret_176)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Output.printInt 0(Output.printInt)// push static 3@18D=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call String.setInt 2// call String.setInt 2// push ret_177@ret_177D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto String.setInt@String.setInt0;JMP(ret_177)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push static 3@18D=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// call Output.printString 1// call Output.printString 1// push ret_178@ret_178D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.printString@Output.printString0;JMP(ret_178)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Output.println 0(Output.println)// push static 1@18D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 352// Push 352@352D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push static 0@18D=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop static 1@18D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop static 0@18D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// pop static 2@18D=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push static 1@18D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 8128// Push 8128@8128D=A@SPA=MM=D@SPM=M+1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_15D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_150;JMP(BOOL_15)@SPA=MA=A-1A=A-1M=-1(END_BOOL_15)@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// pop static 1@18D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Output.backSpace 0(Output.backSpace)// push static 2@18D=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push static 0@18D=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_16D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_160;JMP(BOOL_16)@SPA=MA=A-1A=A-1M=-1(END_BOOL_16)@SPM=M-1// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push static 0@18D=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop static 0@18D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push static 1@18D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop static 1@18D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END1@IF_END10;JMP// label IF_FALSE1(IF_FALSE1)// push constant 31// Push 31@31D=A@SPA=MM=D@SPM=M+1// pop static 0@18D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push static 1@18D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_17D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_170;JMP(BOOL_17)@SPA=MA=A-1A=A-1M=-1(END_BOOL_17)@SPM=M-1// if-goto IF_TRUE2@SPM=M-1A=MD=M@IF_TRUE2D;JNE// goto IF_FALSE2@IF_FALSE20;JMP// label IF_TRUE2(IF_TRUE2)// push constant 8128// Push 8128@8128D=A@SPA=MM=D@SPM=M+1// pop static 1@18D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE2(IF_FALSE2)// push static 1@18D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 321// Push 321@321D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop static 1@18D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END1(IF_END1)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop static 2@18D=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END0@IF_END00;JMP// label IF_FALSE0(IF_FALSE0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// pop static 2@18D=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END0(IF_END0)// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// call Output.drawChar 1// call Output.drawChar 1// push ret_179@ret_179D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Output.drawChar@Output.drawChar0;JMP(ret_179)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Screen.init 1(Screen.init)// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 16384// Push 16384@16384D=A@SPA=MM=D@SPM=M+1// pop static 1@25D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// pop static 2@25D=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 17// Push 17@17D=A@SPA=MM=D@SPM=M+1// call Array.new 1// call Array.new 1// push ret_180@ret_180D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Array.new@Array.new0;JMP(ret_180)// pop static 0@25D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push static 0@25D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_0D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_00;JMP(BOOL_0)@SPA=MA=A-1A=A-1M=-1(END_BOOL_0)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 0@25D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push static 0@25D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push static 0@25D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Screen.clearScreen 1(Screen.clearScreen)// Push 0@0D=A@SPA=MM=D@SPM=M+1// label WHILE_EXP0(WHILE_EXP0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 8192// Push 8192@8192D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_1D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_10;JMP(BOOL_1)@SPA=MA=A-1A=A-1M=-1(END_BOOL_1)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push static 1@25D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Screen.updateLocation 0(Screen.updateLocation)// push static 2@25D=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push static 1@25D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push static 1@25D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END0@IF_END00;JMP// label IF_FALSE0(IF_FALSE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push static 1@25D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push static 1@25D=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END0(IF_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Screen.setColor 0(Screen.setColor)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop static 2@25D=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Screen.drawPixel 3(Screen.drawPixel)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_2D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_20;JMP(BOOL_2)@SPA=MA=A-1A=A-1M=-1(END_BOOL_2)@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 511// Push 511@511D=A@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_3D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_30;JMP(BOOL_3)@SPA=MA=A-1A=A-1M=-1(END_BOOL_3)@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_4D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_40;JMP(BOOL_4)@SPA=MA=A-1A=A-1M=-1(END_BOOL_4)@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 255// Push 255@255D=A@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_5D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_50;JMP(BOOL_5)@SPA=MA=A-1A=A-1M=-1(END_BOOL_5)@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 7// Push 7@7D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_181@ret_181D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Sys.error@Sys.error0;JMP(ret_181)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Math.divide 2// call Math.divide 2// push ret_182@ret_182D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.divide@Math.divide0;JMP(ret_182)// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_183@ret_183D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.multiply@Math.multiply0;JMP(ret_183)// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_184@ret_184D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.multiply@Math.multiply0;JMP(ret_184)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push static 0@25D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// call Screen.updateLocation 2// call Screen.updateLocation 2// push ret_185@ret_185D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.updateLocation@Screen.updateLocation0;JMP(ret_185)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Screen.drawConditional 0(Screen.drawConditional)// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// call Screen.drawPixel 2// call Screen.drawPixel 2// push ret_186@ret_186D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.drawPixel@Screen.drawPixel0;JMP(ret_186)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END0@IF_END00;JMP// label IF_FALSE0(IF_FALSE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// call Screen.drawPixel 2// call Screen.drawPixel 2// push ret_187@ret_187D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.drawPixel@Screen.drawPixel0;JMP(ret_187)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END0(IF_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Screen.drawLine 11(Screen.drawLine)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_6D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_60;JMP(BOOL_6)@SPA=MA=A-1A=A-1M=-1(END_BOOL_6)@SPM=M-1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 511// Push 511@511D=A@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_7D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_70;JMP(BOOL_7)@SPA=MA=A-1A=A-1M=-1(END_BOOL_7)@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_8D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_80;JMP(BOOL_8)@SPA=MA=A-1A=A-1M=-1(END_BOOL_8)@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 255// Push 255@255D=A@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_9D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_90;JMP(BOOL_9)@SPA=MA=A-1A=A-1M=-1(END_BOOL_9)@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 8// Push 8@8D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_188@ret_188D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Sys.error@Sys.error0;JMP(ret_188)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// call Math.abs 1// call Math.abs 1// push ret_189@ret_189D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.abs@Math.abs0;JMP(ret_189)// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// call Math.abs 1// call Math.abs 1// push ret_190@ret_190D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.abs@Math.abs0;JMP(ret_190)// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_10D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_100;JMP(BOOL_10)@SPA=MA=A-1A=A-1M=-1(END_BOOL_10)@SPM=M-1// pop local 6@LCLA=MD=A@6D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 6@LCLA=MD=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_11D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_110;JMP(BOOL_11)@SPA=MA=A-1A=A-1M=-1(END_BOOL_11)@SPM=M-1// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// push local 6@LCLA=MD=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_12D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_120;JMP(BOOL_12)@SPA=MA=A-1A=A-1M=-1(END_BOOL_12)@SPM=M-1// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop local 4@LCLA=MD=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// pop argument 0@ARGA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// pop argument 2@ARGA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 4@LCLA=MD=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// pop argument 1@ARGA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// pop argument 3@ARGA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE1(IF_FALSE1)// push local 6@LCLA=MD=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// if-goto IF_TRUE2@SPM=M-1A=MD=M@IF_TRUE2D;JNE// goto IF_FALSE2@IF_FALSE20;JMP// label IF_TRUE2(IF_TRUE2)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 4@LCLA=MD=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 8@LCLA=MD=A@8D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_13D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_130;JMP(BOOL_13)@SPA=MA=A-1A=A-1M=-1(END_BOOL_13)@SPM=M-1// pop local 7@LCLA=MD=A@7D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END2@IF_END20;JMP// label IF_FALSE2(IF_FALSE2)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 8@LCLA=MD=A@8D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_14D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_140;JMP(BOOL_14)@SPA=MA=A-1A=A-1M=-1(END_BOOL_14)@SPM=M-1// pop local 7@LCLA=MD=A@7D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END2(IF_END2)// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_191@ret_191D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.multiply@Math.multiply0;JMP(ret_191)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 5@LCLA=MD=A@5D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_192@ret_192D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.multiply@Math.multiply0;JMP(ret_192)// pop local 9@LCLA=MD=A@9D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// call Math.multiply 2// call Math.multiply 2// push ret_193@ret_193D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.multiply@Math.multiply0;JMP(ret_193)// pop local 10@LCLA=MD=A@10D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 6@LCLA=MD=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// call Screen.drawConditional 3// call Screen.drawConditional 3// push ret_194@ret_194D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 3@3D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.drawConditional@Screen.drawConditional0;JMP(ret_194)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 8@LCLA=MD=A@8A=D+AD=M@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_15D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_150;JMP(BOOL_15)@SPA=MA=A-1A=A-1M=-1(END_BOOL_15)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push local 5@LCLA=MD=A@5A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_16D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_160;JMP(BOOL_16)@SPA=MA=A-1A=A-1M=-1(END_BOOL_16)@SPM=M-1// if-goto IF_TRUE3@SPM=M-1A=MD=M@IF_TRUE3D;JNE// goto IF_FALSE3@IF_FALSE30;JMP// label IF_TRUE3(IF_TRUE3)// push local 5@LCLA=MD=A@5A=D+AD=M@SPA=MM=D@SPM=M+1// push local 9@LCLA=MD=A@9A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 5@LCLA=MD=A@5D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END3@IF_END30;JMP// label IF_FALSE3(IF_FALSE3)// push local 5@LCLA=MD=A@5A=D+AD=M@SPA=MM=D@SPM=M+1// push local 10@LCLA=MD=A@10A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 5@LCLA=MD=A@5D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 7@LCLA=MD=A@7A=D+AD=M@SPA=MM=D@SPM=M+1// if-goto IF_TRUE4@SPM=M-1A=MD=M@IF_TRUE4D;JNE// goto IF_FALSE4@IF_FALSE40;JMP// label IF_TRUE4(IF_TRUE4)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END4@IF_END40;JMP// label IF_FALSE4(IF_FALSE4)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END4(IF_END4)// label IF_END3(IF_END3)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 6@LCLA=MD=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// call Screen.drawConditional 3// call Screen.drawConditional 3// push ret_195@ret_195D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 3@3D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.drawConditional@Screen.drawConditional0;JMP(ret_195)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Screen.drawRectangle 9(Screen.drawRectangle)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_17D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_170;JMP(BOOL_17)@SPA=MA=A-1A=A-1M=-1(END_BOOL_17)@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_18D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_180;JMP(BOOL_18)@SPA=MA=A-1A=A-1M=-1(END_BOOL_18)@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_19D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_190;JMP(BOOL_19)@SPA=MA=A-1A=A-1M=-1(END_BOOL_19)@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 511// Push 511@511D=A@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_20D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_200;JMP(BOOL_20)@SPA=MA=A-1A=A-1M=-1(END_BOOL_20)@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_21D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_210;JMP(BOOL_21)@SPA=MA=A-1A=A-1M=-1(END_BOOL_21)@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 255// Push 255@255D=A@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_22D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_220;JMP(BOOL_22)@SPA=MA=A-1A=A-1M=-1(END_BOOL_22)@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 9// Push 9@9D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_196@ret_196D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Sys.error@Sys.error0;JMP(ret_196)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Math.divide 2// call Math.divide 2// push ret_197@ret_197D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.divide@Math.divide0;JMP(ret_197)// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_198@ret_198D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.multiply@Math.multiply0;JMP(ret_198)// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 7@LCLA=MD=A@7D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Math.divide 2// call Math.divide 2// push ret_199@ret_199D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.divide@Math.divide0;JMP(ret_199)// pop local 4@LCLA=MD=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_200@ret_200D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.multiply@Math.multiply0;JMP(ret_200)// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 8@LCLA=MD=A@8D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 7@LCLA=MD=A@7A=D+AD=M@SPA=MM=D@SPM=M+1// push static 0@25D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// not@SPA=MA=A-1M=!M// pop local 6@LCLA=MD=A@6D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 8@LCLA=MD=A@8A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push static 0@25D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 5@LCLA=MD=A@5D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_201@ret_201D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.multiply@Math.multiply0;JMP(ret_201)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_23D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_230;JMP(BOOL_23)@SPA=MA=A-1A=A-1M=-1(END_BOOL_23)@SPM=M-1// not@SPA=MA=A-1M=!M// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_24D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_240;JMP(BOOL_24)@SPA=MA=A-1A=A-1M=-1(END_BOOL_24)@SPM=M-1// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 5@LCLA=MD=A@5A=D+AD=M@SPA=MM=D@SPM=M+1// push local 6@LCLA=MD=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// call Screen.updateLocation 2// call Screen.updateLocation 2// push ret_202@ret_202D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.updateLocation@Screen.updateLocation0;JMP(ret_202)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END1@IF_END10;JMP// label IF_FALSE1(IF_FALSE1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 6@LCLA=MD=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// call Screen.updateLocation 2// call Screen.updateLocation 2// push ret_203@ret_203D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.updateLocation@Screen.updateLocation0;JMP(ret_203)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP1(WHILE_EXP1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_25D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_250;JMP(BOOL_25)@SPA=MA=A-1A=A-1M=-1(END_BOOL_25)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto WHILE_END1@SPM=M-1A=MD=M@WHILE_END1D;JNE// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// call Screen.updateLocation 2// call Screen.updateLocation 2// push ret_204@ret_204D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.updateLocation@Screen.updateLocation0;JMP(ret_204)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP1@WHILE_EXP10;JMP// label WHILE_END1(WHILE_END1)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 5@LCLA=MD=A@5A=D+AD=M@SPA=MM=D@SPM=M+1// call Screen.updateLocation 2// call Screen.updateLocation 2// push ret_205@ret_205D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.updateLocation@Screen.updateLocation0;JMP(ret_205)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END1(IF_END1)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop argument 1@ARGA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Screen.drawHorizontal 11(Screen.drawHorizontal)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// call Math.min 2// call Math.min 2// push ret_206@ret_206D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.min@Math.min0;JMP(ret_206)// pop local 7@LCLA=MD=A@7D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// call Math.max 2// call Math.max 2// push ret_207@ret_207D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.max@Math.max0;JMP(ret_207)// pop local 8@LCLA=MD=A@8D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_26D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_260;JMP(BOOL_26)@SPA=MA=A-1A=A-1M=-1(END_BOOL_26)@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 256// Push 256@256D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_27D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_270;JMP(BOOL_27)@SPA=MA=A-1A=A-1M=-1(END_BOOL_27)@SPM=M-1// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// push local 7@LCLA=MD=A@7A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 512// Push 512@512D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_28D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_280;JMP(BOOL_28)@SPA=MA=A-1A=A-1M=-1(END_BOOL_28)@SPM=M-1// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// push local 8@LCLA=MD=A@8A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_29D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_290;JMP(BOOL_29)@SPA=MA=A-1A=A-1M=-1(END_BOOL_29)@SPM=M-1// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push local 7@LCLA=MD=A@7A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Math.max 2// call Math.max 2// push ret_208@ret_208D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.max@Math.max0;JMP(ret_208)// pop local 7@LCLA=MD=A@7D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 8@LCLA=MD=A@8A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 511// Push 511@511D=A@SPA=MM=D@SPM=M+1// call Math.min 2// call Math.min 2// push ret_209@ret_209D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.min@Math.min0;JMP(ret_209)// pop local 8@LCLA=MD=A@8D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 7@LCLA=MD=A@7A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Math.divide 2// call Math.divide 2// push ret_210@ret_210D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.divide@Math.divide0;JMP(ret_210)// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 7@LCLA=MD=A@7A=D+AD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_211@ret_211D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.multiply@Math.multiply0;JMP(ret_211)// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 9@LCLA=MD=A@9D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 8@LCLA=MD=A@8A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Math.divide 2// call Math.divide 2// push ret_212@ret_212D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.divide@Math.divide0;JMP(ret_212)// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 8@LCLA=MD=A@8A=D+AD=M@SPA=MM=D@SPM=M+1// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 16// Push 16@16D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_213@ret_213D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.multiply@Math.multiply0;JMP(ret_213)// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 10@LCLA=MD=A@10D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 9@LCLA=MD=A@9A=D+AD=M@SPA=MM=D@SPM=M+1// push static 0@25D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// not@SPA=MA=A-1M=!M// pop local 5@LCLA=MD=A@5D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 10@LCLA=MD=A@10A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push static 0@25D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 4@LCLA=MD=A@4D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 32// Push 32@32D=A@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_214@ret_214D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.multiply@Math.multiply0;JMP(ret_214)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 6@LCLA=MD=A@6D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 6@LCLA=MD=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 3@LCLA=MD=A@3D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 6@LCLA=MD=A@6A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_30D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_300;JMP(BOOL_30)@SPA=MA=A-1A=A-1M=-1(END_BOOL_30)@SPM=M-1// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// push local 5@LCLA=MD=A@5A=D+AD=M@SPA=MM=D@SPM=M+1// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// call Screen.updateLocation 2// call Screen.updateLocation 2// push ret_215@ret_215D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.updateLocation@Screen.updateLocation0;JMP(ret_215)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END1@IF_END10;JMP// label IF_FALSE1(IF_FALSE1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 5@LCLA=MD=A@5A=D+AD=M@SPA=MM=D@SPM=M+1// call Screen.updateLocation 2// call Screen.updateLocation 2// push ret_216@ret_216D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.updateLocation@Screen.updateLocation0;JMP(ret_216)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_31D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_310;JMP(BOOL_31)@SPA=MA=A-1A=A-1M=-1(END_BOOL_31)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// call Screen.updateLocation 2// call Screen.updateLocation 2// push ret_217@ret_217D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.updateLocation@Screen.updateLocation0;JMP(ret_217)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push local 3@LCLA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// push local 4@LCLA=MD=A@4A=D+AD=M@SPA=MM=D@SPM=M+1// call Screen.updateLocation 2// call Screen.updateLocation 2// push ret_218@ret_218D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.updateLocation@Screen.updateLocation0;JMP(ret_218)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END1(IF_END1)// label IF_FALSE0(IF_FALSE0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Screen.drawSymetric 0(Screen.drawSymetric)// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// call Screen.drawHorizontal 3// call Screen.drawHorizontal 3// push ret_219@ret_219D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 3@3D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.drawHorizontal@Screen.drawHorizontal0;JMP(ret_219)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// call Screen.drawHorizontal 3// call Screen.drawHorizontal 3// push ret_220@ret_220D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 3@3D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.drawHorizontal@Screen.drawHorizontal0;JMP(ret_220)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// call Screen.drawHorizontal 3// call Screen.drawHorizontal 3// push ret_221@ret_221D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 3@3D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.drawHorizontal@Screen.drawHorizontal0;JMP(ret_221)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 3@ARGA=MD=A@3A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// call Screen.drawHorizontal 3// call Screen.drawHorizontal 3// push ret_222@ret_222D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 3@3D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.drawHorizontal@Screen.drawHorizontal0;JMP(ret_222)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Screen.drawCircle 3(Screen.drawCircle)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_32D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_320;JMP(BOOL_32)@SPA=MA=A-1A=A-1M=-1(END_BOOL_32)@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 511// Push 511@511D=A@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_33D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_330;JMP(BOOL_33)@SPA=MA=A-1A=A-1M=-1(END_BOOL_33)@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_34D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_340;JMP(BOOL_34)@SPA=MA=A-1A=A-1M=-1(END_BOOL_34)@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 255// Push 255@255D=A@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_35D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_350;JMP(BOOL_35)@SPA=MA=A-1A=A-1M=-1(END_BOOL_35)@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 12// Push 12@12D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_223@ret_223D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Sys.error@Sys.error0;JMP(ret_223)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_36D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_360;JMP(BOOL_36)@SPA=MA=A-1A=A-1M=-1(END_BOOL_36)@SPM=M-1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 511// Push 511@511D=A@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_37D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_370;JMP(BOOL_37)@SPA=MA=A-1A=A-1M=-1(END_BOOL_37)@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_38D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_380;JMP(BOOL_38)@SPA=MA=A-1A=A-1M=-1(END_BOOL_38)@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 255// Push 255@255D=A@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_39D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_390;JMP(BOOL_39)@SPA=MA=A-1A=A-1M=-1(END_BOOL_39)@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push constant 13// Push 13@13D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_224@ret_224D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Sys.error@Sys.error0;JMP(ret_224)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE1(IF_FALSE1)// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// call Screen.drawSymetric 4// call Screen.drawSymetric 4// push ret_225@ret_225D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 4@4D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.drawSymetric@Screen.drawSymetric0;JMP(ret_225)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_40D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_400;JMP(BOOL_40)@SPA=MA=A-1A=A-1M=-1(END_BOOL_40)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_41D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_410;JMP(BOOL_41)@SPA=MA=A-1A=A-1M=-1(END_BOOL_41)@SPM=M-1// if-goto IF_TRUE2@SPM=M-1A=MD=M@IF_TRUE2D;JNE// goto IF_FALSE2@IF_FALSE20;JMP// label IF_TRUE2(IF_TRUE2)// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// call Math.multiply 2// call Math.multiply 2// push ret_226@ret_226D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.multiply@Math.multiply0;JMP(ret_226)// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END2@IF_END20;JMP// label IF_FALSE2(IF_FALSE2)// push local 2@LCLA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// call Math.multiply 2// call Math.multiply 2// push ret_227@ret_227D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Math.multiply@Math.multiply0;JMP(ret_227)// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 5// Push 5@5D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 2@LCLA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END2(IF_END2)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// call Screen.drawSymetric 4// call Screen.drawSymetric 4// push ret_228@ret_228D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 4@4D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.drawSymetric@Screen.drawSymetric0;JMP(ret_228)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Memory.init 0(Memory.init)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop static 0@28D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 2048// Push 2048@2048D=A@SPA=MM=D@SPM=M+1// push static 0@28D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 14334// Push 14334@14334D=A@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 2049// Push 2049@2049D=A@SPA=MM=D@SPM=M+1// push static 0@28D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 2050// Push 2050@2050D=A@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Memory.peek 0(Memory.peek)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push static 0@28D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Memory.poke 0(Memory.poke)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push static 0@28D=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Memory.alloc 2(Memory.alloc)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_0D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_00;JMP(BOOL_0)@SPA=MA=A-1A=A-1M=-1(END_BOOL_0)@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 5// Push 5@5D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_229@ret_229D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Sys.error@Sys.error0;JMP(ret_229)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE0(IF_FALSE0)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_1D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_10;JMP(BOOL_1)@SPA=MA=A-1A=A-1M=-1(END_BOOL_1)@SPM=M-1// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// pop argument 0@ARGA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE1(IF_FALSE1)// push constant 2048// Push 2048@2048D=A@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label WHILE_EXP0(WHILE_EXP0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 16383// Push 16383@16383D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_2D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_20;JMP(BOOL_2)@SPA=MA=A-1A=A-1M=-1(END_BOOL_2)@SPM=M-1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_3D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_30;JMP(BOOL_3)@SPA=MA=A-1A=A-1M=-1(END_BOOL_3)@SPM=M-1// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto WHILE_END0@SPM=M-1A=MD=M@WHILE_END0D;JNE// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_4D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_40;JMP(BOOL_4)@SPA=MA=A-1A=A-1M=-1(END_BOOL_4)@SPM=M-1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 16382// Push 16382@16382D=A@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_5D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_50;JMP(BOOL_5)@SPA=MA=A-1A=A-1M=-1(END_BOOL_5)@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_6D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_60;JMP(BOOL_6)@SPA=MA=A-1A=A-1M=-1(END_BOOL_6)@SPM=M-1// or// or@SPA=MA=A-1D=MA=A-1M=D|M@SPM=M-1// if-goto IF_TRUE2@SPM=M-1A=MD=M@IF_TRUE2D;JNE// goto IF_FALSE2@IF_FALSE20;JMP// label IF_TRUE2(IF_TRUE2)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END2@IF_END20;JMP// label IF_FALSE2(IF_FALSE2)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_7D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_70;JMP(BOOL_7)@SPA=MA=A-1A=A-1M=-1(END_BOOL_7)@SPM=M-1// if-goto IF_TRUE3@SPM=M-1A=MD=M@IF_TRUE3D;JNE// goto IF_FALSE3@IF_FALSE30;JMP// label IF_TRUE3(IF_TRUE3)// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END3@IF_END30;JMP// label IF_FALSE3(IF_FALSE3)// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END3(IF_END3)// label IF_END2(IF_END2)// goto WHILE_EXP0@WHILE_EXP00;JMP// label WHILE_END0(WHILE_END0)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 16379// Push 16379@16379D=A@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_8D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_80;JMP(BOOL_8)@SPA=MA=A-1A=A-1M=-1(END_BOOL_8)@SPM=M-1// if-goto IF_TRUE4@SPM=M-1A=MD=M@IF_TRUE4D;JNE// goto IF_FALSE4@IF_FALSE40;JMP// label IF_TRUE4(IF_TRUE4)// push constant 6// Push 6@6D=A@SPA=MM=D@SPM=M+1// call Sys.error 1// call Sys.error 1// push ret_230@ret_230D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Sys.error@Sys.error0;JMP(ret_230)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE4(IF_FALSE4)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_9D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_90;JMP(BOOL_9)@SPA=MA=A-1A=A-1M=-1(END_BOOL_9)@SPM=M-1// if-goto IF_TRUE5@SPM=M-1A=MD=M@IF_TRUE5D;JNE// goto IF_FALSE5@IF_FALSE50;JMP// label IF_TRUE5(IF_TRUE5)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_10D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_100;JMP(BOOL_10)@SPA=MA=A-1A=A-1M=-1(END_BOOL_10)@SPM=M-1// if-goto IF_TRUE6@SPM=M-1A=MD=M@IF_TRUE6D;JNE// goto IF_FALSE6@IF_FALSE60;JMP// label IF_TRUE6(IF_TRUE6)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 4// Push 4@4D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END6@IF_END60;JMP// label IF_FALSE6(IF_FALSE6)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END6(IF_END6)// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_FALSE5(IF_FALSE5)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Memory.deAlloc 2(Memory.deAlloc)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_11D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_110;JMP(BOOL_11)@SPA=MA=A-1A=A-1M=-1(END_BOOL_11)@SPM=M-1// if-goto IF_TRUE0@SPM=M-1A=MD=M@IF_TRUE0D;JNE// goto IF_FALSE0@IF_FALSE00;JMP// label IF_TRUE0(IF_TRUE0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END0@IF_END00;JMP// label IF_FALSE0(IF_FALSE0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_12D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_120;JMP(BOOL_12)@SPA=MA=A-1A=A-1M=-1(END_BOOL_12)@SPM=M-1// if-goto IF_TRUE1@SPM=M-1A=MD=M@IF_TRUE1D;JNE// goto IF_FALSE1@IF_FALSE10;JMP// label IF_TRUE1(IF_TRUE1)// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END1@IF_END10;JMP// label IF_FALSE1(IF_FALSE1)// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push that 0@THATA=MD=M@SPA=MM=D@SPM=M+1// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// pop pointer 1@3D=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push temp 0@5D=M@SPA=MM=D@SPM=M+1// pop that 0@THATA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label IF_END1(IF_END1)// label IF_END0(IF_END0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Square.new 0(Square.new)// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// call Memory.alloc 1// call Memory.alloc 1// push ret_231@ret_231D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Memory.alloc@Memory.alloc0;JMP(ret_231)// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop this 0@THISA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 1@ARGA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// pop this 1@THISA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push argument 2@ARGA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// pop this 2@THISA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// call Square.draw 1// call Square.draw 1// push ret_232@ret_232D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Square.draw@Square.draw0;JMP(ret_232)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function Square.dispose 0(Square.dispose)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// call Memory.deAlloc 1// call Memory.deAlloc 1// push ret_233@ret_233D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Memory.deAlloc@Memory.deAlloc0;JMP(ret_233)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// function Square.draw 0(Square.draw)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// call Screen.setColor 1// call Screen.setColor 1// push ret_234@ret_234D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.setColor@Screen.setColor0;JMP(ret_234)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// call Screen.drawRectangle 4// call Screen.drawRectangle 4// push ret_235@ret_235D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 4@4D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.drawRectangle@Screen.drawRectangle0;JMP(ret_235)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// function Square.erase 0(Square.erase)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Screen.setColor 1// call Screen.setColor 1// push ret_236@ret_236D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.setColor@Screen.setColor0;JMP(ret_236)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// call Screen.drawRectangle 4// call Screen.drawRectangle 4// push ret_237@ret_237D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 4@4D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.drawRectangle@Screen.drawRectangle0;JMP(ret_237)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// function Square.incSize 0(Square.incSize)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 254// Push 254@254D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_0D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_00;JMP(BOOL_0)@SPA=MA=A-1A=A-1M=-1(END_BOOL_0)@SPM=M-1// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 510// Push 510@510D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_1D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_10;JMP(BOOL_1)@SPA=MA=A-1A=A-1M=-1(END_BOOL_1)@SPM=M-1// and// and@SPA=MA=A-1D=MA=A-1M=D&M@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_0@SPM=M-1A=MD=M@IF_FALSE_0D;JNE// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// call Square.erase 1// call Square.erase 1// push ret_238@ret_238D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Square.erase@Square.erase0;JMP(ret_238)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop this 2@THISA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// call Square.draw 1// call Square.draw 1// push ret_239@ret_239D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Square.draw@Square.draw0;JMP(ret_239)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_0@IF_END_00;JMP// label IF_FALSE_0(IF_FALSE_0)// label IF_END_0(IF_END_0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// function Square.decSize 0(Square.decSize)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_2D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_20;JMP(BOOL_2)@SPA=MA=A-1A=A-1M=-1(END_BOOL_2)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_1@SPM=M-1A=MD=M@IF_FALSE_1D;JNE// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// call Square.erase 1// call Square.erase 1// push ret_240@ret_240D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Square.erase@Square.erase0;JMP(ret_240)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop this 2@THISA=MD=A@2D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// call Square.draw 1// call Square.draw 1// push ret_241@ret_241D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Square.draw@Square.draw0;JMP(ret_241)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_1@IF_END_10;JMP// label IF_FALSE_1(IF_FALSE_1)// label IF_END_1(IF_END_1)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// function Square.moveUp 0(Square.moveUp)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_3D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_30;JMP(BOOL_3)@SPA=MA=A-1A=A-1M=-1(END_BOOL_3)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_2@SPM=M-1A=MD=M@IF_FALSE_2D;JNE// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Screen.setColor 1// call Screen.setColor 1// push ret_242@ret_242D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.setColor@Screen.setColor0;JMP(ret_242)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// call Screen.drawRectangle 4// call Screen.drawRectangle 4// push ret_243@ret_243D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 4@4D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.drawRectangle@Screen.drawRectangle0;JMP(ret_243)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop this 1@THISA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// call Screen.setColor 1// call Screen.setColor 1// push ret_244@ret_244D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.setColor@Screen.setColor0;JMP(ret_244)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// call Screen.drawRectangle 4// call Screen.drawRectangle 4// push ret_245@ret_245D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 4@4D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.drawRectangle@Screen.drawRectangle0;JMP(ret_245)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_2@IF_END_20;JMP// label IF_FALSE_2(IF_FALSE_2)// label IF_END_2(IF_END_2)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// function Square.moveDown 0(Square.moveDown)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 254// Push 254@254D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_4D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_40;JMP(BOOL_4)@SPA=MA=A-1A=A-1M=-1(END_BOOL_4)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_3@SPM=M-1A=MD=M@IF_FALSE_3D;JNE// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Screen.setColor 1// call Screen.setColor 1// push ret_246@ret_246D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.setColor@Screen.setColor0;JMP(ret_246)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// call Screen.drawRectangle 4// call Screen.drawRectangle 4// push ret_247@ret_247D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 4@4D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.drawRectangle@Screen.drawRectangle0;JMP(ret_247)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop this 1@THISA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// call Screen.setColor 1// call Screen.setColor 1// push ret_248@ret_248D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.setColor@Screen.setColor0;JMP(ret_248)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// call Screen.drawRectangle 4// call Screen.drawRectangle 4// push ret_249@ret_249D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 4@4D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.drawRectangle@Screen.drawRectangle0;JMP(ret_249)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_3@IF_END_30;JMP// label IF_FALSE_3(IF_FALSE_3)// label IF_END_3(IF_END_3)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// function Square.moveLeft 0(Square.moveLeft)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// gt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_5D;JGT@SPA=MA=A-1A=A-1M=0@END_BOOL_50;JMP(BOOL_5)@SPA=MA=A-1A=A-1M=-1(END_BOOL_5)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_4@SPM=M-1A=MD=M@IF_FALSE_4D;JNE// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Screen.setColor 1// call Screen.setColor 1// push ret_250@ret_250D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.setColor@Screen.setColor0;JMP(ret_250)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// call Screen.drawRectangle 4// call Screen.drawRectangle 4// push ret_251@ret_251D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 4@4D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.drawRectangle@Screen.drawRectangle0;JMP(ret_251)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop this 0@THISA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// call Screen.setColor 1// call Screen.setColor 1// push ret_252@ret_252D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.setColor@Screen.setColor0;JMP(ret_252)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// call Screen.drawRectangle 4// call Screen.drawRectangle 4// push ret_253@ret_253D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 4@4D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.drawRectangle@Screen.drawRectangle0;JMP(ret_253)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_4@IF_END_40;JMP// label IF_FALSE_4(IF_FALSE_4)// label IF_END_4(IF_END_4)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// function Square.moveRight 0(Square.moveRight)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 510// Push 510@510D=A@SPA=MM=D@SPM=M+1// lt@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_6D;JLT@SPA=MA=A-1A=A-1M=0@END_BOOL_60;JMP(BOOL_6)@SPA=MA=A-1A=A-1M=-1(END_BOOL_6)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_5@SPM=M-1A=MD=M@IF_FALSE_5D;JNE// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// call Screen.setColor 1// call Screen.setColor 1// push ret_254@ret_254D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.setColor@Screen.setColor0;JMP(ret_254)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// call Screen.drawRectangle 4// call Screen.drawRectangle 4// push ret_255@ret_255D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 4@4D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.drawRectangle@Screen.drawRectangle0;JMP(ret_255)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// pop this 0@THISA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// call Screen.setColor 1// call Screen.setColor 1// push ret_256@ret_256D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.setColor@Screen.setColor0;JMP(ret_256)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push this 2@THISA=MD=A@2A=D+AD=M@SPA=MM=D@SPM=M+1// add// add@SPA=MA=A-1D=MA=A-1M=D+M@SPM=M-1// call Screen.drawRectangle 4// call Screen.drawRectangle 4// push ret_257@ret_257D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 4@4D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Screen.drawRectangle@Screen.drawRectangle0;JMP(ret_257)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_5@IF_END_50;JMP// label IF_FALSE_5(IF_FALSE_5)// label IF_END_5(IF_END_5)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// function SquareGame.new 0(SquareGame.new)// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// call Memory.alloc 1// call Memory.alloc 1// push ret_258@ret_258D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Memory.alloc@Memory.alloc0;JMP(ret_258)// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// push constant 30// Push 30@30D=A@SPA=MM=D@SPM=M+1// call Square.new 3// call Square.new 3// push ret_259@ret_259D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 3@3D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Square.new@Square.new0;JMP(ret_259)// pop this 0@THISA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop this 1@THISA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// function SquareGame.dispose 0(SquareGame.dispose)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// call Square.dispose 1// call Square.dispose 1// push ret_260@ret_260D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Square.dispose@Square.dispose0;JMP(ret_260)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// call Memory.deAlloc 1// call Memory.deAlloc 1// push ret_261@ret_261D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Memory.deAlloc@Memory.deAlloc0;JMP(ret_261)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// function SquareGame.moveSquare 0(SquareGame.moveSquare)// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_0D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_00;JMP(BOOL_0)@SPA=MA=A-1A=A-1M=-1(END_BOOL_0)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_0@SPM=M-1A=MD=M@IF_FALSE_0D;JNE// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// call Square.moveUp 1// call Square.moveUp 1// push ret_262@ret_262D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Square.moveUp@Square.moveUp0;JMP(ret_262)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_0@IF_END_00;JMP// label IF_FALSE_0(IF_FALSE_0)// label IF_END_0(IF_END_0)// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_1D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_10;JMP(BOOL_1)@SPA=MA=A-1A=A-1M=-1(END_BOOL_1)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_1@SPM=M-1A=MD=M@IF_FALSE_1D;JNE// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// call Square.moveDown 1// call Square.moveDown 1// push ret_263@ret_263D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Square.moveDown@Square.moveDown0;JMP(ret_263)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_1@IF_END_10;JMP// label IF_FALSE_1(IF_FALSE_1)// label IF_END_1(IF_END_1)// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_2D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_20;JMP(BOOL_2)@SPA=MA=A-1A=A-1M=-1(END_BOOL_2)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_2@SPM=M-1A=MD=M@IF_FALSE_2D;JNE// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// call Square.moveLeft 1// call Square.moveLeft 1// push ret_264@ret_264D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Square.moveLeft@Square.moveLeft0;JMP(ret_264)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_2@IF_END_20;JMP// label IF_FALSE_2(IF_FALSE_2)// label IF_END_2(IF_END_2)// push this 1@THISA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// push constant 4// Push 4@4D=A@SPA=MM=D@SPM=M+1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_3D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_30;JMP(BOOL_3)@SPA=MA=A-1A=A-1M=-1(END_BOOL_3)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_3@SPM=M-1A=MD=M@IF_FALSE_3D;JNE// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// call Square.moveRight 1// call Square.moveRight 1// push ret_265@ret_265D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Square.moveRight@Square.moveRight0;JMP(ret_265)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_3@IF_END_30;JMP// label IF_FALSE_3(IF_FALSE_3)// label IF_END_3(IF_END_3)// push constant 5// Push 5@5D=A@SPA=MM=D@SPM=M+1// call Sys.wait 1// call Sys.wait 1// push ret_266@ret_266D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Sys.wait@Sys.wait0;JMP(ret_266)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// function SquareGame.run 2(SquareGame.run)// Push 0@0D=A@SPA=MM=D@SPM=M+1// Push 0@0D=A@SPA=MM=D@SPM=M+1// push argument 0@ARGA=MD=M@SPA=MM=D@SPM=M+1// pop pointer 0@3D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// label while_loop_0(while_loop_0)// push local 1@LCLA=MD=A@1A=D+AD=M@SPA=MM=D@SPM=M+1// not@SPA=MA=A-1M=!M// not@SPA=MA=A-1M=!M// if-goto end_while_0@SPM=M-1A=MD=M@end_while_0D;JNE// label while_loop_1(while_loop_1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_4D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_40;JMP(BOOL_4)@SPA=MA=A-1A=A-1M=-1(END_BOOL_4)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto end_while_1@SPM=M-1A=MD=M@end_while_1D;JNE// call Keyboard.keyPressed 0// call Keyboard.keyPressed 0// push ret_267@ret_267D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 0@0D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Keyboard.keyPressed@Keyboard.keyPressed0;JMP(ret_267)// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// call SquareGame.moveSquare 1// call SquareGame.moveSquare 1// push ret_268@ret_268D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto SquareGame.moveSquare@SquareGame.moveSquare0;JMP(ret_268)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto while_loop_1@while_loop_10;JMP// label end_while_1(end_while_1)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 81// Push 81@81D=A@SPA=MM=D@SPM=M+1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_5D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_50;JMP(BOOL_5)@SPA=MA=A-1A=A-1M=-1(END_BOOL_5)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_4@SPM=M-1A=MD=M@IF_FALSE_4D;JNE// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// neg@SPA=MA=A-1M=-M// pop local 1@LCLA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_4@IF_END_40;JMP// label IF_FALSE_4(IF_FALSE_4)// label IF_END_4(IF_END_4)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 90// Push 90@90D=A@SPA=MM=D@SPM=M+1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_6D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_60;JMP(BOOL_6)@SPA=MA=A-1A=A-1M=-1(END_BOOL_6)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_5@SPM=M-1A=MD=M@IF_FALSE_5D;JNE// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// call Square.decSize 1// call Square.decSize 1// push ret_269@ret_269D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Square.decSize@Square.decSize0;JMP(ret_269)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_5@IF_END_50;JMP// label IF_FALSE_5(IF_FALSE_5)// label IF_END_5(IF_END_5)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 88// Push 88@88D=A@SPA=MM=D@SPM=M+1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_7D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_70;JMP(BOOL_7)@SPA=MA=A-1A=A-1M=-1(END_BOOL_7)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_6@SPM=M-1A=MD=M@IF_FALSE_6D;JNE// push this 0@THISA=MD=M@SPA=MM=D@SPM=M+1// call Square.incSize 1// call Square.incSize 1// push ret_270@ret_270D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Square.incSize@Square.incSize0;JMP(ret_270)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_6@IF_END_60;JMP// label IF_FALSE_6(IF_FALSE_6)// label IF_END_6(IF_END_6)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 131// Push 131@131D=A@SPA=MM=D@SPM=M+1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_8D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_80;JMP(BOOL_8)@SPA=MA=A-1A=A-1M=-1(END_BOOL_8)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_7@SPM=M-1A=MD=M@IF_FALSE_7D;JNE// push constant 1// Push 1@1D=A@SPA=MM=D@SPM=M+1// pop this 1@THISA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_7@IF_END_70;JMP// label IF_FALSE_7(IF_FALSE_7)// label IF_END_7(IF_END_7)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 133// Push 133@133D=A@SPA=MM=D@SPM=M+1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_9D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_90;JMP(BOOL_9)@SPA=MA=A-1A=A-1M=-1(END_BOOL_9)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_8@SPM=M-1A=MD=M@IF_FALSE_8D;JNE// push constant 2// Push 2@2D=A@SPA=MM=D@SPM=M+1// pop this 1@THISA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_8@IF_END_80;JMP// label IF_FALSE_8(IF_FALSE_8)// label IF_END_8(IF_END_8)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 130// Push 130@130D=A@SPA=MM=D@SPM=M+1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_10D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_100;JMP(BOOL_10)@SPA=MA=A-1A=A-1M=-1(END_BOOL_10)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_9@SPM=M-1A=MD=M@IF_FALSE_9D;JNE// push constant 3// Push 3@3D=A@SPA=MM=D@SPM=M+1// pop this 1@THISA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_9@IF_END_90;JMP// label IF_FALSE_9(IF_FALSE_9)// label IF_END_9(IF_END_9)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 132// Push 132@132D=A@SPA=MM=D@SPM=M+1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_11D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_110;JMP(BOOL_11)@SPA=MA=A-1A=A-1M=-1(END_BOOL_11)@SPM=M-1// not@SPA=MA=A-1M=!M// if-goto IF_FALSE_10@SPM=M-1A=MD=M@IF_FALSE_10D;JNE// push constant 4// Push 4@4D=A@SPA=MM=D@SPM=M+1// pop this 1@THISA=MD=A@1D=D+A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto IF_END_10@IF_END_100;JMP// label IF_FALSE_10(IF_FALSE_10)// label IF_END_10(IF_END_10)// label while_loop_2(while_loop_2)// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// eq@SPA=MA=A-1D=MA=A-1D=M-D@BOOL_12D;JEQ@SPA=MA=A-1A=A-1M=0@END_BOOL_120;JMP(BOOL_12)@SPA=MA=A-1A=A-1M=-1(END_BOOL_12)@SPM=M-1// not@SPA=MA=A-1M=!M// not@SPA=MA=A-1M=!M// if-goto end_while_2@SPM=M-1A=MD=M@end_while_2D;JNE// call Keyboard.keyPressed 0// call Keyboard.keyPressed 0// push ret_271@ret_271D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 0@0D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto Keyboard.keyPressed@Keyboard.keyPressed0;JMP(ret_271)// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push pointer 0@3D=M@SPA=MM=D@SPM=M+1// call SquareGame.moveSquare 1// call SquareGame.moveSquare 1// push ret_272@ret_272D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto SquareGame.moveSquare@SquareGame.moveSquare0;JMP(ret_272)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// goto while_loop_2@while_loop_20;JMP// label end_while_2(end_while_2)// goto while_loop_0@while_loop_00;JMP// label end_while_0(end_while_0)// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// function Main.main 1(Main.main)// Push 0@0D=A@SPA=MM=D@SPM=M+1// call SquareGame.new 0// call SquareGame.new 0// push ret_273@ret_273D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 0@0D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto SquareGame.new@SquareGame.new0;JMP(ret_273)// pop local 0@LCLA=MD=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// call SquareGame.run 1// call SquareGame.run 1// push ret_274@ret_274D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto SquareGame.run@SquareGame.run0;JMP(ret_274)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push local 0@LCLA=MD=M@SPA=MM=D@SPM=M+1// call SquareGame.dispose 1// call SquareGame.dispose 1// push ret_275@ret_275D=A@SPA=MM=D@SPM=M+1// Push LCL@LCLD=M@SPA=MM=D@SPM=M+1// Push ARG@ARGD=M@SPA=MM=D@SPM=M+1// Push THIS@THISD=M@SPA=MM=D@SPM=M+1// Push THAT@THATD=M@SPA=MM=D@SPM=M+1// Push SP@SPD=M@SPA=MM=D@SPM=M+1// Push 5@5D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// Push 1@1D=A@SPA=MM=D@SPM=M+1// sub@SPA=MA=A-1D=MA=A-1M=M-D@SPM=M-1// pop ARG@SPM=M-1A=MD=M@ARGM=D// set LCL=SP@SPD=M@LCLM=D// goto SquareGame.dispose@SquareGame.dispose0;JMP(ret_275)// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D// push constant 0// Push 0@0D=A@SPA=MM=D@SPM=M+1// return// set R13=LCL@LCLD=M@R13M=D@5D=A@R13M=M-D// set R14=*R13@R13A=MD=M@R14M=D@SPM=M-1A=MD=M@ARGA=MM=D@ARGA=MD=A+1@SPM=D@R13M=M+1// set LCL=*R13@R13A=MD=M@LCLM=D@R13M=M+1// set ARG=*R13@R13A=MD=M@ARGM=D@R13M=M+1// set THIS=*R13@R13A=MD=M@THISM=D@R13M=M+1// set THAT=*R13@R13A=MD=M@THATM=D@R14A=M0;JMP// pop temp 0@5D=A@R13M=D@SPM=M-1A=MD=M@R13A=MM=D